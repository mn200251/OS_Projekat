GAS LISTING /tmp/cccnJrCb.s 			page 1


   1              		.file	"thread.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN7_thread13threadWrapperEv
   9              	_ZN7_thread13threadWrapperEv:
  10              	.LFB26:
  11              		.file 1 "src/thread.cpp"
   1:src/thread.cpp **** //
   2:src/thread.cpp **** // Created by os on 8/12/23.
   3:src/thread.cpp **** //
   4:src/thread.cpp **** 
   5:src/thread.cpp **** #include "../h/thread.hpp"
   6:src/thread.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/thread.cpp **** #include "../h/scheduler.hpp"
   8:src/thread.cpp **** #include "../h/syscall_c.hpp"
   9:src/thread.cpp **** #include "../h/print.hpp"
  10:src/thread.cpp **** #include "../h/list.hpp"
  11:src/thread.cpp **** 
  12:src/thread.cpp **** thread_t _thread::running = nullptr;
  13:src/thread.cpp **** 
  14:src/thread.cpp **** 
  15:src/thread.cpp **** int _thread::threadCreate (thread_t* handle, void(*start_routine)(void*), void* arg, void* stack_sp
  16:src/thread.cpp **** //    size_t blockNum = MemoryAllocator::convert2Blocks(sizeof(_thread*));
  17:src/thread.cpp **** //    handle = (_thread**) MemoryAllocator::mem_alloc(blockNum);
  18:src/thread.cpp **** 
  19:src/thread.cpp ****     size_t blockNum = MemoryAllocator::convert2Blocks(sizeof(_thread));
  20:src/thread.cpp ****     *handle = (_thread*) MemoryAllocator::mem_alloc(blockNum);
  21:src/thread.cpp **** 
  22:src/thread.cpp ****     (*handle)->finished = false;
  23:src/thread.cpp ****     (*handle)->timeSlice = 0;
  24:src/thread.cpp ****     (*handle)->body = start_routine;
  25:src/thread.cpp ****     (*handle)->arg = arg;
  26:src/thread.cpp **** 
  27:src/thread.cpp ****     if (start_routine != nullptr)
  28:src/thread.cpp ****         (*handle)->stack = (uint64*) stack_space;
  29:src/thread.cpp ****     else
  30:src/thread.cpp ****         (*handle)->stack = nullptr;
  31:src/thread.cpp **** 
  32:src/thread.cpp ****     // (*handle)->context.ra = (uint64) &threadWrapper;
  33:src/thread.cpp **** 
  34:src/thread.cpp ****     if ((*handle)->stack != nullptr)
  35:src/thread.cpp ****     {
  36:src/thread.cpp ****         (*handle)->context.sp = (uint64) &((*handle)->stack[DEFAULT_STACK_SIZE]);
  37:src/thread.cpp ****         (*handle)->context.ra = (uint64) &threadWrapper;
  38:src/thread.cpp ****     }
  39:src/thread.cpp ****     else
  40:src/thread.cpp ****     {
  41:src/thread.cpp ****         //asm volatile("sd ra, %0" : "=m" ((*handle)->context.ra));
  42:src/thread.cpp ****         (*handle)->context.ra = (uint64) &threadWrapper;
  43:src/thread.cpp ****         (*handle)->context.sp = 0;
  44:src/thread.cpp ****     }
  45:src/thread.cpp **** 
  46:src/thread.cpp ****     if ((*handle)->body != nullptr)
  47:src/thread.cpp ****         Scheduler::put(*handle);
GAS LISTING /tmp/cccnJrCb.s 			page 2


  48:src/thread.cpp **** 
  49:src/thread.cpp **** 
  50:src/thread.cpp **** //    printString("\nnew thread: ");
  51:src/thread.cpp **** //    printInteger((uint64) *handle);
  52:src/thread.cpp **** //    printString("\n");
  53:src/thread.cpp **** 
  54:src/thread.cpp ****     return 0;
  55:src/thread.cpp **** }
  56:src/thread.cpp **** 
  57:src/thread.cpp **** void _thread::threadWrapper()
  58:src/thread.cpp **** {
  12              		.loc 1 58 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  59:src/thread.cpp ****     Riscv::popSppSpie();
  22              		.loc 1 59 5
  23              		.loc 1 59 22 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  60:src/thread.cpp **** 
  61:src/thread.cpp ****     //_thread::running->body(handle->arg);
  62:src/thread.cpp ****     _thread::running->body(_thread::running->arg);
  26              		.loc 1 62 5 is_stmt 1
  27              		.loc 1 62 23 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70700 		ld	a4,0(a5)
  30              		.loc 1 62 27
  31 0024 03B58702 		ld	a0,40(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  63:src/thread.cpp **** 
  64:src/thread.cpp ****     thread_exit();
  34              		.loc 1 64 5 is_stmt 1
  35              		.loc 1 64 16 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  65:src/thread.cpp **** }
  38              		.loc 1 65 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
GAS LISTING /tmp/cccnJrCb.s 			page 3


  48              	.LFE26:
  50              		.align	2
  51              		.globl	_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_
  53              	_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_:
  54              	.LFB25:
  15:src/thread.cpp **** //    size_t blockNum = MemoryAllocator::convert2Blocks(sizeof(_thread*));
  55              		.loc 1 15 105 is_stmt 1
  56              		.cfi_startproc
  57              	.LVL3:
  58 0044 130101FD 		addi	sp,sp,-48
  59              		.cfi_def_cfa_offset 48
  60 0048 23341102 		sd	ra,40(sp)
  61 004c 23308102 		sd	s0,32(sp)
  62 0050 233C9100 		sd	s1,24(sp)
  63 0054 23382101 		sd	s2,16(sp)
  64 0058 23343101 		sd	s3,8(sp)
  65 005c 23304101 		sd	s4,0(sp)
  66              		.cfi_offset 1, -8
  67              		.cfi_offset 8, -16
  68              		.cfi_offset 9, -24
  69              		.cfi_offset 18, -32
  70              		.cfi_offset 19, -40
  71              		.cfi_offset 20, -48
  72 0060 13040103 		addi	s0,sp,48
  73              		.cfi_def_cfa 8, 0
  74 0064 93040500 		mv	s1,a0
  75 0068 13890500 		mv	s2,a1
  76 006c 93090600 		mv	s3,a2
  77 0070 138A0600 		mv	s4,a3
  19:src/thread.cpp ****     *handle = (_thread*) MemoryAllocator::mem_alloc(blockNum);
  78              		.loc 1 19 5
  19:src/thread.cpp ****     *handle = (_thread*) MemoryAllocator::mem_alloc(blockNum);
  79              		.loc 1 19 54 is_stmt 0
  80 0074 13058003 		li	a0,56
  81              	.LVL4:
  82 0078 97000000 		call	_ZN15MemoryAllocator14convert2BlocksEm@plt
  82      E7800000 
  83              	.LVL5:
  20:src/thread.cpp **** 
  84              		.loc 1 20 5 is_stmt 1
  20:src/thread.cpp **** 
  85              		.loc 1 20 52 is_stmt 0
  86 0080 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
  86      E7800000 
  87              	.LVL6:
  20:src/thread.cpp **** 
  88              		.loc 1 20 13
  89 0088 23B0A400 		sd	a0,0(s1)
  22:src/thread.cpp ****     (*handle)->timeSlice = 0;
  90              		.loc 1 22 5 is_stmt 1
  22:src/thread.cpp ****     (*handle)->timeSlice = 0;
  91              		.loc 1 22 25 is_stmt 0
  92 008c 23040500 		sb	zero,8(a0)
  23:src/thread.cpp ****     (*handle)->body = start_routine;
  93              		.loc 1 23 5 is_stmt 1
  23:src/thread.cpp ****     (*handle)->body = start_routine;
  94              		.loc 1 23 6 is_stmt 0
GAS LISTING /tmp/cccnJrCb.s 			page 4


  95 0090 83B70400 		ld	a5,0(s1)
  23:src/thread.cpp ****     (*handle)->body = start_routine;
  96              		.loc 1 23 26
  97 0094 23B80702 		sd	zero,48(a5)
  24:src/thread.cpp ****     (*handle)->arg = arg;
  98              		.loc 1 24 5 is_stmt 1
  24:src/thread.cpp ****     (*handle)->arg = arg;
  99              		.loc 1 24 6 is_stmt 0
 100 0098 83B70400 		ld	a5,0(s1)
  24:src/thread.cpp ****     (*handle)->arg = arg;
 101              		.loc 1 24 21
 102 009c 23B02701 		sd	s2,0(a5)
  25:src/thread.cpp **** 
 103              		.loc 1 25 5 is_stmt 1
  25:src/thread.cpp **** 
 104              		.loc 1 25 6 is_stmt 0
 105 00a0 83B70400 		ld	a5,0(s1)
  25:src/thread.cpp **** 
 106              		.loc 1 25 20
 107 00a4 23B43703 		sd	s3,40(a5)
  27:src/thread.cpp ****         (*handle)->stack = (uint64*) stack_space;
 108              		.loc 1 27 5 is_stmt 1
 109 00a8 63060906 		beqz	s2,.L4
  28:src/thread.cpp ****     else
 110              		.loc 1 28 9
  28:src/thread.cpp ****     else
 111              		.loc 1 28 10 is_stmt 0
 112 00ac 83B70400 		ld	a5,0(s1)
  28:src/thread.cpp ****     else
 113              		.loc 1 28 26
 114 00b0 23B84701 		sd	s4,16(a5)
 115              	.L5:
  34:src/thread.cpp ****     {
 116              		.loc 1 34 5 is_stmt 1
  34:src/thread.cpp ****     {
 117              		.loc 1 34 10 is_stmt 0
 118 00b4 03B70400 		ld	a4,0(s1)
  34:src/thread.cpp ****     {
 119              		.loc 1 34 20
 120 00b8 83370701 		ld	a5,16(a4)
  34:src/thread.cpp ****     {
 121              		.loc 1 34 5
 122 00bc 63820706 		beqz	a5,.L6
  36:src/thread.cpp ****         (*handle)->context.ra = (uint64) &threadWrapper;
 123              		.loc 1 36 9 is_stmt 1
  36:src/thread.cpp ****         (*handle)->context.ra = (uint64) &threadWrapper;
 124              		.loc 1 36 42 is_stmt 0
 125 00c0 B7860000 		li	a3,32768
 126 00c4 B387D700 		add	a5,a5,a3
  36:src/thread.cpp ****         (*handle)->context.ra = (uint64) &threadWrapper;
 127              		.loc 1 36 31
 128 00c8 2330F702 		sd	a5,32(a4)
  37:src/thread.cpp ****     }
 129              		.loc 1 37 9 is_stmt 1
  37:src/thread.cpp ****     }
 130              		.loc 1 37 10 is_stmt 0
 131 00cc 83B70400 		ld	a5,0(s1)
GAS LISTING /tmp/cccnJrCb.s 			page 5


  37:src/thread.cpp ****     }
 132              		.loc 1 37 31
 133 00d0 17070000 		lla	a4,_ZN7_thread13threadWrapperEv
 133      13070700 
 134 00d8 23BCE700 		sd	a4,24(a5)
 135              	.L7:
  46:src/thread.cpp ****         Scheduler::put(*handle);
 136              		.loc 1 46 5 is_stmt 1
  46:src/thread.cpp ****         Scheduler::put(*handle);
 137              		.loc 1 46 10 is_stmt 0
 138 00dc 03B50400 		ld	a0,0(s1)
  46:src/thread.cpp ****         Scheduler::put(*handle);
 139              		.loc 1 46 20
 140 00e0 83370500 		ld	a5,0(a0)
  46:src/thread.cpp ****         Scheduler::put(*handle);
 141              		.loc 1 46 5
 142 00e4 63860700 		beqz	a5,.L8
  47:src/thread.cpp **** 
 143              		.loc 1 47 9 is_stmt 1
  47:src/thread.cpp **** 
 144              		.loc 1 47 23 is_stmt 0
 145 00e8 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 145      E7800000 
 146              	.LVL7:
 147              	.L8:
  54:src/thread.cpp **** }
 148              		.loc 1 54 5 is_stmt 1
  55:src/thread.cpp **** 
 149              		.loc 1 55 1 is_stmt 0
 150 00f0 13050000 		li	a0,0
 151 00f4 83308102 		ld	ra,40(sp)
 152              		.cfi_remember_state
 153              		.cfi_restore 1
 154 00f8 03340102 		ld	s0,32(sp)
 155              		.cfi_restore 8
 156              		.cfi_def_cfa 2, 48
 157 00fc 83348101 		ld	s1,24(sp)
 158              		.cfi_restore 9
 159              	.LVL8:
 160 0100 03390101 		ld	s2,16(sp)
 161              		.cfi_restore 18
 162              	.LVL9:
 163 0104 83398100 		ld	s3,8(sp)
 164              		.cfi_restore 19
 165              	.LVL10:
 166 0108 033A0100 		ld	s4,0(sp)
 167              		.cfi_restore 20
 168              	.LVL11:
 169 010c 13010103 		addi	sp,sp,48
 170              		.cfi_def_cfa_offset 0
 171 0110 67800000 		jr	ra
 172              	.LVL12:
 173              	.L4:
 174              		.cfi_restore_state
  30:src/thread.cpp **** 
 175              		.loc 1 30 9 is_stmt 1
  30:src/thread.cpp **** 
GAS LISTING /tmp/cccnJrCb.s 			page 6


 176              		.loc 1 30 10 is_stmt 0
 177 0114 83B70400 		ld	a5,0(s1)
  30:src/thread.cpp **** 
 178              		.loc 1 30 26
 179 0118 23B80700 		sd	zero,16(a5)
 180 011c 6FF09FF9 		j	.L5
 181              	.L6:
  42:src/thread.cpp ****         (*handle)->context.sp = 0;
 182              		.loc 1 42 9 is_stmt 1
  42:src/thread.cpp ****         (*handle)->context.sp = 0;
 183              		.loc 1 42 31 is_stmt 0
 184 0120 97070000 		lla	a5,_ZN7_thread13threadWrapperEv
 184      93870700 
 185 0128 233CF700 		sd	a5,24(a4)
  43:src/thread.cpp ****     }
 186              		.loc 1 43 9 is_stmt 1
  43:src/thread.cpp ****     }
 187              		.loc 1 43 10 is_stmt 0
 188 012c 83B70400 		ld	a5,0(s1)
  43:src/thread.cpp ****     }
 189              		.loc 1 43 31
 190 0130 23B00702 		sd	zero,32(a5)
 191 0134 6FF09FFA 		j	.L7
 192              		.cfi_endproc
 193              	.LFE25:
 195              		.section	.rodata.str1.8,"aMS",@progbits,1
 196              		.align	3
 197              	.LC0:
 198 0000 2D2D2D2D 		.string	"-----------------------------------------\n"
 198      2D2D2D2D 
 198      2D2D2D2D 
 198      2D2D2D2D 
 198      2D2D2D2D 
 199 002b 00000000 		.align	3
 199      00
 200              	.LC1:
 201 0030 5072696E 		.string	"PrintAll: "
 201      74416C6C 
 201      3A2000
 202 003b 00000000 		.align	3
 202      00
 203              	.LC2:
 204 0040 0A00     		.string	"\n"
 205 0042 00000000 		.align	3
 205      0000
 206              	.LC3:
 207 0048 0A456E64 		.string	"\nEndprint!\n"
 207      7072696E 
 207      74210A00 
 208 0054 00000000 		.align	3
 209              	.LC4:
 210 0058 6F6C643A 		.string	"old: "
 210      2000
 211 005e 0000     		.align	3
 212              	.LC5:
 213 0060 0A6E6577 		.string	"\nnew running: "
 213      2072756E 
GAS LISTING /tmp/cccnJrCb.s 			page 7


 213      6E696E67 
 213      3A2000
 214              		.text
 215              		.align	2
 216              		.globl	_ZN7_thread14threadDispatchEv
 218              	_ZN7_thread14threadDispatchEv:
 219              	.LFB27:
  66:src/thread.cpp **** 
  67:src/thread.cpp **** void _thread::threadDispatch ()
  68:src/thread.cpp **** {
 220              		.loc 1 68 1 is_stmt 1
 221              		.cfi_startproc
 222 0138 130101FE 		addi	sp,sp,-32
 223              		.cfi_def_cfa_offset 32
 224 013c 233C1100 		sd	ra,24(sp)
 225 0140 23388100 		sd	s0,16(sp)
 226 0144 23349100 		sd	s1,8(sp)
 227 0148 23302101 		sd	s2,0(sp)
 228              		.cfi_offset 1, -8
 229              		.cfi_offset 8, -16
 230              		.cfi_offset 9, -24
 231              		.cfi_offset 18, -32
 232 014c 13040102 		addi	s0,sp,32
 233              		.cfi_def_cfa 8, 0
  69:src/thread.cpp ****     Scheduler::readyThreadQueue.printAll();
 234              		.loc 1 69 5
 235              	.LVL13:
 236              	.LBB4:
 237              	.LBB5:
 238              		.file 2 "src/../h/list.hpp"
   1:src/../h/list.hpp **** 
   2:src/../h/list.hpp **** 
   3:src/../h/list.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_LIST_HPP
   4:src/../h/list.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_LIST_HPP
   5:src/../h/list.hpp **** 
   6:src/../h/list.hpp **** #include "MemoryAllocator.hpp"
   7:src/../h/list.hpp **** #include "../h/print.hpp"
   8:src/../h/list.hpp **** 
   9:src/../h/list.hpp **** template<typename T>
  10:src/../h/list.hpp **** class List
  11:src/../h/list.hpp **** {
  12:src/../h/list.hpp **** private:
  13:src/../h/list.hpp ****     struct Elem
  14:src/../h/list.hpp ****     {
  15:src/../h/list.hpp ****         T *data;
  16:src/../h/list.hpp ****         Elem *next;
  17:src/../h/list.hpp **** 
  18:src/../h/list.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  19:src/../h/list.hpp ****     };
  20:src/../h/list.hpp **** 
  21:src/../h/list.hpp ****     Elem *head, *tail;
  22:src/../h/list.hpp **** 
  23:src/../h/list.hpp **** public:
  24:src/../h/list.hpp ****     List() : head(0), tail(0) {}
  25:src/../h/list.hpp **** 
  26:src/../h/list.hpp ****     List(const List<T> &) = delete;
  27:src/../h/list.hpp **** 
GAS LISTING /tmp/cccnJrCb.s 			page 8


  28:src/../h/list.hpp ****     List<T> &operator=(const List<T> &) = delete;
  29:src/../h/list.hpp **** 
  30:src/../h/list.hpp ****     void addFirst(T *data)
  31:src/../h/list.hpp ****     {
  32:src/../h/list.hpp ****         Elem *elem = new Elem(data, head);
  33:src/../h/list.hpp ****         head = elem;
  34:src/../h/list.hpp ****         if (!tail) { tail = head; }
  35:src/../h/list.hpp ****     }
  36:src/../h/list.hpp **** 
  37:src/../h/list.hpp ****     void addLast(T *data)
  38:src/../h/list.hpp ****     {
  39:src/../h/list.hpp ****         // Elem *elem = new Elem(data, 0);
  40:src/../h/list.hpp ****         size_t blockNum = MemoryAllocator::convert2Blocks(sizeof(Elem));
  41:src/../h/list.hpp ****         Elem *elem = (Elem*)MemoryAllocator::mem_alloc(blockNum);
  42:src/../h/list.hpp **** 
  43:src/../h/list.hpp ****         elem->data = data;
  44:src/../h/list.hpp ****         elem->next = nullptr;
  45:src/../h/list.hpp **** 
  46:src/../h/list.hpp ****         if (tail)
  47:src/../h/list.hpp ****         {
  48:src/../h/list.hpp ****             tail->next = elem;
  49:src/../h/list.hpp ****             tail = elem;
  50:src/../h/list.hpp ****         } else
  51:src/../h/list.hpp ****         {
  52:src/../h/list.hpp ****             head = tail = elem;
  53:src/../h/list.hpp ****         }
  54:src/../h/list.hpp **** 
  55:src/../h/list.hpp **** //        printString("\nSheduler.put(): ");
  56:src/../h/list.hpp **** //        printInteger((uint64) *elem->data);
  57:src/../h/list.hpp **** //        printString("\n");
  58:src/../h/list.hpp ****     }
  59:src/../h/list.hpp **** 
  60:src/../h/list.hpp ****     T *removeFirst()
  61:src/../h/list.hpp ****     {
  62:src/../h/list.hpp ****         if (!head) { return 0; }
  63:src/../h/list.hpp **** 
  64:src/../h/list.hpp ****         Elem *elem = head;
  65:src/../h/list.hpp ****         head = head->next;
  66:src/../h/list.hpp ****         if (!head) { tail = 0; }
  67:src/../h/list.hpp **** 
  68:src/../h/list.hpp ****         T *ret = elem->data;
  69:src/../h/list.hpp ****         // delete elem;
  70:src/../h/list.hpp ****         MemoryAllocator::mem_free(elem);
  71:src/../h/list.hpp **** 
  72:src/../h/list.hpp **** //        printString("\nSheduler.get(): ");
  73:src/../h/list.hpp **** //        printInteger((uint64) *ret);
  74:src/../h/list.hpp **** //        printString("\n");
  75:src/../h/list.hpp **** 
  76:src/../h/list.hpp ****         return ret;
  77:src/../h/list.hpp ****     }
  78:src/../h/list.hpp **** 
  79:src/../h/list.hpp ****     T *peekFirst()
  80:src/../h/list.hpp ****     {
  81:src/../h/list.hpp ****         if (!head) { return 0; }
  82:src/../h/list.hpp ****         return head->data;
  83:src/../h/list.hpp ****     }
  84:src/../h/list.hpp **** 
GAS LISTING /tmp/cccnJrCb.s 			page 9


  85:src/../h/list.hpp ****     T *removeLast()
  86:src/../h/list.hpp ****     {
  87:src/../h/list.hpp ****         if (!head) { return 0; }
  88:src/../h/list.hpp **** 
  89:src/../h/list.hpp ****         Elem *prev = 0;
  90:src/../h/list.hpp ****         for (Elem *curr = head; curr && curr != tail; curr = curr->next)
  91:src/../h/list.hpp ****         {
  92:src/../h/list.hpp ****             prev = curr;
  93:src/../h/list.hpp ****         }
  94:src/../h/list.hpp **** 
  95:src/../h/list.hpp ****         Elem *elem = tail;
  96:src/../h/list.hpp ****         if (prev) { prev->next = 0; }
  97:src/../h/list.hpp ****         else { head = 0; }
  98:src/../h/list.hpp ****         tail = prev;
  99:src/../h/list.hpp **** 
 100:src/../h/list.hpp ****         T *ret = elem->data;
 101:src/../h/list.hpp **** 
 102:src/../h/list.hpp ****         //delete elem;
 103:src/../h/list.hpp ****         MemoryAllocator::mem_free(elem);
 104:src/../h/list.hpp **** 
 105:src/../h/list.hpp ****         return ret;
 106:src/../h/list.hpp ****     }
 107:src/../h/list.hpp **** 
 108:src/../h/list.hpp ****     T *peekLast()
 109:src/../h/list.hpp ****     {
 110:src/../h/list.hpp ****         if (!tail) { return 0; }
 111:src/../h/list.hpp ****         return tail->data;
 112:src/../h/list.hpp ****     }
 113:src/../h/list.hpp **** 
 114:src/../h/list.hpp ****     void printAll()
 115:src/../h/list.hpp ****     {
 116:src/../h/list.hpp ****         Elem* temp = head;
 239              		.loc 2 116 15 is_stmt 0
 240 0150 97070000 		la	a5,_ZN9Scheduler16readyThreadQueueE
 240      83B70700 
 241 0158 83B40700 		ld	s1,0(a5)
 242              	.LVL14:
 117:src/../h/list.hpp ****         printString("-----------------------------------------\n");
 243              		.loc 2 117 20
 244 015c 17050000 		lla	a0,.LC0
 244      13050500 
 245 0164 97000000 		call	_Z11printStringPKc@plt
 245      E7800000 
 246              	.LVL15:
 118:src/../h/list.hpp ****         printString("PrintAll: ");
 247              		.loc 2 118 20
 248 016c 17050000 		lla	a0,.LC1
 248      13050500 
 249 0174 97000000 		call	_Z11printStringPKc@plt
 249      E7800000 
 250              	.LVL16:
 251              	.L12:
 119:src/../h/list.hpp ****         while(temp)
 252              		.loc 2 119 9 is_stmt 1
 253 017c 63840402 		beqz	s1,.L11
 120:src/../h/list.hpp ****         {
 121:src/../h/list.hpp ****             printInteger((size_t)temp->data);
GAS LISTING /tmp/cccnJrCb.s 			page 10


 254              		.loc 2 121 25 is_stmt 0
 255 0180 03B50400 		ld	a0,0(s1)
 256 0184 97000000 		call	_Z12printIntegerm@plt
 256      E7800000 
 257              	.LVL17:
 122:src/../h/list.hpp ****             printString("\n");
 258              		.loc 2 122 24
 259 018c 17050000 		lla	a0,.LC2
 259      13050500 
 260 0194 97000000 		call	_Z11printStringPKc@plt
 260      E7800000 
 261              	.LVL18:
 123:src/../h/list.hpp **** 
 124:src/../h/list.hpp ****             temp = temp->next;
 262              		.loc 2 124 13
 263 019c 83B48400 		ld	s1,8(s1)
 264              	.LVL19:
 119:src/../h/list.hpp ****         {
 265              		.loc 2 119 9
 266 01a0 6FF0DFFD 		j	.L12
 267              	.L11:
 125:src/../h/list.hpp ****         }
 126:src/../h/list.hpp ****         printString("\nEndprint!\n");
 268              		.loc 2 126 20
 269 01a4 17050000 		lla	a0,.LC3
 269      13050500 
 270 01ac 97000000 		call	_Z11printStringPKc@plt
 270      E7800000 
 271              	.LVL20:
 127:src/../h/list.hpp ****         printString("-----------------------------------------\n");
 272              		.loc 2 127 20
 273 01b4 17050000 		lla	a0,.LC0
 273      13050500 
 274 01bc 97000000 		call	_Z11printStringPKc@plt
 274      E7800000 
 275              	.LVL21:
 276              	.LBE5:
 277              	.LBE4:
  70:src/thread.cpp **** 
  71:src/thread.cpp ****     _thread *old = _thread::running;
 278              		.loc 1 71 5 is_stmt 1
 279              		.loc 1 71 14 is_stmt 0
 280 01c4 97040000 		ld	s1,.LANCHOR0
 280      83B40400 
 281              	.LVL22:
  72:src/thread.cpp **** 
  73:src/thread.cpp ****     if (!old->finished)
 282              		.loc 1 73 5 is_stmt 1
 283              		.loc 1 73 15 is_stmt 0
 284 01cc 83C78400 		lbu	a5,8(s1)
 285              		.loc 1 73 5
 286 01d0 639E0708 		bnez	a5,.L13
  74:src/thread.cpp ****     {
  75:src/thread.cpp ****         Scheduler::put(old);
 287              		.loc 1 75 9 is_stmt 1
 288              		.loc 1 75 23 is_stmt 0
 289 01d4 13850400 		mv	a0,s1
GAS LISTING /tmp/cccnJrCb.s 			page 11


 290 01d8 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 290      E7800000 
 291              	.LVL23:
  76:src/thread.cpp ****         _thread::running = Scheduler::get();
 292              		.loc 1 76 9 is_stmt 1
 293              		.loc 1 76 42 is_stmt 0
 294 01e0 97000000 		call	_ZN9Scheduler3getEv@plt
 294      E7800000 
 295              	.LVL24:
 296              		.loc 1 76 26
 297 01e8 17090000 		lla	s2,.LANCHOR0
 297      13090900 
 298 01f0 2330A900 		sd	a0,0(s2)
  77:src/thread.cpp **** 
  78:src/thread.cpp ****         printString("old: ");
 299              		.loc 1 78 9 is_stmt 1
 300              		.loc 1 78 20 is_stmt 0
 301 01f4 17050000 		lla	a0,.LC4
 301      13050500 
 302 01fc 97000000 		call	_Z11printStringPKc@plt
 302      E7800000 
 303              	.LVL25:
  79:src/thread.cpp ****         printInteger((uint64) old);
 304              		.loc 1 79 9 is_stmt 1
 305              		.loc 1 79 21 is_stmt 0
 306 0204 13850400 		mv	a0,s1
 307 0208 97000000 		call	_Z12printIntegerm@plt
 307      E7800000 
 308              	.LVL26:
  80:src/thread.cpp ****         printString("\nnew running: ");
 309              		.loc 1 80 9 is_stmt 1
 310              		.loc 1 80 20 is_stmt 0
 311 0210 17050000 		lla	a0,.LC5
 311      13050500 
 312 0218 97000000 		call	_Z11printStringPKc@plt
 312      E7800000 
 313              	.LVL27:
  81:src/thread.cpp ****         printInteger((uint64) _thread::running);
 314              		.loc 1 81 9 is_stmt 1
 315              		.loc 1 81 21 is_stmt 0
 316 0220 03350900 		ld	a0,0(s2)
 317 0224 97000000 		call	_Z12printIntegerm@plt
 317      E7800000 
 318              	.LVL28:
  82:src/thread.cpp ****         printString("\n");
 319              		.loc 1 82 9 is_stmt 1
 320              		.loc 1 82 20 is_stmt 0
 321 022c 17050000 		lla	a0,.LC2
 321      13050500 
 322 0234 97000000 		call	_Z11printStringPKc@plt
 322      E7800000 
 323              	.LVL29:
  83:src/thread.cpp **** 
  84:src/thread.cpp ****         if(old != _thread::running)
 324              		.loc 1 84 9 is_stmt 1
 325              		.loc 1 84 16 is_stmt 0
 326 023c 83350900 		ld	a1,0(s2)
GAS LISTING /tmp/cccnJrCb.s 			page 12


 327              		.loc 1 84 9
 328 0240 638A9500 		beq	a1,s1,.L10
  85:src/thread.cpp ****             contextSwitch(&old->context, &_thread::running->context);
 329              		.loc 1 85 13 is_stmt 1
 330              		.loc 1 85 26 is_stmt 0
 331 0244 93858501 		addi	a1,a1,24
 332 0248 13858401 		addi	a0,s1,24
 333 024c 97000000 		call	contextSwitch@plt
 333      E7800000 
 334              	.LVL30:
 335              	.L10:
  86:src/thread.cpp ****     }
  87:src/thread.cpp ****     else
  88:src/thread.cpp ****     {
  89:src/thread.cpp ****         // remove threads that are waiting for this one to finish
  90:src/thread.cpp **** 
  91:src/thread.cpp ****         // thread finished -> dealloc the stack and thread
  92:src/thread.cpp ****         MemoryAllocator::mem_free(old->stack);
  93:src/thread.cpp ****         MemoryAllocator::mem_free(old);
  94:src/thread.cpp ****         //MemoryAllocator::mem_free(&old);
  95:src/thread.cpp **** 
  96:src/thread.cpp ****         _thread::running = Scheduler::get();
  97:src/thread.cpp **** 
  98:src/thread.cpp ****         if (_thread::running)
  99:src/thread.cpp ****             contextSwitchThreadEnded(&_thread::running->context);
 100:src/thread.cpp ****     }
 101:src/thread.cpp **** }
 336              		.loc 1 101 1
 337 0254 83308101 		ld	ra,24(sp)
 338              		.cfi_remember_state
 339              		.cfi_restore 1
 340 0258 03340101 		ld	s0,16(sp)
 341              		.cfi_restore 8
 342              		.cfi_def_cfa 2, 32
 343 025c 83348100 		ld	s1,8(sp)
 344              		.cfi_restore 9
 345              	.LVL31:
 346 0260 03390100 		ld	s2,0(sp)
 347              		.cfi_restore 18
 348 0264 13010102 		addi	sp,sp,32
 349              		.cfi_def_cfa_offset 0
 350 0268 67800000 		jr	ra
 351              	.LVL32:
 352              	.L13:
 353              		.cfi_restore_state
  92:src/thread.cpp ****         MemoryAllocator::mem_free(old);
 354              		.loc 1 92 9 is_stmt 1
  92:src/thread.cpp ****         MemoryAllocator::mem_free(old);
 355              		.loc 1 92 34 is_stmt 0
 356 026c 03B50401 		ld	a0,16(s1)
 357 0270 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 357      E7800000 
 358              	.LVL33:
  93:src/thread.cpp ****         //MemoryAllocator::mem_free(&old);
 359              		.loc 1 93 9 is_stmt 1
  93:src/thread.cpp ****         //MemoryAllocator::mem_free(&old);
 360              		.loc 1 93 34 is_stmt 0
GAS LISTING /tmp/cccnJrCb.s 			page 13


 361 0278 13850400 		mv	a0,s1
 362 027c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 362      E7800000 
 363              	.LVL34:
  96:src/thread.cpp **** 
 364              		.loc 1 96 9 is_stmt 1
  96:src/thread.cpp **** 
 365              		.loc 1 96 42 is_stmt 0
 366 0284 97000000 		call	_ZN9Scheduler3getEv@plt
 366      E7800000 
 367              	.LVL35:
  96:src/thread.cpp **** 
 368              		.loc 1 96 26
 369 028c 97070000 		sd	a0,.LANCHOR0,a5
 369      23B0A700 
  98:src/thread.cpp ****             contextSwitchThreadEnded(&_thread::running->context);
 370              		.loc 1 98 9 is_stmt 1
 371 0294 E30005FC 		beqz	a0,.L10
  99:src/thread.cpp ****     }
 372              		.loc 1 99 13
  99:src/thread.cpp ****     }
 373              		.loc 1 99 37 is_stmt 0
 374 0298 13058501 		addi	a0,a0,24
 375 029c 97000000 		call	contextSwitchThreadEnded@plt
 375      E7800000 
 376              	.LVL36:
 377              		.loc 1 101 1
 378 02a4 6FF01FFB 		j	.L10
 379              		.cfi_endproc
 380              	.LFE27:
 382              		.globl	_ZN7_thread7runningE
 383              		.bss
 384              		.align	3
 385              		.set	.LANCHOR0,. + 0
 388              	_ZN7_thread7runningE:
 389 0000 00000000 		.zero	8
 389      00000000 
 390              		.text
 391              	.Letext0:
 392              		.file 3 "src/../h/../lib/hw.h"
 393              		.file 4 "src/../h/riscv.hpp"
 394              		.file 5 "src/../h/thread.hpp"
 395              		.file 6 "src/../h/MemoryAllocator.hpp"
 396              		.file 7 "src/../h/scheduler.hpp"
 397              		.file 8 "src/../h/../h/print.hpp"
 398              		.file 9 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/cccnJrCb.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 thread.cpp
     /tmp/cccnJrCb.s:9      .text:0000000000000000 _ZN7_thread13threadWrapperEv
     /tmp/cccnJrCb.s:13     .text:0000000000000000 .L0 
     /tmp/cccnJrCb.s:14     .text:0000000000000000 .L0 
     /tmp/cccnJrCb.s:15     .text:0000000000000004 .L0 
     /tmp/cccnJrCb.s:18     .text:000000000000000c .L0 
     /tmp/cccnJrCb.s:19     .text:000000000000000c .L0 
     /tmp/cccnJrCb.s:21     .text:0000000000000010 .L0 
     /tmp/cccnJrCb.s:23     .text:0000000000000010 .L0 
     /tmp/cccnJrCb.s:24     .text:0000000000000010 .L0 
     /tmp/cccnJrCb.s:27     .text:0000000000000018 .L0 
     /tmp/cccnJrCb.s:28     .text:0000000000000018 .L0 
     /tmp/cccnJrCb.s:31     .text:0000000000000024 .L0 
     /tmp/cccnJrCb.s:35     .text:000000000000002c .L0 
     /tmp/cccnJrCb.s:36     .text:000000000000002c .L0 
     /tmp/cccnJrCb.s:39     .text:0000000000000034 .L0 
     /tmp/cccnJrCb.s:40     .text:0000000000000038 .L0 
     /tmp/cccnJrCb.s:42     .text:000000000000003c .L0 
     /tmp/cccnJrCb.s:43     .text:000000000000003c .L0 
     /tmp/cccnJrCb.s:45     .text:0000000000000040 .L0 
     /tmp/cccnJrCb.s:47     .text:0000000000000044 .L0 
     /tmp/cccnJrCb.s:53     .text:0000000000000044 _ZN7_thread12threadCreateEPPS_PFvPvES2_S2_
     /tmp/cccnJrCb.s:56     .text:0000000000000044 .L0 
     /tmp/cccnJrCb.s:58     .text:0000000000000044 .L0 
     /tmp/cccnJrCb.s:59     .text:0000000000000048 .L0 
     /tmp/cccnJrCb.s:66     .text:0000000000000060 .L0 
     /tmp/cccnJrCb.s:67     .text:0000000000000060 .L0 
     /tmp/cccnJrCb.s:68     .text:0000000000000060 .L0 
     /tmp/cccnJrCb.s:69     .text:0000000000000060 .L0 
     /tmp/cccnJrCb.s:70     .text:0000000000000060 .L0 
     /tmp/cccnJrCb.s:71     .text:0000000000000060 .L0 
     /tmp/cccnJrCb.s:73     .text:0000000000000064 .L0 
     /tmp/cccnJrCb.s:79     .text:0000000000000074 .L0 
     /tmp/cccnJrCb.s:80     .text:0000000000000074 .L0 
     /tmp/cccnJrCb.s:85     .text:0000000000000080 .L0 
     /tmp/cccnJrCb.s:86     .text:0000000000000080 .L0 
     /tmp/cccnJrCb.s:89     .text:0000000000000088 .L0 
     /tmp/cccnJrCb.s:91     .text:000000000000008c .L0 
     /tmp/cccnJrCb.s:92     .text:000000000000008c .L0 
     /tmp/cccnJrCb.s:94     .text:0000000000000090 .L0 
     /tmp/cccnJrCb.s:95     .text:0000000000000090 .L0 
     /tmp/cccnJrCb.s:97     .text:0000000000000094 .L0 
     /tmp/cccnJrCb.s:99     .text:0000000000000098 .L0 
     /tmp/cccnJrCb.s:100    .text:0000000000000098 .L0 
     /tmp/cccnJrCb.s:102    .text:000000000000009c .L0 
     /tmp/cccnJrCb.s:104    .text:00000000000000a0 .L0 
     /tmp/cccnJrCb.s:105    .text:00000000000000a0 .L0 
     /tmp/cccnJrCb.s:107    .text:00000000000000a4 .L0 
     /tmp/cccnJrCb.s:109    .text:00000000000000a8 .L0 
     /tmp/cccnJrCb.s:111    .text:00000000000000ac .L0 
     /tmp/cccnJrCb.s:112    .text:00000000000000ac .L0 
     /tmp/cccnJrCb.s:114    .text:00000000000000b0 .L0 
     /tmp/cccnJrCb.s:117    .text:00000000000000b4 .L0 
     /tmp/cccnJrCb.s:118    .text:00000000000000b4 .L0 
     /tmp/cccnJrCb.s:120    .text:00000000000000b8 .L0 
     /tmp/cccnJrCb.s:122    .text:00000000000000bc .L0 
GAS LISTING /tmp/cccnJrCb.s 			page 15


     /tmp/cccnJrCb.s:124    .text:00000000000000c0 .L0 
     /tmp/cccnJrCb.s:125    .text:00000000000000c0 .L0 
     /tmp/cccnJrCb.s:128    .text:00000000000000c8 .L0 
     /tmp/cccnJrCb.s:130    .text:00000000000000cc .L0 
     /tmp/cccnJrCb.s:131    .text:00000000000000cc .L0 
     /tmp/cccnJrCb.s:133    .text:00000000000000d0 .L0 
     /tmp/cccnJrCb.s:137    .text:00000000000000dc .L0 
     /tmp/cccnJrCb.s:138    .text:00000000000000dc .L0 
     /tmp/cccnJrCb.s:140    .text:00000000000000e0 .L0 
     /tmp/cccnJrCb.s:142    .text:00000000000000e4 .L0 
     /tmp/cccnJrCb.s:144    .text:00000000000000e8 .L0 
     /tmp/cccnJrCb.s:145    .text:00000000000000e8 .L0 
     /tmp/cccnJrCb.s:149    .text:00000000000000f0 .L0 
     /tmp/cccnJrCb.s:150    .text:00000000000000f0 .L0 
     /tmp/cccnJrCb.s:152    .text:00000000000000f8 .L0 
     /tmp/cccnJrCb.s:153    .text:00000000000000f8 .L0 
     /tmp/cccnJrCb.s:155    .text:00000000000000fc .L0 
     /tmp/cccnJrCb.s:156    .text:00000000000000fc .L0 
     /tmp/cccnJrCb.s:158    .text:0000000000000100 .L0 
     /tmp/cccnJrCb.s:161    .text:0000000000000104 .L0 
     /tmp/cccnJrCb.s:164    .text:0000000000000108 .L0 
     /tmp/cccnJrCb.s:167    .text:000000000000010c .L0 
     /tmp/cccnJrCb.s:170    .text:0000000000000110 .L0 
     /tmp/cccnJrCb.s:174    .text:0000000000000114 .L0 
     /tmp/cccnJrCb.s:176    .text:0000000000000114 .L0 
     /tmp/cccnJrCb.s:177    .text:0000000000000114 .L0 
     /tmp/cccnJrCb.s:179    .text:0000000000000118 .L0 
     /tmp/cccnJrCb.s:183    .text:0000000000000120 .L0 
     /tmp/cccnJrCb.s:184    .text:0000000000000120 .L0 
     /tmp/cccnJrCb.s:187    .text:000000000000012c .L0 
     /tmp/cccnJrCb.s:188    .text:000000000000012c .L0 
     /tmp/cccnJrCb.s:190    .text:0000000000000130 .L0 
     /tmp/cccnJrCb.s:192    .text:0000000000000138 .L0 
     /tmp/cccnJrCb.s:218    .text:0000000000000138 _ZN7_thread14threadDispatchEv
     /tmp/cccnJrCb.s:221    .text:0000000000000138 .L0 
     /tmp/cccnJrCb.s:222    .text:0000000000000138 .L0 
     /tmp/cccnJrCb.s:223    .text:000000000000013c .L0 
     /tmp/cccnJrCb.s:228    .text:000000000000014c .L0 
     /tmp/cccnJrCb.s:229    .text:000000000000014c .L0 
     /tmp/cccnJrCb.s:230    .text:000000000000014c .L0 
     /tmp/cccnJrCb.s:231    .text:000000000000014c .L0 
     /tmp/cccnJrCb.s:233    .text:0000000000000150 .L0 
     /tmp/cccnJrCb.s:239    .text:0000000000000150 .L0 
     /tmp/cccnJrCb.s:240    .text:0000000000000150 .L0 
     /tmp/cccnJrCb.s:244    .text:000000000000015c .L0 
     /tmp/cccnJrCb.s:248    .text:000000000000016c .L0 
     /tmp/cccnJrCb.s:253    .text:000000000000017c .L0 
     /tmp/cccnJrCb.s:255    .text:0000000000000180 .L0 
     /tmp/cccnJrCb.s:259    .text:000000000000018c .L0 
     /tmp/cccnJrCb.s:263    .text:000000000000019c .L0 
     /tmp/cccnJrCb.s:266    .text:00000000000001a0 .L0 
     /tmp/cccnJrCb.s:269    .text:00000000000001a4 .L0 
     /tmp/cccnJrCb.s:273    .text:00000000000001b4 .L0 
     /tmp/cccnJrCb.s:279    .text:00000000000001c4 .L0 
     /tmp/cccnJrCb.s:280    .text:00000000000001c4 .L0 
     /tmp/cccnJrCb.s:283    .text:00000000000001cc .L0 
     /tmp/cccnJrCb.s:284    .text:00000000000001cc .L0 
GAS LISTING /tmp/cccnJrCb.s 			page 16


     /tmp/cccnJrCb.s:286    .text:00000000000001d0 .L0 
     /tmp/cccnJrCb.s:288    .text:00000000000001d4 .L0 
     /tmp/cccnJrCb.s:289    .text:00000000000001d4 .L0 
     /tmp/cccnJrCb.s:293    .text:00000000000001e0 .L0 
     /tmp/cccnJrCb.s:294    .text:00000000000001e0 .L0 
     /tmp/cccnJrCb.s:297    .text:00000000000001e8 .L0 
     /tmp/cccnJrCb.s:300    .text:00000000000001f4 .L0 
     /tmp/cccnJrCb.s:301    .text:00000000000001f4 .L0 
     /tmp/cccnJrCb.s:305    .text:0000000000000204 .L0 
     /tmp/cccnJrCb.s:306    .text:0000000000000204 .L0 
     /tmp/cccnJrCb.s:310    .text:0000000000000210 .L0 
     /tmp/cccnJrCb.s:311    .text:0000000000000210 .L0 
     /tmp/cccnJrCb.s:315    .text:0000000000000220 .L0 
     /tmp/cccnJrCb.s:316    .text:0000000000000220 .L0 
     /tmp/cccnJrCb.s:320    .text:000000000000022c .L0 
     /tmp/cccnJrCb.s:321    .text:000000000000022c .L0 
     /tmp/cccnJrCb.s:325    .text:000000000000023c .L0 
     /tmp/cccnJrCb.s:326    .text:000000000000023c .L0 
     /tmp/cccnJrCb.s:328    .text:0000000000000240 .L0 
     /tmp/cccnJrCb.s:330    .text:0000000000000244 .L0 
     /tmp/cccnJrCb.s:331    .text:0000000000000244 .L0 
     /tmp/cccnJrCb.s:337    .text:0000000000000254 .L0 
     /tmp/cccnJrCb.s:338    .text:0000000000000258 .L0 
     /tmp/cccnJrCb.s:339    .text:0000000000000258 .L0 
     /tmp/cccnJrCb.s:341    .text:000000000000025c .L0 
     /tmp/cccnJrCb.s:342    .text:000000000000025c .L0 
     /tmp/cccnJrCb.s:344    .text:0000000000000260 .L0 
     /tmp/cccnJrCb.s:347    .text:0000000000000264 .L0 
     /tmp/cccnJrCb.s:349    .text:0000000000000268 .L0 
     /tmp/cccnJrCb.s:353    .text:000000000000026c .L0 
     /tmp/cccnJrCb.s:355    .text:000000000000026c .L0 
     /tmp/cccnJrCb.s:356    .text:000000000000026c .L0 
     /tmp/cccnJrCb.s:360    .text:0000000000000278 .L0 
     /tmp/cccnJrCb.s:361    .text:0000000000000278 .L0 
     /tmp/cccnJrCb.s:365    .text:0000000000000284 .L0 
     /tmp/cccnJrCb.s:366    .text:0000000000000284 .L0 
     /tmp/cccnJrCb.s:369    .text:000000000000028c .L0 
     /tmp/cccnJrCb.s:371    .text:0000000000000294 .L0 
     /tmp/cccnJrCb.s:373    .text:0000000000000298 .L0 
     /tmp/cccnJrCb.s:374    .text:0000000000000298 .L0 
     /tmp/cccnJrCb.s:378    .text:00000000000002a4 .L0 
     /tmp/cccnJrCb.s:379    .text:00000000000002a8 .L0 
     /tmp/cccnJrCb.s:388    .bss:0000000000000000 _ZN7_thread7runningE
     /tmp/cccnJrCb.s:385    .bss:0000000000000000 .LANCHOR0
     /tmp/cccnJrCb.s:399    .text:00000000000002a8 .L0 
     /tmp/cccnJrCb.s:28     .text:0000000000000018 .L0 
     /tmp/cccnJrCb.s:133    .text:00000000000000d0 .L0 
     /tmp/cccnJrCb.s:184    .text:0000000000000120 .L0 
     /tmp/cccnJrCb.s:240    .text:0000000000000150 .L0 
     /tmp/cccnJrCb.s:197    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cccnJrCb.s:244    .text:000000000000015c .L0 
     /tmp/cccnJrCb.s:200    .rodata.str1.8:0000000000000030 .LC1
     /tmp/cccnJrCb.s:248    .text:000000000000016c .L0 
     /tmp/cccnJrCb.s:203    .rodata.str1.8:0000000000000040 .LC2
     /tmp/cccnJrCb.s:259    .text:000000000000018c .L0 
     /tmp/cccnJrCb.s:206    .rodata.str1.8:0000000000000048 .LC3
     /tmp/cccnJrCb.s:269    .text:00000000000001a4 .L0 
GAS LISTING /tmp/cccnJrCb.s 			page 17


     /tmp/cccnJrCb.s:273    .text:00000000000001b4 .L0 
     /tmp/cccnJrCb.s:280    .text:00000000000001c4 .L0 
     /tmp/cccnJrCb.s:297    .text:00000000000001e8 .L0 
     /tmp/cccnJrCb.s:209    .rodata.str1.8:0000000000000058 .LC4
     /tmp/cccnJrCb.s:301    .text:00000000000001f4 .L0 
     /tmp/cccnJrCb.s:212    .rodata.str1.8:0000000000000060 .LC5
     /tmp/cccnJrCb.s:311    .text:0000000000000210 .L0 
     /tmp/cccnJrCb.s:321    .text:000000000000022c .L0 
     /tmp/cccnJrCb.s:369    .text:000000000000028c .L0 
     /tmp/cccnJrCb.s:173    .text:0000000000000114 .L4
     /tmp/cccnJrCb.s:181    .text:0000000000000120 .L6
     /tmp/cccnJrCb.s:147    .text:00000000000000f0 .L8
     /tmp/cccnJrCb.s:115    .text:00000000000000b4 .L5
     /tmp/cccnJrCb.s:135    .text:00000000000000dc .L7
     /tmp/cccnJrCb.s:267    .text:00000000000001a4 .L11
     /tmp/cccnJrCb.s:251    .text:000000000000017c .L12
     /tmp/cccnJrCb.s:352    .text:000000000000026c .L13
     /tmp/cccnJrCb.s:335    .text:0000000000000254 .L10
     /tmp/cccnJrCb.s:1530   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cccnJrCb.s:2754   .debug_str:0000000000000643 .LASF124
     /tmp/cccnJrCb.s:2570   .debug_str:00000000000000ad .LASF125
     /tmp/cccnJrCb.s:2608   .debug_str:00000000000001b0 .LASF126
     /tmp/cccnJrCb.s:5      .text:0000000000000000 .Ltext0
     /tmp/cccnJrCb.s:391    .text:00000000000002a8 .Letext0
     /tmp/cccnJrCb.s:2538   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cccnJrCb.s:2682   .debug_str:0000000000000421 .LASF0
     /tmp/cccnJrCb.s:2698   .debug_str:0000000000000485 .LASF1
     /tmp/cccnJrCb.s:2664   .debug_str:000000000000039c .LASF2
     /tmp/cccnJrCb.s:2638   .debug_str:00000000000002db .LASF4
     /tmp/cccnJrCb.s:2734   .debug_str:00000000000005ad .LASF3
     /tmp/cccnJrCb.s:2566   .debug_str:0000000000000096 .LASF5
     /tmp/cccnJrCb.s:2704   .debug_str:00000000000004b4 .LASF6
     /tmp/cccnJrCb.s:2680   .debug_str:000000000000040e .LASF7
     /tmp/cccnJrCb.s:2772   .debug_str:00000000000007b6 .LASF8
     /tmp/cccnJrCb.s:2624   .debug_str:0000000000000263 .LASF9
     /tmp/cccnJrCb.s:2714   .debug_str:0000000000000508 .LASF10
     /tmp/cccnJrCb.s:2758   .debug_str:0000000000000722 .LASF11
     /tmp/cccnJrCb.s:2568   .debug_str:000000000000009d .LASF12
     /tmp/cccnJrCb.s:2548   .debug_str:0000000000000027 .LASF13
     /tmp/cccnJrCb.s:2578   .debug_str:00000000000000ec .LASF14
     /tmp/cccnJrCb.s:2726   .debug_str:0000000000000551 .LASF15
     /tmp/cccnJrCb.s:2584   .debug_str:000000000000010b .LASF16
     /tmp/cccnJrCb.s:2696   .debug_str:000000000000047f .LASF74
     /tmp/cccnJrCb.s:2724   .debug_str:0000000000000546 .LASF49
     /tmp/cccnJrCb.s:2794   .debug_str:000000000000087c .LASF51
     /tmp/cccnJrCb.s:2550   .debug_str:0000000000000037 .LASF17
     /tmp/cccnJrCb.s:2740   .debug_str:00000000000005d5 .LASF19
     /tmp/cccnJrCb.s:2596   .debug_str:0000000000000176 .LASF21
     /tmp/cccnJrCb.s:2594   .debug_str:0000000000000161 .LASF23
     /tmp/cccnJrCb.s:2736   .debug_str:00000000000005bf .LASF18
     /tmp/cccnJrCb.s:2718   .debug_str:0000000000000520 .LASF20
     /tmp/cccnJrCb.s:2752   .debug_str:000000000000063c .LASF22
     /tmp/cccnJrCb.s:2746   .debug_str:0000000000000609 .LASF24
     /tmp/cccnJrCb.s:2614   .debug_str:00000000000001f2 .LASF25
     /tmp/cccnJrCb.s:2586   .debug_str:0000000000000121 .LASF26
     /tmp/cccnJrCb.s:2544   .debug_str:0000000000000010 .LASF27
     /tmp/cccnJrCb.s:2630   .debug_str:00000000000002a4 .LASF28
GAS LISTING /tmp/cccnJrCb.s 			page 18


     /tmp/cccnJrCb.s:2600   .debug_str:0000000000000187 .LASF29
     /tmp/cccnJrCb.s:2784   .debug_str:0000000000000841 .LASF30
     /tmp/cccnJrCb.s:2804   .debug_str:00000000000008e0 .LASF31
     /tmp/cccnJrCb.s:2602   .debug_str:000000000000018f .LASF32
     /tmp/cccnJrCb.s:2684   .debug_str:000000000000042e .LASF33
     /tmp/cccnJrCb.s:2790   .debug_str:0000000000000864 .LASF34
     /tmp/cccnJrCb.s:2562   .debug_str:000000000000008a .LASF35
     /tmp/cccnJrCb.s:2612   .debug_str:00000000000001df .LASF36
     /tmp/cccnJrCb.s:2618   .debug_str:0000000000000219 .LASF37
     /tmp/cccnJrCb.s:2750   .debug_str:000000000000062a .LASF38
     /tmp/cccnJrCb.s:2560   .debug_str:0000000000000084 .LASF39
     /tmp/cccnJrCb.s:2810   .debug_str:0000000000000915 .LASF40
     /tmp/cccnJrCb.s:2802   .debug_str:00000000000008d5 .LASF41
     /tmp/cccnJrCb.s:2732   .debug_str:0000000000000595 .LASF42
     /tmp/cccnJrCb.s:2646   .debug_str:00000000000002f9 .LASF43
     /tmp/cccnJrCb.s:2742   .debug_str:00000000000005ea .LASF44
     /tmp/cccnJrCb.s:2576   .debug_str:00000000000000e2 .LASF45
     /tmp/cccnJrCb.s:2632   .debug_str:00000000000002b8 .LASF46
     /tmp/cccnJrCb.s:2672   .debug_str:00000000000003c3 .LASF47
     /tmp/cccnJrCb.s:2626   .debug_str:0000000000000271 .LASF48
     /tmp/cccnJrCb.s:2738   .debug_str:00000000000005c6 .LASF50
     /tmp/cccnJrCb.s:2572   .debug_str:00000000000000bc .LASF52
     /tmp/cccnJrCb.s:2778   .debug_str:00000000000007e9 .LASF62
     /tmp/cccnJrCb.s:2650   .debug_str:000000000000030c .LASF64
     /tmp/cccnJrCb.s:2634   .debug_str:00000000000002ce .LASF53
     /tmp/cccnJrCb.s:2556   .debug_str:0000000000000070 .LASF54
     /tmp/cccnJrCb.s:2644   .debug_str:00000000000002f4 .LASF55
     /tmp/cccnJrCb.s:2642   .debug_str:00000000000002eb .LASF56
     /tmp/cccnJrCb.s:2688   .debug_str:0000000000000444 .LASF57
     /tmp/cccnJrCb.s:2648   .debug_str:0000000000000304 .LASF58
     /tmp/cccnJrCb.s:2694   .debug_str:0000000000000475 .LASF59
     /tmp/cccnJrCb.s:2598   .debug_str:000000000000017f .LASF76
     /tmp/cccnJrCb.s:2554   .debug_str:0000000000000063 .LASF60
     /tmp/cccnJrCb.s:2766   .debug_str:0000000000000751 .LASF61
     /tmp/cccnJrCb.s:2658   .debug_str:000000000000035e .LASF63
     /tmp/cccnJrCb.s:2628   .debug_str:0000000000000287 .LASF65
     /tmp/cccnJrCb.s:2546   .debug_str:0000000000000018 .LASF66
     /tmp/cccnJrCb.s:2770   .debug_str:0000000000000798 .LASF67
     /tmp/cccnJrCb.s:2604   .debug_str:00000000000001a3 .LASF68
     /tmp/cccnJrCb.s:2540   .debug_str:0000000000000000 .LASF69
     /tmp/cccnJrCb.s:2606   .debug_str:00000000000001a8 .LASF70
     /tmp/cccnJrCb.s:2706   .debug_str:00000000000004c7 .LASF71
     /tmp/cccnJrCb.s:2788   .debug_str:000000000000085f .LASF72
     /tmp/cccnJrCb.s:2722   .debug_str:0000000000000541 .LASF73
     /tmp/cccnJrCb.s:2676   .debug_str:00000000000003d7 .LASF75
     /tmp/cccnJrCb.s:2716   .debug_str:0000000000000517 .LASF77
     /tmp/cccnJrCb.s:2542   .debug_str:0000000000000009 .LASF78
     /tmp/cccnJrCb.s:2588   .debug_str:0000000000000135 .LASF79
     /tmp/cccnJrCb.s:2786   .debug_str:0000000000000855 .LASF80
     /tmp/cccnJrCb.s:2708   .debug_str:00000000000004cc .LASF81
     /tmp/cccnJrCb.s:2700   .debug_str:0000000000000498 .LASF82
     /tmp/cccnJrCb.s:2620   .debug_str:000000000000021f .LASF83
     /tmp/cccnJrCb.s:2774   .debug_str:00000000000007c6 .LASF84
     /tmp/cccnJrCb.s:2780   .debug_str:00000000000007fe .LASF86
     /tmp/cccnJrCb.s:2640   .debug_str:00000000000002e2 .LASF85
     /tmp/cccnJrCb.s:2622   .debug_str:0000000000000242 .LASF87
     /tmp/cccnJrCb.s:2686   .debug_str:0000000000000435 .LASF88
GAS LISTING /tmp/cccnJrCb.s 			page 19


     /tmp/cccnJrCb.s:2678   .debug_str:00000000000003e7 .LASF89
     /tmp/cccnJrCb.s:2710   .debug_str:00000000000004f5 .LASF90
     /tmp/cccnJrCb.s:2610   .debug_str:00000000000001ce .LASF127
     /tmp/cccnJrCb.s:2592   .debug_str:000000000000014d .LASF128
     /tmp/cccnJrCb.s:2768   .debug_str:000000000000077c .LASF129
     /tmp/cccnJrCb.s:2748   .debug_str:000000000000061c .LASF91
     /tmp/cccnJrCb.s:2760   .debug_str:0000000000000731 .LASF92
     /tmp/cccnJrCb.s:2580   .debug_str:00000000000000f8 .LASF93
     /tmp/cccnJrCb.s:2552   .debug_str:0000000000000040 .LASF130
     /tmp/cccnJrCb.s:2670   .debug_str:00000000000003be .LASF94
     /tmp/cccnJrCb.s:2636   .debug_str:00000000000002d6 .LASF95
     /tmp/cccnJrCb.s:2800   .debug_str:00000000000008be .LASF96
     /tmp/cccnJrCb.s:2660   .debug_str:000000000000036c .LASF102
     /tmp/cccnJrCb.s:2674   .debug_str:00000000000003cd .LASF131
     /tmp/cccnJrCb.s:2756   .debug_str:0000000000000707 .LASF132
     /tmp/cccnJrCb.s:2656   .debug_str:0000000000000355 .LASF97
     /tmp/cccnJrCb.s:2806   .debug_str:00000000000008e8 .LASF98
     /tmp/cccnJrCb.s:2668   .debug_str:00000000000003b6 .LASF99
     /tmp/cccnJrCb.s:2690   .debug_str:000000000000044a .LASF100
     /tmp/cccnJrCb.s:2666   .debug_str:00000000000003aa .LASF101
     /tmp/cccnJrCb.s:2782   .debug_str:000000000000081f .LASF103
     /tmp/cccnJrCb.s:2574   .debug_str:00000000000000d8 .LASF104
     /tmp/cccnJrCb.s:2616   .debug_str:00000000000001fa .LASF105
     /tmp/cccnJrCb.s:2692   .debug_str:000000000000046a .LASF106
     /tmp/cccnJrCb.s:2728   .debug_str:0000000000000567 .LASF107
     /tmp/cccnJrCb.s:2654   .debug_str:000000000000034c .LASF108
     /tmp/cccnJrCb.s:2652   .debug_str:000000000000032e .LASF109
     /tmp/cccnJrCb.s:2712   .debug_str:00000000000004ff .LASF110
     /tmp/cccnJrCb.s:2798   .debug_str:00000000000008a0 .LASF111
     /tmp/cccnJrCb.s:2662   .debug_str:0000000000000387 .LASF133
     /tmp/cccnJrCb.s:2792   .debug_str:0000000000000877 .LASF134
     /tmp/cccnJrCb.s:2564   .debug_str:0000000000000091 .LASF135
     /tmp/cccnJrCb.s:219    .text:0000000000000138 .LFB27
     /tmp/cccnJrCb.s:380    .text:00000000000002a8 .LFE27
     /tmp/cccnJrCb.s:2412   .debug_loc:0000000000000000 .LLST5
     /tmp/cccnJrCb.s:236    .text:0000000000000150 .LBB4
     /tmp/cccnJrCb.s:277    .text:00000000000001c4 .LBE4
     /tmp/cccnJrCb.s:2423   .debug_loc:0000000000000036 .LLST6
     /tmp/cccnJrCb.s:246    .text:000000000000016c .LVL15
     /tmp/cccnJrCb.s:250    .text:000000000000017c .LVL16
     /tmp/cccnJrCb.s:257    .text:000000000000018c .LVL17
     /tmp/cccnJrCb.s:261    .text:000000000000019c .LVL18
     /tmp/cccnJrCb.s:271    .text:00000000000001b4 .LVL20
     /tmp/cccnJrCb.s:275    .text:00000000000001c4 .LVL21
     /tmp/cccnJrCb.s:291    .text:00000000000001e0 .LVL23
     /tmp/cccnJrCb.s:295    .text:00000000000001e8 .LVL24
     /tmp/cccnJrCb.s:303    .text:0000000000000204 .LVL25
     /tmp/cccnJrCb.s:308    .text:0000000000000210 .LVL26
     /tmp/cccnJrCb.s:313    .text:0000000000000220 .LVL27
     /tmp/cccnJrCb.s:318    .text:000000000000022c .LVL28
     /tmp/cccnJrCb.s:323    .text:000000000000023c .LVL29
     /tmp/cccnJrCb.s:334    .text:0000000000000254 .LVL30
     /tmp/cccnJrCb.s:358    .text:0000000000000278 .LVL33
     /tmp/cccnJrCb.s:363    .text:0000000000000284 .LVL34
     /tmp/cccnJrCb.s:367    .text:000000000000028c .LVL35
     /tmp/cccnJrCb.s:376    .text:00000000000002a4 .LVL36
     /tmp/cccnJrCb.s:10     .text:0000000000000000 .LFB26
GAS LISTING /tmp/cccnJrCb.s 			page 20


     /tmp/cccnJrCb.s:48     .text:0000000000000044 .LFE26
     /tmp/cccnJrCb.s:25     .text:0000000000000018 .LVL0
     /tmp/cccnJrCb.s:37     .text:0000000000000034 .LVL2
     /tmp/cccnJrCb.s:54     .text:0000000000000044 .LFB25
     /tmp/cccnJrCb.s:193    .text:0000000000000138 .LFE25
     /tmp/cccnJrCb.s:2744   .debug_str:0000000000000602 .LASF112
     /tmp/cccnJrCb.s:2430   .debug_loc:0000000000000059 .LLST0
     /tmp/cccnJrCb.s:2720   .debug_str:0000000000000533 .LASF113
     /tmp/cccnJrCb.s:2452   .debug_loc:00000000000000b8 .LLST1
     /tmp/cccnJrCb.s:2474   .debug_loc:0000000000000117 .LLST2
     /tmp/cccnJrCb.s:2808   .debug_str:0000000000000909 .LASF114
     /tmp/cccnJrCb.s:2496   .debug_loc:0000000000000176 .LLST3
     /tmp/cccnJrCb.s:2762   .debug_str:0000000000000736 .LASF115
     /tmp/cccnJrCb.s:2518   .debug_loc:00000000000001d5 .LLST4
     /tmp/cccnJrCb.s:83     .text:0000000000000080 .LVL5
     /tmp/cccnJrCb.s:87     .text:0000000000000088 .LVL6
     /tmp/cccnJrCb.s:146    .text:00000000000000f0 .LVL7
     /tmp/cccnJrCb.s:2590   .debug_str:000000000000013a .LASF116
     /tmp/cccnJrCb.s:2796   .debug_str:0000000000000894 .LASF118
     /tmp/cccnJrCb.s:2764   .debug_str:000000000000073f .LASF117
     /tmp/cccnJrCb.s:2730   .debug_str:0000000000000588 .LASF119
     /tmp/cccnJrCb.s:2582   .debug_str:00000000000000fd .LASF120
     /tmp/cccnJrCb.s:2776   .debug_str:00000000000007d0 .LASF121
     /tmp/cccnJrCb.s:2702   .debug_str:00000000000004a3 .LASF122
     /tmp/cccnJrCb.s:2558   .debug_str:0000000000000078 .LASF123
     /tmp/cccnJrCb.s:281    .text:00000000000001cc .LVL22
     /tmp/cccnJrCb.s:345    .text:0000000000000260 .LVL31
     /tmp/cccnJrCb.s:351    .text:000000000000026c .LVL32
     /tmp/cccnJrCb.s:242    .text:000000000000015c .LVL14
     /tmp/cccnJrCb.s:57     .text:0000000000000044 .LVL3
     /tmp/cccnJrCb.s:81     .text:0000000000000078 .LVL4
     /tmp/cccnJrCb.s:159    .text:0000000000000100 .LVL8
     /tmp/cccnJrCb.s:172    .text:0000000000000114 .LVL12
     /tmp/cccnJrCb.s:162    .text:0000000000000104 .LVL9
     /tmp/cccnJrCb.s:165    .text:0000000000000108 .LVL10
     /tmp/cccnJrCb.s:168    .text:000000000000010c .LVL11
     /tmp/cccnJrCb.s:400    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN15MemoryAllocator14convert2BlocksEm
_ZN15MemoryAllocator9mem_allocEm
_ZN9Scheduler3putEP7_thread
_ZN9Scheduler16readyThreadQueueE
_Z11printStringPKc
_Z12printIntegerm
_ZN9Scheduler3getEv
contextSwitch
_ZN15MemoryAllocator8mem_freeEPv
contextSwitchThreadEnded
