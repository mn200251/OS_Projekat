GAS LISTING /tmp/ccmQdT9b.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB25:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** //
   2:src/syscall_c.cpp **** // Created by os on 8/9/23.
   3:src/syscall_c.cpp **** //
   4:src/syscall_c.cpp **** 
   5:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   6:src/syscall_c.cpp **** #include "../h/print.hpp"
   7:src/syscall_c.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/syscall_c.cpp **** #include "../h/thread.hpp"
   9:src/syscall_c.cpp **** #include "../h/scheduler.hpp"
  10:src/syscall_c.cpp **** 
  11:src/syscall_c.cpp **** void* mem_alloc (size_t size)
  12:src/syscall_c.cpp **** {
  12              		.loc 1 12 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FD 		addi	sp,sp,-48
  16              		.cfi_def_cfa_offset 48
  17 0004 23348102 		sd	s0,40(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040103 		addi	s0,sp,48
  20              		.cfi_def_cfa 8, 0
  21 000c 233CA4FC 		sd	a0,-40(s0)
  13:src/syscall_c.cpp ****     //size_t blockNum = MemoryAllocator::convert2Blocks(size);
  14:src/syscall_c.cpp **** 
  15:src/syscall_c.cpp ****     size_t code = 0x0000000000000001UL;
  22              		.loc 1 15 5
  23              		.loc 1 15 12 is_stmt 0
  24 0010 93071000 		li	a5,1
  25 0014 2334F4FE 		sd	a5,-24(s0)
  16:src/syscall_c.cpp ****     __asm__ volatile("ld a0, %0" : : "m" (code));
  26              		.loc 1 16 5 is_stmt 1
  27              		.loc 1 16 49 is_stmt 0
  28              	#APP
  29              	# 16 "src/syscall_c.cpp" 1
  17              	
  18:src/syscall_c.cpp ****     //__asm__ volatile("ld a1, %0" : : "m" (blockNum));
  19:src/syscall_c.cpp ****     __asm__ volatile("ld a1, %0" : : "m" (size));
  30              		ld a0, -24(s0)
  31              	# 0 "" 2
  32              		.loc 1 19 5 is_stmt 1
  33              		.loc 1 19 49 is_stmt 0
  34              	# 19 "src/syscall_c.cpp" 1
  20              	
  21:src/syscall_c.cpp ****     __asm__ volatile("ecall");
  35              		ld a1, -40(s0)
  36              	# 0 "" 2
  37              		.loc 1 21 5 is_stmt 1
GAS LISTING /tmp/ccmQdT9b.s 			page 2


  38              		.loc 1 21 30 is_stmt 0
  39              	# 21 "src/syscall_c.cpp" 1
  22              	
  23:src/syscall_c.cpp ****     void* ptr;
  40              		ecall
  41              	# 0 "" 2
  42              		.loc 1 23 5 is_stmt 1
  24:src/syscall_c.cpp **** 
  25:src/syscall_c.cpp ****     asm volatile("sd a0, %0" : "=m" (ptr));
  43              		.loc 1 25 5
  44              		.loc 1 25 43 is_stmt 0
  45              	# 25 "src/syscall_c.cpp" 1
  26              	
  27:src/syscall_c.cpp **** //    printString("mem_alloc: ");
  28:src/syscall_c.cpp **** //    printInteger(size_t(ptr));
  29:src/syscall_c.cpp **** //    printString("\n");
  30:src/syscall_c.cpp **** 
  31:src/syscall_c.cpp ****     return ptr;
  46              		sd a0, -32(s0)
  47              	# 0 "" 2
  48              		.loc 1 31 5 is_stmt 1
  32:src/syscall_c.cpp **** }
  49              		.loc 1 32 1 is_stmt 0
  50              	#NO_APP
  51 0028 033504FE 		ld	a0,-32(s0)
  52              	.LVL1:
  53 002c 03348102 		ld	s0,40(sp)
  54              		.cfi_restore 8
  55              		.cfi_def_cfa 2, 48
  56              	.LVL2:
  57 0030 13010103 		addi	sp,sp,48
  58              		.cfi_def_cfa_offset 0
  59              	.LVL3:
  60 0034 67800000 		jr	ra
  61              		.cfi_endproc
  62              	.LFE25:
  64              		.align	2
  65              		.globl	_Z8mem_freePv
  67              	_Z8mem_freePv:
  68              	.LFB26:
  33:src/syscall_c.cpp **** 
  34:src/syscall_c.cpp **** int mem_free (void* ptr)
  35:src/syscall_c.cpp **** {
  69              		.loc 1 35 1 is_stmt 1
  70              		.cfi_startproc
  71              	.LVL4:
  72 0038 130101FD 		addi	sp,sp,-48
  73              		.cfi_def_cfa_offset 48
  74 003c 23348102 		sd	s0,40(sp)
  75              		.cfi_offset 8, -8
  76 0040 13040103 		addi	s0,sp,48
  77              		.cfi_def_cfa 8, 0
  78 0044 233CA4FC 		sd	a0,-40(s0)
  36:src/syscall_c.cpp ****     size_t code = 0x0000000000000002UL;
  79              		.loc 1 36 5
  80              		.loc 1 36 12 is_stmt 0
  81 0048 93072000 		li	a5,2
GAS LISTING /tmp/ccmQdT9b.s 			page 3


  82 004c 2334F4FE 		sd	a5,-24(s0)
  37:src/syscall_c.cpp ****     asm volatile("ld a0, %0" : : "m" (code));
  83              		.loc 1 37 5 is_stmt 1
  84              		.loc 1 37 45 is_stmt 0
  85              	#APP
  86              	# 37 "src/syscall_c.cpp" 1
  38              	
  39:src/syscall_c.cpp ****     asm volatile("ld a1, %0" : : "m" (ptr));
  87              		ld a0, -24(s0)
  88              	# 0 "" 2
  89              		.loc 1 39 5 is_stmt 1
  90              		.loc 1 39 44 is_stmt 0
  91              	# 39 "src/syscall_c.cpp" 1
  40              	
  41:src/syscall_c.cpp ****     asm volatile("ecall");
  92              		ld a1, -40(s0)
  93              	# 0 "" 2
  94              		.loc 1 41 5 is_stmt 1
  95              		.loc 1 41 26 is_stmt 0
  96              	# 41 "src/syscall_c.cpp" 1
  42              	
  43:src/syscall_c.cpp ****     int val;
  97              		ecall
  98              	# 0 "" 2
  99              		.loc 1 43 5 is_stmt 1
  44:src/syscall_c.cpp **** 
  45:src/syscall_c.cpp ****     asm volatile("sd a0, %0" : "=m" (val));
 100              		.loc 1 45 5
 101              		.loc 1 45 43 is_stmt 0
 102              	# 45 "src/syscall_c.cpp" 1
  46              	
  47:src/syscall_c.cpp **** //    printString("mem_free: ");
  48:src/syscall_c.cpp **** //    printInteger(val);
  49:src/syscall_c.cpp **** //    printString("\n");
  50:src/syscall_c.cpp **** 
  51:src/syscall_c.cpp ****     return val;
 103              		sd a0, -28(s0)
 104              	# 0 "" 2
 105              		.loc 1 51 5 is_stmt 1
  52:src/syscall_c.cpp **** }
 106              		.loc 1 52 1 is_stmt 0
 107              	#NO_APP
 108 0060 032544FE 		lw	a0,-28(s0)
 109              	.LVL5:
 110 0064 03348102 		ld	s0,40(sp)
 111              		.cfi_restore 8
 112              		.cfi_def_cfa 2, 48
 113              	.LVL6:
 114 0068 13010103 		addi	sp,sp,48
 115              		.cfi_def_cfa_offset 0
 116              	.LVL7:
 117 006c 67800000 		jr	ra
 118              		.cfi_endproc
 119              	.LFE26:
 121              		.align	2
 122              		.globl	_Z13thread_createPP7_threadPFvPvES2_
 124              	_Z13thread_createPP7_threadPFvPvES2_:
GAS LISTING /tmp/ccmQdT9b.s 			page 4


 125              	.LFB27:
  53:src/syscall_c.cpp **** 
  54:src/syscall_c.cpp **** 
  55:src/syscall_c.cpp **** int thread_create (thread_t* handle, void(*start_routine)(void*), void* arg)
  56:src/syscall_c.cpp **** {
 126              		.loc 1 56 1 is_stmt 1
 127              		.cfi_startproc
 128              	.LVL8:
 129 0070 130101FB 		addi	sp,sp,-80
 130              		.cfi_def_cfa_offset 80
 131 0074 23341104 		sd	ra,72(sp)
 132 0078 23308104 		sd	s0,64(sp)
 133              		.cfi_offset 1, -8
 134              		.cfi_offset 8, -16
 135 007c 13040105 		addi	s0,sp,80
 136              		.cfi_def_cfa 8, 0
 137 0080 2334A4FC 		sd	a0,-56(s0)
 138 0084 2330B4FC 		sd	a1,-64(s0)
 139 0088 233CC4FA 		sd	a2,-72(s0)
  57:src/syscall_c.cpp ****     size_t blockNum = MemoryAllocator::convert2Blocks(sizeof(uint64) * DEFAULT_STACK_SIZE);
 140              		.loc 1 57 5
 141              		.loc 1 57 54 is_stmt 0
 142 008c 37850000 		li	a0,32768
 143              	.LVL9:
 144 0090 97000000 		call	_ZN15MemoryAllocator14convert2BlocksEm@plt
 144      E7800000 
 145              	.LVL10:
  58:src/syscall_c.cpp ****     void* stack_space = MemoryAllocator::mem_alloc(blockNum);
 146              		.loc 1 58 5 is_stmt 1
 147              		.loc 1 58 51 is_stmt 0
 148 0098 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 148      E7800000 
 149              	.LVL11:
 150              		.loc 1 58 60
 151 00a0 2334A4FE 		sd	a0,-24(s0)
  59:src/syscall_c.cpp **** 
  60:src/syscall_c.cpp **** //    blockNum = MemoryAllocator::convert2Blocks(sizeof(_thread**));
  61:src/syscall_c.cpp **** //    handle = (_thread**) MemoryAllocator::mem_alloc(blockNum);
  62:src/syscall_c.cpp **** //
  63:src/syscall_c.cpp **** //    blockNum = MemoryAllocator::convert2Blocks(sizeof(_thread*));
  64:src/syscall_c.cpp **** //    *handle = (_thread*) MemoryAllocator::mem_alloc(blockNum);
  65:src/syscall_c.cpp **** 
  66:src/syscall_c.cpp ****     size_t code = 0x0000000000000011UL;
 152              		.loc 1 66 5 is_stmt 1
 153              		.loc 1 66 12 is_stmt 0
 154 00a4 93071001 		li	a5,17
 155 00a8 2330F4FE 		sd	a5,-32(s0)
  67:src/syscall_c.cpp ****     asm volatile("ld a0, %0" : : "m" (code));
 156              		.loc 1 67 5 is_stmt 1
 157              		.loc 1 67 45 is_stmt 0
 158              	#APP
 159              	# 67 "src/syscall_c.cpp" 1
  68              	    asm volatile("ld a1, %0" : : "m" (handle));
 160              		ld a0, -32(s0)
 161              	# 0 "" 2
 162              		.loc 1 68 5 is_stmt 1
 163              		.loc 1 68 47 is_stmt 0
GAS LISTING /tmp/ccmQdT9b.s 			page 5


 164              	# 68 "src/syscall_c.cpp" 1
  69              	    asm volatile("ld a2, %0" : : "m" (start_routine));
 165              		ld a1, -56(s0)
 166              	# 0 "" 2
 167              		.loc 1 69 5 is_stmt 1
 168              		.loc 1 69 54 is_stmt 0
 169              	# 69 "src/syscall_c.cpp" 1
  70              	    asm volatile("ld a3, %0" : : "m" (arg));
 170              		ld a2, -64(s0)
 171              	# 0 "" 2
 172              		.loc 1 70 5 is_stmt 1
 173              		.loc 1 70 44 is_stmt 0
 174              	# 70 "src/syscall_c.cpp" 1
  71              	    asm volatile("ld a4, %0" : : "m" (stack_space));
 175              		ld a3, -72(s0)
 176              	# 0 "" 2
 177              		.loc 1 71 5 is_stmt 1
 178              		.loc 1 71 52 is_stmt 0
 179              	# 71 "src/syscall_c.cpp" 1
  72              	
  73:src/syscall_c.cpp ****     asm volatile("ecall");
 180              		ld a4, -24(s0)
 181              	# 0 "" 2
 182              		.loc 1 73 5 is_stmt 1
 183              		.loc 1 73 26 is_stmt 0
 184              	# 73 "src/syscall_c.cpp" 1
  74              	
  75:src/syscall_c.cpp ****     int val;
 185              		ecall
 186              	# 0 "" 2
 187              		.loc 1 75 5 is_stmt 1
  76:src/syscall_c.cpp **** 
  77:src/syscall_c.cpp ****     asm volatile("sd a0, %0" : "=m" (val));
 188              		.loc 1 77 5
 189              		.loc 1 77 43 is_stmt 0
 190              	# 77 "src/syscall_c.cpp" 1
  78              	
  79:src/syscall_c.cpp ****     if (val < 0)
 191              		sd a0, -36(s0)
 192              	# 0 "" 2
 193              		.loc 1 79 5 is_stmt 1
  80:src/syscall_c.cpp ****         return val;
  81:src/syscall_c.cpp **** 
  82:src/syscall_c.cpp **** //    printString("\nnew thread: ");
  83:src/syscall_c.cpp **** //    printInteger((uint64) *handle);
  84:src/syscall_c.cpp **** //    printString("\n");
  85:src/syscall_c.cpp **** 
  86:src/syscall_c.cpp ****     return val;
  87:src/syscall_c.cpp **** }
 194              		.loc 1 87 1 is_stmt 0
 195              	#NO_APP
 196 00c8 0325C4FD 		lw	a0,-36(s0)
 197 00cc 83308104 		ld	ra,72(sp)
 198              		.cfi_restore 1
 199 00d0 03340104 		ld	s0,64(sp)
 200              		.cfi_restore 8
 201              		.cfi_def_cfa 2, 80
GAS LISTING /tmp/ccmQdT9b.s 			page 6


 202 00d4 13010105 		addi	sp,sp,80
 203              		.cfi_def_cfa_offset 0
 204 00d8 67800000 		jr	ra
 205              		.cfi_endproc
 206              	.LFE27:
 208              		.align	2
 209              		.globl	_Z11thread_exitv
 211              	_Z11thread_exitv:
 212              	.LFB28:
  88:src/syscall_c.cpp **** 
  89:src/syscall_c.cpp **** int thread_exit ()
  90:src/syscall_c.cpp **** {
 213              		.loc 1 90 1 is_stmt 1
 214              		.cfi_startproc
 215 00dc 130101FE 		addi	sp,sp,-32
 216              		.cfi_def_cfa_offset 32
 217 00e0 233C8100 		sd	s0,24(sp)
 218              		.cfi_offset 8, -8
 219 00e4 13040102 		addi	s0,sp,32
 220              		.cfi_def_cfa 8, 0
  91:src/syscall_c.cpp ****     size_t code = 0x0000000000000012UL;
 221              		.loc 1 91 5
 222              		.loc 1 91 12 is_stmt 0
 223 00e8 93072001 		li	a5,18
 224 00ec 2334F4FE 		sd	a5,-24(s0)
  92:src/syscall_c.cpp ****     asm volatile("ld a0, %0" : : "m" (code));
 225              		.loc 1 92 5 is_stmt 1
 226              		.loc 1 92 45 is_stmt 0
 227              	#APP
 228              	# 92 "src/syscall_c.cpp" 1
  93              	
  94:src/syscall_c.cpp ****     asm volatile("ecall");
 229              		ld a0, -24(s0)
 230              	# 0 "" 2
 231              		.loc 1 94 5 is_stmt 1
 232              		.loc 1 94 26 is_stmt 0
 233              	# 94 "src/syscall_c.cpp" 1
  95              	
  96:src/syscall_c.cpp **** 
  97:src/syscall_c.cpp ****     // if this code is executed -> error exiting thread
  98:src/syscall_c.cpp ****     int val;
 234              		ecall
 235              	# 0 "" 2
 236              		.loc 1 98 5 is_stmt 1
  99:src/syscall_c.cpp **** 
 100:src/syscall_c.cpp ****     asm volatile("sd a0, %0" : "=m" (val));
 237              		.loc 1 100 5
 238              		.loc 1 100 43 is_stmt 0
 239              	# 100 "src/syscall_c.cpp" 1
 101              	
 102:src/syscall_c.cpp ****     return val;
 240              		sd a0, -28(s0)
 241              	# 0 "" 2
 242              		.loc 1 102 5 is_stmt 1
 103:src/syscall_c.cpp **** }
 243              		.loc 1 103 1 is_stmt 0
 244              	#NO_APP
GAS LISTING /tmp/ccmQdT9b.s 			page 7


 245 00fc 032544FE 		lw	a0,-28(s0)
 246 0100 03348101 		ld	s0,24(sp)
 247              		.cfi_restore 8
 248              		.cfi_def_cfa 2, 32
 249 0104 13010102 		addi	sp,sp,32
 250              		.cfi_def_cfa_offset 0
 251 0108 67800000 		jr	ra
 252              		.cfi_endproc
 253              	.LFE28:
 255              		.align	2
 256              		.globl	_Z15thread_dispatchv
 258              	_Z15thread_dispatchv:
 259              	.LFB29:
 104:src/syscall_c.cpp **** 
 105:src/syscall_c.cpp **** 
 106:src/syscall_c.cpp **** void thread_dispatch ()
 107:src/syscall_c.cpp **** {
 260              		.loc 1 107 1 is_stmt 1
 261              		.cfi_startproc
 262 010c 130101FE 		addi	sp,sp,-32
 263              		.cfi_def_cfa_offset 32
 264 0110 233C8100 		sd	s0,24(sp)
 265              		.cfi_offset 8, -8
 266 0114 13040102 		addi	s0,sp,32
 267              		.cfi_def_cfa 8, 0
 108:src/syscall_c.cpp ****     size_t code = 0x0000000000000013UL;
 268              		.loc 1 108 5
 269              		.loc 1 108 12 is_stmt 0
 270 0118 93073001 		li	a5,19
 271 011c 2334F4FE 		sd	a5,-24(s0)
 109:src/syscall_c.cpp ****     asm volatile("ld a0, %0" : : "m" (code));
 272              		.loc 1 109 5 is_stmt 1
 273              		.loc 1 109 45 is_stmt 0
 274              	#APP
 275              	# 109 "src/syscall_c.cpp" 1
 110              	
 111:src/syscall_c.cpp ****     asm volatile("ecall");
 276              		ld a0, -24(s0)
 277              	# 0 "" 2
 278              		.loc 1 111 5 is_stmt 1
 279              		.loc 1 111 26 is_stmt 0
 280              	# 111 "src/syscall_c.cpp" 1
 112              	}
 281              		ecall
 282              	# 0 "" 2
 283              		.loc 1 112 1
 284              	#NO_APP
 285 0128 03348101 		ld	s0,24(sp)
 286              		.cfi_restore 8
 287              		.cfi_def_cfa 2, 32
 288 012c 13010102 		addi	sp,sp,32
 289              		.cfi_def_cfa_offset 0
 290 0130 67800000 		jr	ra
 291              		.cfi_endproc
 292              	.LFE29:
 294              	.Letext0:
 295              		.file 2 "src/../h/../lib/hw.h"
GAS LISTING /tmp/ccmQdT9b.s 			page 8


 296              		.file 3 "src/../h/../h/thread.hpp"
 297              		.file 4 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccmQdT9b.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccmQdT9b.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccmQdT9b.s:13     .text:0000000000000000 .L0 
     /tmp/ccmQdT9b.s:15     .text:0000000000000000 .L0 
     /tmp/ccmQdT9b.s:16     .text:0000000000000004 .L0 
     /tmp/ccmQdT9b.s:18     .text:0000000000000008 .L0 
     /tmp/ccmQdT9b.s:20     .text:000000000000000c .L0 
     /tmp/ccmQdT9b.s:23     .text:0000000000000010 .L0 
     /tmp/ccmQdT9b.s:24     .text:0000000000000010 .L0 
     /tmp/ccmQdT9b.s:27     .text:0000000000000018 .L0 
   src/syscall_c.cpp:16     .text:0000000000000018 .L0 
     /tmp/ccmQdT9b.s:33     .text:000000000000001c .L0 
   src/syscall_c.cpp:19     .text:000000000000001c .L0 
     /tmp/ccmQdT9b.s:38     .text:0000000000000020 .L0 
   src/syscall_c.cpp:21     .text:0000000000000020 .L0 
     /tmp/ccmQdT9b.s:43     .text:0000000000000024 .L0 
     /tmp/ccmQdT9b.s:44     .text:0000000000000024 .L0 
   src/syscall_c.cpp:25     .text:0000000000000024 .L0 
     /tmp/ccmQdT9b.s:49     .text:0000000000000028 .L0 
     /tmp/ccmQdT9b.s:51     .text:0000000000000028 .L0 
     /tmp/ccmQdT9b.s:54     .text:0000000000000030 .L0 
     /tmp/ccmQdT9b.s:55     .text:0000000000000030 .L0 
     /tmp/ccmQdT9b.s:58     .text:0000000000000034 .L0 
     /tmp/ccmQdT9b.s:61     .text:0000000000000038 .L0 
     /tmp/ccmQdT9b.s:67     .text:0000000000000038 _Z8mem_freePv
     /tmp/ccmQdT9b.s:70     .text:0000000000000038 .L0 
     /tmp/ccmQdT9b.s:72     .text:0000000000000038 .L0 
     /tmp/ccmQdT9b.s:73     .text:000000000000003c .L0 
     /tmp/ccmQdT9b.s:75     .text:0000000000000040 .L0 
     /tmp/ccmQdT9b.s:77     .text:0000000000000044 .L0 
     /tmp/ccmQdT9b.s:80     .text:0000000000000048 .L0 
     /tmp/ccmQdT9b.s:81     .text:0000000000000048 .L0 
     /tmp/ccmQdT9b.s:84     .text:0000000000000050 .L0 
   src/syscall_c.cpp:37     .text:0000000000000050 .L0 
     /tmp/ccmQdT9b.s:90     .text:0000000000000054 .L0 
   src/syscall_c.cpp:39     .text:0000000000000054 .L0 
     /tmp/ccmQdT9b.s:95     .text:0000000000000058 .L0 
   src/syscall_c.cpp:41     .text:0000000000000058 .L0 
     /tmp/ccmQdT9b.s:100    .text:000000000000005c .L0 
     /tmp/ccmQdT9b.s:101    .text:000000000000005c .L0 
   src/syscall_c.cpp:45     .text:000000000000005c .L0 
     /tmp/ccmQdT9b.s:106    .text:0000000000000060 .L0 
     /tmp/ccmQdT9b.s:108    .text:0000000000000060 .L0 
     /tmp/ccmQdT9b.s:111    .text:0000000000000068 .L0 
     /tmp/ccmQdT9b.s:112    .text:0000000000000068 .L0 
     /tmp/ccmQdT9b.s:115    .text:000000000000006c .L0 
     /tmp/ccmQdT9b.s:118    .text:0000000000000070 .L0 
     /tmp/ccmQdT9b.s:124    .text:0000000000000070 _Z13thread_createPP7_threadPFvPvES2_
     /tmp/ccmQdT9b.s:127    .text:0000000000000070 .L0 
     /tmp/ccmQdT9b.s:129    .text:0000000000000070 .L0 
     /tmp/ccmQdT9b.s:130    .text:0000000000000074 .L0 
     /tmp/ccmQdT9b.s:133    .text:000000000000007c .L0 
     /tmp/ccmQdT9b.s:134    .text:000000000000007c .L0 
     /tmp/ccmQdT9b.s:136    .text:0000000000000080 .L0 
     /tmp/ccmQdT9b.s:141    .text:000000000000008c .L0 
     /tmp/ccmQdT9b.s:142    .text:000000000000008c .L0 
GAS LISTING /tmp/ccmQdT9b.s 			page 10


     /tmp/ccmQdT9b.s:147    .text:0000000000000098 .L0 
     /tmp/ccmQdT9b.s:148    .text:0000000000000098 .L0 
     /tmp/ccmQdT9b.s:151    .text:00000000000000a0 .L0 
     /tmp/ccmQdT9b.s:153    .text:00000000000000a4 .L0 
     /tmp/ccmQdT9b.s:154    .text:00000000000000a4 .L0 
     /tmp/ccmQdT9b.s:157    .text:00000000000000ac .L0 
   src/syscall_c.cpp:67     .text:00000000000000ac .L0 
     /tmp/ccmQdT9b.s:163    .text:00000000000000b0 .L0 
   src/syscall_c.cpp:68     .text:00000000000000b0 .L0 
     /tmp/ccmQdT9b.s:168    .text:00000000000000b4 .L0 
   src/syscall_c.cpp:69     .text:00000000000000b4 .L0 
     /tmp/ccmQdT9b.s:173    .text:00000000000000b8 .L0 
   src/syscall_c.cpp:70     .text:00000000000000b8 .L0 
     /tmp/ccmQdT9b.s:178    .text:00000000000000bc .L0 
   src/syscall_c.cpp:71     .text:00000000000000bc .L0 
     /tmp/ccmQdT9b.s:183    .text:00000000000000c0 .L0 
   src/syscall_c.cpp:73     .text:00000000000000c0 .L0 
     /tmp/ccmQdT9b.s:188    .text:00000000000000c4 .L0 
     /tmp/ccmQdT9b.s:189    .text:00000000000000c4 .L0 
   src/syscall_c.cpp:77     .text:00000000000000c4 .L0 
     /tmp/ccmQdT9b.s:194    .text:00000000000000c8 .L0 
     /tmp/ccmQdT9b.s:196    .text:00000000000000c8 .L0 
     /tmp/ccmQdT9b.s:198    .text:00000000000000d0 .L0 
     /tmp/ccmQdT9b.s:200    .text:00000000000000d4 .L0 
     /tmp/ccmQdT9b.s:201    .text:00000000000000d4 .L0 
     /tmp/ccmQdT9b.s:203    .text:00000000000000d8 .L0 
     /tmp/ccmQdT9b.s:205    .text:00000000000000dc .L0 
     /tmp/ccmQdT9b.s:211    .text:00000000000000dc _Z11thread_exitv
     /tmp/ccmQdT9b.s:214    .text:00000000000000dc .L0 
     /tmp/ccmQdT9b.s:215    .text:00000000000000dc .L0 
     /tmp/ccmQdT9b.s:216    .text:00000000000000e0 .L0 
     /tmp/ccmQdT9b.s:218    .text:00000000000000e4 .L0 
     /tmp/ccmQdT9b.s:220    .text:00000000000000e8 .L0 
     /tmp/ccmQdT9b.s:222    .text:00000000000000e8 .L0 
     /tmp/ccmQdT9b.s:223    .text:00000000000000e8 .L0 
     /tmp/ccmQdT9b.s:226    .text:00000000000000f0 .L0 
   src/syscall_c.cpp:92     .text:00000000000000f0 .L0 
     /tmp/ccmQdT9b.s:232    .text:00000000000000f4 .L0 
   src/syscall_c.cpp:94     .text:00000000000000f4 .L0 
     /tmp/ccmQdT9b.s:237    .text:00000000000000f8 .L0 
     /tmp/ccmQdT9b.s:238    .text:00000000000000f8 .L0 
   src/syscall_c.cpp:100    .text:00000000000000f8 .L0 
     /tmp/ccmQdT9b.s:243    .text:00000000000000fc .L0 
     /tmp/ccmQdT9b.s:245    .text:00000000000000fc .L0 
     /tmp/ccmQdT9b.s:247    .text:0000000000000104 .L0 
     /tmp/ccmQdT9b.s:248    .text:0000000000000104 .L0 
     /tmp/ccmQdT9b.s:250    .text:0000000000000108 .L0 
     /tmp/ccmQdT9b.s:252    .text:000000000000010c .L0 
     /tmp/ccmQdT9b.s:258    .text:000000000000010c _Z15thread_dispatchv
     /tmp/ccmQdT9b.s:261    .text:000000000000010c .L0 
     /tmp/ccmQdT9b.s:262    .text:000000000000010c .L0 
     /tmp/ccmQdT9b.s:263    .text:0000000000000110 .L0 
     /tmp/ccmQdT9b.s:265    .text:0000000000000114 .L0 
     /tmp/ccmQdT9b.s:267    .text:0000000000000118 .L0 
     /tmp/ccmQdT9b.s:269    .text:0000000000000118 .L0 
     /tmp/ccmQdT9b.s:270    .text:0000000000000118 .L0 
     /tmp/ccmQdT9b.s:273    .text:0000000000000120 .L0 
GAS LISTING /tmp/ccmQdT9b.s 			page 11


   src/syscall_c.cpp:109    .text:0000000000000120 .L0 
     /tmp/ccmQdT9b.s:279    .text:0000000000000124 .L0 
   src/syscall_c.cpp:111    .text:0000000000000124 .L0 
     /tmp/ccmQdT9b.s:285    .text:0000000000000128 .L0 
     /tmp/ccmQdT9b.s:286    .text:000000000000012c .L0 
     /tmp/ccmQdT9b.s:287    .text:000000000000012c .L0 
     /tmp/ccmQdT9b.s:289    .text:0000000000000130 .L0 
     /tmp/ccmQdT9b.s:291    .text:0000000000000134 .L0 
     /tmp/ccmQdT9b.s:298    .text:0000000000000134 .L0 
     /tmp/ccmQdT9b.s:894    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccmQdT9b.s:1652   .debug_str:0000000000000374 .LASF61
     /tmp/ccmQdT9b.s:1594   .debug_str:00000000000001a0 .LASF62
     /tmp/ccmQdT9b.s:1578   .debug_str:0000000000000104 .LASF63
     /tmp/ccmQdT9b.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccmQdT9b.s:294    .text:0000000000000134 .Letext0
     /tmp/ccmQdT9b.s:1534   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccmQdT9b.s:1614   .debug_str:0000000000000253 .LASF0
     /tmp/ccmQdT9b.s:1624   .debug_str:0000000000000284 .LASF1
     /tmp/ccmQdT9b.s:1604   .debug_str:00000000000001d6 .LASF2
     /tmp/ccmQdT9b.s:1592   .debug_str:0000000000000199 .LASF4
     /tmp/ccmQdT9b.s:1642   .debug_str:000000000000032b .LASF3
     /tmp/ccmQdT9b.s:1550   .debug_str:0000000000000050 .LASF5
     /tmp/ccmQdT9b.s:1630   .debug_str:00000000000002b3 .LASF6
     /tmp/ccmQdT9b.s:1612   .debug_str:0000000000000240 .LASF7
     /tmp/ccmQdT9b.s:1658   .debug_str:0000000000000465 .LASF8
     /tmp/ccmQdT9b.s:1586   .debug_str:0000000000000166 .LASF9
     /tmp/ccmQdT9b.s:1636   .debug_str:00000000000002fd .LASF10
     /tmp/ccmQdT9b.s:1654   .debug_str:0000000000000438 .LASF11
     /tmp/ccmQdT9b.s:1552   .debug_str:0000000000000057 .LASF12
     /tmp/ccmQdT9b.s:1542   .debug_str:000000000000001f .LASF13
     /tmp/ccmQdT9b.s:1556   .debug_str:000000000000008a .LASF14
     /tmp/ccmQdT9b.s:1640   .debug_str:0000000000000315 .LASF15
     /tmp/ccmQdT9b.s:1562   .debug_str:00000000000000b4 .LASF16
     /tmp/ccmQdT9b.s:1590   .debug_str:0000000000000191 .LASF17
     /tmp/ccmQdT9b.s:1546   .debug_str:000000000000003c .LASF18
     /tmp/ccmQdT9b.s:1596   .debug_str:00000000000001b2 .LASF19
     /tmp/ccmQdT9b.s:1602   .debug_str:00000000000001cd .LASF20
     /tmp/ccmQdT9b.s:1618   .debug_str:000000000000026f .LASF21
     /tmp/ccmQdT9b.s:1598   .debug_str:00000000000001b7 .LASF22
     /tmp/ccmQdT9b.s:1622   .debug_str:000000000000027a .LASF23
     /tmp/ccmQdT9b.s:1570   .debug_str:00000000000000e6 .LASF34
     /tmp/ccmQdT9b.s:1544   .debug_str:000000000000002f .LASF38
     /tmp/ccmQdT9b.s:1664   .debug_str:0000000000000484 .LASF40
     /tmp/ccmQdT9b.s:1600   .debug_str:00000000000001bf .LASF24
     /tmp/ccmQdT9b.s:1588   .debug_str:0000000000000174 .LASF26
     /tmp/ccmQdT9b.s:1540   .debug_str:0000000000000010 .LASF25
     /tmp/ccmQdT9b.s:1656   .debug_str:0000000000000447 .LASF27
     /tmp/ccmQdT9b.s:1574   .debug_str:00000000000000f7 .LASF28
     /tmp/ccmQdT9b.s:1536   .debug_str:0000000000000000 .LASF29
     /tmp/ccmQdT9b.s:1576   .debug_str:00000000000000fc .LASF30
     /tmp/ccmQdT9b.s:1666   .debug_str:00000000000004af .LASF31
     /tmp/ccmQdT9b.s:1662   .debug_str:000000000000047f .LASF32
     /tmp/ccmQdT9b.s:1650   .debug_str:000000000000036f .LASF33
     /tmp/ccmQdT9b.s:1608   .debug_str:0000000000000209 .LASF64
     /tmp/ccmQdT9b.s:1638   .debug_str:000000000000030c .LASF35
     /tmp/ccmQdT9b.s:1538   .debug_str:0000000000000009 .LASF36
     /tmp/ccmQdT9b.s:1566   .debug_str:00000000000000d8 .LASF37
GAS LISTING /tmp/ccmQdT9b.s 			page 12


     /tmp/ccmQdT9b.s:1660   .debug_str:0000000000000475 .LASF39
     /tmp/ccmQdT9b.s:1632   .debug_str:00000000000002c6 .LASF41
     /tmp/ccmQdT9b.s:1626   .debug_str:0000000000000297 .LASF65
     /tmp/ccmQdT9b.s:1554   .debug_str:0000000000000067 .LASF66
     /tmp/ccmQdT9b.s:1644   .debug_str:000000000000033d .LASF42
     /tmp/ccmQdT9b.s:1646   .debug_str:0000000000000347 .LASF44
     /tmp/ccmQdT9b.s:1568   .debug_str:00000000000000dd .LASF43
     /tmp/ccmQdT9b.s:1584   .debug_str:0000000000000145 .LASF45
     /tmp/ccmQdT9b.s:1616   .debug_str:0000000000000260 .LASF46
     /tmp/ccmQdT9b.s:1610   .debug_str:0000000000000219 .LASF47
     /tmp/ccmQdT9b.s:1558   .debug_str:0000000000000096 .LASF58
     /tmp/ccmQdT9b.s:1580   .debug_str:0000000000000122 .LASF59
     /tmp/ccmQdT9b.s:259    .text:000000000000010c .LFB29
     /tmp/ccmQdT9b.s:292    .text:0000000000000134 .LFE29
     /tmp/ccmQdT9b.s:1620   .debug_str:0000000000000275 .LASF48
     /tmp/ccmQdT9b.s:1548   .debug_str:0000000000000044 .LASF49
     /tmp/ccmQdT9b.s:1628   .debug_str:00000000000002a2 .LASF51
     /tmp/ccmQdT9b.s:212    .text:00000000000000dc .LFB28
     /tmp/ccmQdT9b.s:253    .text:000000000000010c .LFE28
     /tmp/ccmQdT9b.s:1564   .debug_str:00000000000000ca .LASF50
     /tmp/ccmQdT9b.s:1606   .debug_str:00000000000001e4 .LASF52
     /tmp/ccmQdT9b.s:125    .text:0000000000000070 .LFB27
     /tmp/ccmQdT9b.s:206    .text:00000000000000dc .LFE27
     /tmp/ccmQdT9b.s:1648   .debug_str:0000000000000368 .LASF53
     /tmp/ccmQdT9b.s:1444   .debug_loc:0000000000000000 .LLST2
     /tmp/ccmQdT9b.s:1582   .debug_str:0000000000000137 .LASF54
     /tmp/ccmQdT9b.s:1456   .debug_loc:0000000000000037 .LLST3
     /tmp/ccmQdT9b.s:1463   .debug_loc:000000000000005a .LLST4
     /tmp/ccmQdT9b.s:1572   .debug_str:00000000000000ee .LASF55
     /tmp/ccmQdT9b.s:1470   .debug_loc:000000000000007d .LLST5
     /tmp/ccmQdT9b.s:1668   .debug_str:00000000000004b4 .LASF56
     /tmp/ccmQdT9b.s:145    .text:0000000000000098 .LVL10
     /tmp/ccmQdT9b.s:149    .text:00000000000000a0 .LVL11
     /tmp/ccmQdT9b.s:1634   .debug_str:00000000000002ef .LASF57
     /tmp/ccmQdT9b.s:68     .text:0000000000000038 .LFB26
     /tmp/ccmQdT9b.s:119    .text:0000000000000070 .LFE26
     /tmp/ccmQdT9b.s:1477   .debug_loc:00000000000000a0 .LLST1
     /tmp/ccmQdT9b.s:1560   .debug_str:00000000000000a6 .LASF60
     /tmp/ccmQdT9b.s:10     .text:0000000000000000 .LFB25
     /tmp/ccmQdT9b.s:62     .text:0000000000000038 .LFE25
     /tmp/ccmQdT9b.s:1499   .debug_loc:00000000000000ff .LLST0
     /tmp/ccmQdT9b.s:128    .text:0000000000000070 .LVL8
     /tmp/ccmQdT9b.s:143    .text:0000000000000090 .LVL9
     /tmp/ccmQdT9b.s:71     .text:0000000000000038 .LVL4
     /tmp/ccmQdT9b.s:109    .text:0000000000000064 .LVL5
     /tmp/ccmQdT9b.s:113    .text:0000000000000068 .LVL6
     /tmp/ccmQdT9b.s:116    .text:000000000000006c .LVL7
     /tmp/ccmQdT9b.s:14     .text:0000000000000000 .LVL0
     /tmp/ccmQdT9b.s:52     .text:000000000000002c .LVL1
     /tmp/ccmQdT9b.s:56     .text:0000000000000030 .LVL2
     /tmp/ccmQdT9b.s:59     .text:0000000000000034 .LVL3
     /tmp/ccmQdT9b.s:299    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator14convert2BlocksEm
_ZN15MemoryAllocator9mem_allocEm
