GAS LISTING /tmp/ccGbE86I.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadB created\n"
  12      61644220 
  12      63726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 54687265 		.string	"ThreadC created\n"
  15      61644320 
  15      63726561 
  15      7465640A 
  15      00
  16 0041 00000000 		.align	3
  16      000000
  17              	.LC3:
  18 0048 54687265 		.string	"ThreadD created\n"
  18      61644420 
  18      63726561 
  18      7465640A 
  18      00
  19 0059 00000000 		.align	3
  19      000000
  20              	.LC4:
  21 0060 46696E69 		.string	"Finished\n"
  21      73686564 
  21      0A00
  22              		.text
  23              		.align	2
  24              		.globl	_Z8userMainv
  26              	_Z8userMainv:
  27              	.LFB33:
  28              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   3:src/main.cpp  **** 
   4:src/main.cpp  **** #include "../h/tcb.hpp"
   5:src/main.cpp  **** #include "../h/workers.hpp"
   6:src/main.cpp  **** #include "../h/print.hpp"
   7:src/main.cpp  **** #include "../h/riscv.hpp"
   8:src/main.cpp  **** 
GAS LISTING /tmp/ccGbE86I.s 			page 2


   9:src/main.cpp  **** void userMain()
  10:src/main.cpp  **** {
  29              		.loc 1 10 1
  30              		.cfi_startproc
  31 0000 130101FB 		addi	sp,sp,-80
  32              		.cfi_def_cfa_offset 80
  33 0004 23341104 		sd	ra,72(sp)
  34 0008 23308104 		sd	s0,64(sp)
  35 000c 233C9102 		sd	s1,56(sp)
  36 0010 23382103 		sd	s2,48(sp)
  37              		.cfi_offset 1, -8
  38              		.cfi_offset 8, -16
  39              		.cfi_offset 9, -24
  40              		.cfi_offset 18, -32
  41 0014 13040105 		addi	s0,sp,80
  42              		.cfi_def_cfa 8, 0
  11:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  43              		.loc 1 11 5
  44              		.loc 1 11 19 is_stmt 0
  45 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  45      83B70700 
  46              	.LVL0:
  47              	.LBB18:
  48              	.LBB19:
  49              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
GAS LISTING /tmp/ccGbE86I.s 			page 3


  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
GAS LISTING /tmp/ccGbE86I.s 			page 4


  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  93:src/../h/riscv.hpp ****     return scause;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105:src/../h/riscv.hpp ****     return sepc;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  50              		.loc 2 122 5 is_stmt 1
  51              		.loc 2 122 69 is_stmt 0
  52              	#APP
  53              	# 122 "src/../h/riscv.hpp" 1
 123              	}
  54              		csrw stvec, a5
  55              	# 0 "" 2
  56              	.LVL1:
  57              	#NO_APP
  58              	.LBE19:
  59              	.LBE18:
  12:src/main.cpp  **** 
  13:src/main.cpp  ****     __putc('1');
  60              		.loc 1 13 5 is_stmt 1
  61              		.loc 1 13 11 is_stmt 0
  62 0024 13051003 		li	a0,49
  63 0028 97000000 		call	__putc@plt
  63      E7800000 
  64              	.LVL2:
  14:src/main.cpp  ****     __putc('\n');
  65              		.loc 1 14 5 is_stmt 1
  66              		.loc 1 14 11 is_stmt 0
  67 0030 1305A000 		li	a0,10
  68 0034 97000000 		call	__putc@plt
GAS LISTING /tmp/ccGbE86I.s 			page 5


  68      E7800000 
  69              	.LVL3:
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     TCB *threads[5];
  70              		.loc 1 16 5 is_stmt 1
  17:src/main.cpp  **** 
  18:src/main.cpp  ****     threads[0] = TCB::createThread(nullptr);
  71              		.loc 1 18 5
  72              		.loc 1 18 35 is_stmt 0
  73 003c 13050000 		li	a0,0
  74 0040 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  74      E7800000 
  75              	.LVL4:
  76              		.loc 1 18 16
  77 0048 233CA4FA 		sd	a0,-72(s0)
  19:src/main.cpp  ****     TCB::running = threads[0];
  78              		.loc 1 19 5 is_stmt 1
  79              		.loc 1 19 18 is_stmt 0
  80 004c 97070000 		la	a5,_ZN3TCB7runningE
  80      83B70700 
  81 0054 23B0A700 		sd	a0,0(a5)
  20:src/main.cpp  **** 
  21:src/main.cpp  ****     threads[1] = TCB::createThread(workerBodyA);
  82              		.loc 1 21 5 is_stmt 1
  83              		.loc 1 21 35 is_stmt 0
  84 0058 17050000 		la	a0,_Z11workerBodyAv
  84      03350500 
  85 0060 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  85      E7800000 
  86              	.LVL5:
  87              		.loc 1 21 16
  88 0068 2330A4FC 		sd	a0,-64(s0)
  22:src/main.cpp  ****     printString("ThreadA created\n");
  89              		.loc 1 22 5 is_stmt 1
  90              		.loc 1 22 16 is_stmt 0
  91 006c 17050000 		lla	a0,.LC0
  91      13050500 
  92 0074 97000000 		call	_Z11printStringPKc@plt
  92      E7800000 
  93              	.LVL6:
  23:src/main.cpp  ****     threads[2] = TCB::createThread(workerBodyB);
  94              		.loc 1 23 5 is_stmt 1
  95              		.loc 1 23 35 is_stmt 0
  96 007c 17050000 		la	a0,_Z11workerBodyBv
  96      03350500 
  97 0084 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  97      E7800000 
  98              	.LVL7:
  99              		.loc 1 23 16
 100 008c 2334A4FC 		sd	a0,-56(s0)
  24:src/main.cpp  ****     printString("ThreadB created\n");
 101              		.loc 1 24 5 is_stmt 1
 102              		.loc 1 24 16 is_stmt 0
 103 0090 17050000 		lla	a0,.LC1
 103      13050500 
 104 0098 97000000 		call	_Z11printStringPKc@plt
 104      E7800000 
GAS LISTING /tmp/ccGbE86I.s 			page 6


 105              	.LVL8:
  25:src/main.cpp  ****     threads[3] = TCB::createThread(workerBodyC);
 106              		.loc 1 25 5 is_stmt 1
 107              		.loc 1 25 35 is_stmt 0
 108 00a0 17050000 		la	a0,_Z11workerBodyCv
 108      03350500 
 109 00a8 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 109      E7800000 
 110              	.LVL9:
 111              		.loc 1 25 16
 112 00b0 2338A4FC 		sd	a0,-48(s0)
  26:src/main.cpp  ****     printString("ThreadC created\n");
 113              		.loc 1 26 5 is_stmt 1
 114              		.loc 1 26 16 is_stmt 0
 115 00b4 17050000 		lla	a0,.LC2
 115      13050500 
 116 00bc 97000000 		call	_Z11printStringPKc@plt
 116      E7800000 
 117              	.LVL10:
  27:src/main.cpp  ****     threads[4] = TCB::createThread(workerBodyD);
 118              		.loc 1 27 5 is_stmt 1
 119              		.loc 1 27 35 is_stmt 0
 120 00c4 17050000 		la	a0,_Z11workerBodyDv
 120      03350500 
 121 00cc 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 121      E7800000 
 122              	.LVL11:
 123              		.loc 1 27 16
 124 00d4 233CA4FC 		sd	a0,-40(s0)
  28:src/main.cpp  ****     printString("ThreadD created\n");
 125              		.loc 1 28 5 is_stmt 1
 126              		.loc 1 28 16 is_stmt 0
 127 00d8 17050000 		lla	a0,.LC3
 127      13050500 
 128 00e0 97000000 		call	_Z11printStringPKc@plt
 128      E7800000 
 129              	.LVL12:
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 130              		.loc 1 30 5 is_stmt 1
 131              	.LBB20:
 132              	.LBB21:
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccGbE86I.s 			page 7


 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 133              		.loc 2 161 5
 134              		.loc 2 161 68 is_stmt 0
 135 00e8 93072000 		li	a5,2
 136              	#APP
 137              	# 161 "src/../h/riscv.hpp" 1
 162              	}
 138              		csrs sstatus, a5
 139              	# 0 "" 2
 140              		.loc 2 162 1
 141              	#NO_APP
 142 00f0 6F00C000 		j	.L4
 143              	.LVL13:
 144              	.L2:
 145              	.LBE21:
 146              	.LBE20:
  31:src/main.cpp  **** 
  32:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
  33:src/main.cpp  ****              threads[2]->isFinished() &&
  34:src/main.cpp  ****              threads[3]->isFinished() &&
  35:src/main.cpp  ****              threads[4]->isFinished()))
  36:src/main.cpp  ****     {
  37:src/main.cpp  ****         TCB::yield();
 147              		.loc 1 37 9 is_stmt 1 discriminator 3
 148              		.loc 1 37 19 is_stmt 0 discriminator 3
 149 00f4 97000000 		call	_ZN3TCB5yieldEv@plt
 149      E7800000 
 150              	.LVL14:
 151              	.L4:
  32:src/main.cpp  ****              threads[2]->isFinished() &&
 152              		.loc 1 32 5 is_stmt 1
  32:src/main.cpp  ****              threads[2]->isFinished() &&
 153              		.loc 1 32 12
  32:src/main.cpp  ****              threads[2]->isFinished() &&
 154              		.loc 1 32 23 is_stmt 0
GAS LISTING /tmp/ccGbE86I.s 			page 8


 155 00fc 833704FC 		ld	a5,-64(s0)
 156              	.LVL15:
 157              	.LBB22:
 158              	.LBB23:
 159              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 160              		.loc 3 17 31 is_stmt 1
 161              		.loc 3 17 38 is_stmt 0
 162 0100 83C78702 		lbu	a5,40(a5)
 163              	.LVL16:
 164              	.LBE23:
 165              	.LBE22:
  32:src/main.cpp  ****              threads[2]->isFinished() &&
 166              		.loc 1 32 12
 167 0104 E38807FE 		beqz	a5,.L2
  33:src/main.cpp  ****              threads[3]->isFinished() &&
 168              		.loc 1 33 23 discriminator 2
 169 0108 833784FC 		ld	a5,-56(s0)
 170              	.LVL17:
 171              	.LBB24:
 172              	.LBB25:
 173              		.loc 3 17 31 is_stmt 1 discriminator 2
 174              		.loc 3 17 38 is_stmt 0 discriminator 2
 175 010c 83C78702 		lbu	a5,40(a5)
 176              	.LVL18:
 177              	.LBE25:
 178              	.LBE24:
  32:src/main.cpp  ****              threads[2]->isFinished() &&
 179              		.loc 1 32 39 discriminator 2
 180 0110 E38207FE 		beqz	a5,.L2
  34:src/main.cpp  ****              threads[4]->isFinished()))
 181              		.loc 1 34 23
 182 0114 833704FD 		ld	a5,-48(s0)
 183              	.LVL19:
 184              	.LBB26:
 185              	.LBB27:
 186              		.loc 3 17 31 is_stmt 1
 187              		.loc 3 17 38 is_stmt 0
 188 0118 83C78702 		lbu	a5,40(a5)
 189              	.LVL20:
 190              	.LBE27:
GAS LISTING /tmp/ccGbE86I.s 			page 9


 191              	.LBE26:
  33:src/main.cpp  ****              threads[3]->isFinished() &&
 192              		.loc 1 33 39
 193 011c E38C07FC 		beqz	a5,.L2
  35:src/main.cpp  ****     {
 194              		.loc 1 35 23 discriminator 4
 195 0120 833784FD 		ld	a5,-40(s0)
 196              	.LVL21:
 197              	.LBB28:
 198              	.LBB29:
 199              		.loc 3 17 31 is_stmt 1 discriminator 4
 200              		.loc 3 17 38 is_stmt 0 discriminator 4
 201 0124 83C78702 		lbu	a5,40(a5)
 202              	.LVL22:
 203              	.LBE29:
 204              	.LBE28:
  32:src/main.cpp  ****              threads[2]->isFinished() &&
 205              		.loc 1 32 12 discriminator 4
 206 0128 E38607FC 		beqz	a5,.L2
 207 012c 930484FB 		addi	s1,s0,-72
 208 0130 6F004001 		j	.L3
 209              	.LVL23:
 210              	.L7:
 211              	.LBB30:
  38:src/main.cpp  ****     }
  39:src/main.cpp  **** 
  40:src/main.cpp  ****     for (auto &thread: threads)
  41:src/main.cpp  ****     {
  42:src/main.cpp  ****         delete thread;
 212              		.loc 1 42 16
 213 0134 13050900 		mv	a0,s2
 214 0138 97000000 		call	_ZdlPv@plt
 214      E7800000 
 215              	.LVL24:
 216              	.L6:
  40:src/main.cpp  ****     {
 217              		.loc 1 40 5 is_stmt 1 discriminator 3
 218 0140 93848400 		addi	s1,s1,8
 219              	.LVL25:
 220              	.L3:
  40:src/main.cpp  ****     {
 221              		.loc 1 40 24 discriminator 1
 222 0144 930704FE 		addi	a5,s0,-32
 223 0148 6380F402 		beq	s1,a5,.L5
 224              	.LVL26:
 225              		.loc 1 42 9 discriminator 2
 226              		.loc 1 42 16 is_stmt 0 discriminator 2
 227 014c 03B90400 		ld	s2,0(s1)
 228              		.loc 1 42 22 discriminator 2
 229 0150 E30809FE 		beqz	s2,.L6
 230              	.LVL27:
 231              	.LBB31:
 232              	.LBB32:
  15:src/../h/tcb.hpp **** 
 233              		.loc 3 15 14 is_stmt 1
  15:src/../h/tcb.hpp **** 
 234              		.loc 3 15 23 is_stmt 0
GAS LISTING /tmp/ccGbE86I.s 			page 10


 235 0154 03358900 		ld	a0,8(s2)
  15:src/../h/tcb.hpp **** 
 236              		.loc 3 15 28
 237 0158 E30E05FC 		beqz	a0,.L7
  15:src/../h/tcb.hpp **** 
 238              		.loc 3 15 23
 239 015c 97000000 		call	_ZdaPv@plt
 239      E7800000 
 240              	.LVL28:
 241 0164 6FF01FFD 		j	.L7
 242              	.LVL29:
 243              	.L5:
 244              	.LBE32:
 245              	.LBE31:
 246              	.LBE30:
  43:src/main.cpp  ****     }
  44:src/main.cpp  ****     printString("Finished\n");
 247              		.loc 1 44 5 is_stmt 1
 248              		.loc 1 44 16 is_stmt 0
 249 0168 17050000 		lla	a0,.LC4
 249      13050500 
 250 0170 97000000 		call	_Z11printStringPKc@plt
 250      E7800000 
 251              	.LVL30:
  45:src/main.cpp  **** }
 252              		.loc 1 45 1
 253 0178 83308104 		ld	ra,72(sp)
 254              		.cfi_restore 1
 255 017c 03340104 		ld	s0,64(sp)
 256              		.cfi_restore 8
 257              		.cfi_def_cfa 2, 80
 258 0180 83348103 		ld	s1,56(sp)
 259              		.cfi_restore 9
 260              	.LVL31:
 261 0184 03390103 		ld	s2,48(sp)
 262              		.cfi_restore 18
 263 0188 13010105 		addi	sp,sp,80
 264              		.cfi_def_cfa_offset 0
 265 018c 67800000 		jr	ra
 266              		.cfi_endproc
 267              	.LFE33:
 269              		.align	2
 270              		.globl	main
 272              	main:
 273              	.LFB34:
  46:src/main.cpp  **** 
  47:src/main.cpp  **** void main()
  48:src/main.cpp  **** {
 274              		.loc 1 48 1 is_stmt 1
 275              		.cfi_startproc
 276 0190 130101FF 		addi	sp,sp,-16
 277              		.cfi_def_cfa_offset 16
 278 0194 23341100 		sd	ra,8(sp)
 279 0198 23308100 		sd	s0,0(sp)
 280              		.cfi_offset 1, -8
 281              		.cfi_offset 8, -16
 282 019c 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccGbE86I.s 			page 11


 283              		.cfi_def_cfa 8, 0
  49:src/main.cpp  ****     /*
  50:src/main.cpp  ****     __putc('O');
  51:src/main.cpp  ****     __putc('S');
  52:src/main.cpp  ****     __putc('1');
  53:src/main.cpp  ****     __putc('\n');
  54:src/main.cpp  ****     __putc('\n');
  55:src/main.cpp  **** 
  56:src/main.cpp  ****     while(1)
  57:src/main.cpp  ****     {
  58:src/main.cpp  ****         char character = __getc();
  59:src/main.cpp  ****         __putc(character + 30);
  60:src/main.cpp  ****     }
  61:src/main.cpp  ****     */
  62:src/main.cpp  **** 
  63:src/main.cpp  ****     MemoryAllocator::initialise();
 284              		.loc 1 63 5
 285              		.loc 1 63 32 is_stmt 0
 286 01a0 97000000 		call	_ZN15MemoryAllocator10initialiseEv@plt
 286      E7800000 
 287              	.LVL32:
  64:src/main.cpp  **** 
  65:src/main.cpp  **** 
  66:src/main.cpp  ****     userMain();
 288              		.loc 1 66 5 is_stmt 1
 289              		.loc 1 66 13 is_stmt 0
 290 01a8 97000000 		call	_Z8userMainv
 290      E7800000 
 291              	.LVL33:
  67:src/main.cpp  **** }
 292              		.loc 1 67 1
 293 01b0 83308100 		ld	ra,8(sp)
 294              		.cfi_restore 1
 295 01b4 03340100 		ld	s0,0(sp)
 296              		.cfi_restore 8
 297              		.cfi_def_cfa 2, 16
 298 01b8 13010101 		addi	sp,sp,16
 299              		.cfi_def_cfa_offset 0
 300 01bc 67800000 		jr	ra
 301              		.cfi_endproc
 302              	.LFE34:
 304              	.Letext0:
 305              		.file 4 "src/../h/../lib/hw.h"
 306              		.file 5 "src/../h/MemoryAllocator.hpp"
 307              		.file 6 "src/../lib/console.h"
 308              		.file 7 "src/../h/print.hpp"
GAS LISTING /tmp/ccGbE86I.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccGbE86I.s:26     .text:0000000000000000 _Z8userMainv
     /tmp/ccGbE86I.s:30     .text:0000000000000000 .L0 
     /tmp/ccGbE86I.s:31     .text:0000000000000000 .L0 
     /tmp/ccGbE86I.s:32     .text:0000000000000004 .L0 
     /tmp/ccGbE86I.s:37     .text:0000000000000014 .L0 
     /tmp/ccGbE86I.s:38     .text:0000000000000014 .L0 
     /tmp/ccGbE86I.s:39     .text:0000000000000014 .L0 
     /tmp/ccGbE86I.s:40     .text:0000000000000014 .L0 
     /tmp/ccGbE86I.s:42     .text:0000000000000018 .L0 
     /tmp/ccGbE86I.s:44     .text:0000000000000018 .L0 
     /tmp/ccGbE86I.s:45     .text:0000000000000018 .L0 
     /tmp/ccGbE86I.s:51     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:122    .text:0000000000000020 .L0 
     /tmp/ccGbE86I.s:61     .text:0000000000000024 .L0 
     /tmp/ccGbE86I.s:62     .text:0000000000000024 .L0 
     /tmp/ccGbE86I.s:66     .text:0000000000000030 .L0 
     /tmp/ccGbE86I.s:67     .text:0000000000000030 .L0 
     /tmp/ccGbE86I.s:71     .text:000000000000003c .L0 
     /tmp/ccGbE86I.s:72     .text:000000000000003c .L0 
     /tmp/ccGbE86I.s:73     .text:000000000000003c .L0 
     /tmp/ccGbE86I.s:77     .text:0000000000000048 .L0 
     /tmp/ccGbE86I.s:79     .text:000000000000004c .L0 
     /tmp/ccGbE86I.s:80     .text:000000000000004c .L0 
     /tmp/ccGbE86I.s:83     .text:0000000000000058 .L0 
     /tmp/ccGbE86I.s:84     .text:0000000000000058 .L0 
     /tmp/ccGbE86I.s:88     .text:0000000000000068 .L0 
     /tmp/ccGbE86I.s:90     .text:000000000000006c .L0 
     /tmp/ccGbE86I.s:91     .text:000000000000006c .L0 
     /tmp/ccGbE86I.s:95     .text:000000000000007c .L0 
     /tmp/ccGbE86I.s:96     .text:000000000000007c .L0 
     /tmp/ccGbE86I.s:100    .text:000000000000008c .L0 
     /tmp/ccGbE86I.s:102    .text:0000000000000090 .L0 
     /tmp/ccGbE86I.s:103    .text:0000000000000090 .L0 
     /tmp/ccGbE86I.s:107    .text:00000000000000a0 .L0 
     /tmp/ccGbE86I.s:108    .text:00000000000000a0 .L0 
     /tmp/ccGbE86I.s:112    .text:00000000000000b0 .L0 
     /tmp/ccGbE86I.s:114    .text:00000000000000b4 .L0 
     /tmp/ccGbE86I.s:115    .text:00000000000000b4 .L0 
     /tmp/ccGbE86I.s:119    .text:00000000000000c4 .L0 
     /tmp/ccGbE86I.s:120    .text:00000000000000c4 .L0 
     /tmp/ccGbE86I.s:124    .text:00000000000000d4 .L0 
     /tmp/ccGbE86I.s:126    .text:00000000000000d8 .L0 
     /tmp/ccGbE86I.s:127    .text:00000000000000d8 .L0 
     /tmp/ccGbE86I.s:133    .text:00000000000000e8 .L0 
     /tmp/ccGbE86I.s:134    .text:00000000000000e8 .L0 
     /tmp/ccGbE86I.s:135    .text:00000000000000e8 .L0 
     /tmp/ccGbE86I.s:142    .text:00000000000000f0 .L0 
     /tmp/ccGbE86I.s:148    .text:00000000000000f4 .L0 
     /tmp/ccGbE86I.s:149    .text:00000000000000f4 .L0 
     /tmp/ccGbE86I.s:153    .text:00000000000000fc .L0 
     /tmp/ccGbE86I.s:154    .text:00000000000000fc .L0 
     /tmp/ccGbE86I.s:155    .text:00000000000000fc .L0 
     /tmp/ccGbE86I.s:161    .text:0000000000000100 .L0 
     /tmp/ccGbE86I.s:162    .text:0000000000000100 .L0 
     /tmp/ccGbE86I.s:167    .text:0000000000000104 .L0 
GAS LISTING /tmp/ccGbE86I.s 			page 13


     /tmp/ccGbE86I.s:169    .text:0000000000000108 .L0 
     /tmp/ccGbE86I.s:174    .text:000000000000010c .L0 
     /tmp/ccGbE86I.s:175    .text:000000000000010c .L0 
     /tmp/ccGbE86I.s:180    .text:0000000000000110 .L0 
     /tmp/ccGbE86I.s:182    .text:0000000000000114 .L0 
     /tmp/ccGbE86I.s:187    .text:0000000000000118 .L0 
     /tmp/ccGbE86I.s:188    .text:0000000000000118 .L0 
     /tmp/ccGbE86I.s:193    .text:000000000000011c .L0 
     /tmp/ccGbE86I.s:195    .text:0000000000000120 .L0 
     /tmp/ccGbE86I.s:200    .text:0000000000000124 .L0 
     /tmp/ccGbE86I.s:201    .text:0000000000000124 .L0 
     /tmp/ccGbE86I.s:206    .text:0000000000000128 .L0 
     /tmp/ccGbE86I.s:213    .text:0000000000000134 .L0 
     /tmp/ccGbE86I.s:218    .text:0000000000000140 .L0 
     /tmp/ccGbE86I.s:222    .text:0000000000000144 .L0 
     /tmp/ccGbE86I.s:226    .text:000000000000014c .L0 
     /tmp/ccGbE86I.s:227    .text:000000000000014c .L0 
     /tmp/ccGbE86I.s:229    .text:0000000000000150 .L0 
     /tmp/ccGbE86I.s:234    .text:0000000000000154 .L0 
     /tmp/ccGbE86I.s:235    .text:0000000000000154 .L0 
     /tmp/ccGbE86I.s:237    .text:0000000000000158 .L0 
     /tmp/ccGbE86I.s:239    .text:000000000000015c .L0 
     /tmp/ccGbE86I.s:248    .text:0000000000000168 .L0 
     /tmp/ccGbE86I.s:249    .text:0000000000000168 .L0 
     /tmp/ccGbE86I.s:253    .text:0000000000000178 .L0 
     /tmp/ccGbE86I.s:254    .text:000000000000017c .L0 
     /tmp/ccGbE86I.s:256    .text:0000000000000180 .L0 
     /tmp/ccGbE86I.s:257    .text:0000000000000180 .L0 
     /tmp/ccGbE86I.s:259    .text:0000000000000184 .L0 
     /tmp/ccGbE86I.s:262    .text:0000000000000188 .L0 
     /tmp/ccGbE86I.s:264    .text:000000000000018c .L0 
     /tmp/ccGbE86I.s:266    .text:0000000000000190 .L0 
     /tmp/ccGbE86I.s:272    .text:0000000000000190 main
     /tmp/ccGbE86I.s:275    .text:0000000000000190 .L0 
     /tmp/ccGbE86I.s:276    .text:0000000000000190 .L0 
     /tmp/ccGbE86I.s:277    .text:0000000000000194 .L0 
     /tmp/ccGbE86I.s:280    .text:000000000000019c .L0 
     /tmp/ccGbE86I.s:281    .text:000000000000019c .L0 
     /tmp/ccGbE86I.s:283    .text:00000000000001a0 .L0 
     /tmp/ccGbE86I.s:285    .text:00000000000001a0 .L0 
     /tmp/ccGbE86I.s:286    .text:00000000000001a0 .L0 
     /tmp/ccGbE86I.s:289    .text:00000000000001a8 .L0 
     /tmp/ccGbE86I.s:290    .text:00000000000001a8 .L0 
     /tmp/ccGbE86I.s:293    .text:00000000000001b0 .L0 
     /tmp/ccGbE86I.s:294    .text:00000000000001b4 .L0 
     /tmp/ccGbE86I.s:296    .text:00000000000001b8 .L0 
     /tmp/ccGbE86I.s:297    .text:00000000000001b8 .L0 
     /tmp/ccGbE86I.s:299    .text:00000000000001bc .L0 
     /tmp/ccGbE86I.s:301    .text:00000000000001c0 .L0 
     /tmp/ccGbE86I.s:309    .text:00000000000001c0 .L0 
     /tmp/ccGbE86I.s:45     .text:0000000000000018 .L0 
     /tmp/ccGbE86I.s:80     .text:000000000000004c .L0 
     /tmp/ccGbE86I.s:84     .text:0000000000000058 .L0 
     /tmp/ccGbE86I.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccGbE86I.s:91     .text:000000000000006c .L0 
     /tmp/ccGbE86I.s:96     .text:000000000000007c .L0 
     /tmp/ccGbE86I.s:11     .rodata.str1.8:0000000000000018 .LC1
GAS LISTING /tmp/ccGbE86I.s 			page 14


     /tmp/ccGbE86I.s:103    .text:0000000000000090 .L0 
     /tmp/ccGbE86I.s:108    .text:00000000000000a0 .L0 
     /tmp/ccGbE86I.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccGbE86I.s:115    .text:00000000000000b4 .L0 
     /tmp/ccGbE86I.s:120    .text:00000000000000c4 .L0 
     /tmp/ccGbE86I.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccGbE86I.s:127    .text:00000000000000d8 .L0 
     /tmp/ccGbE86I.s:20     .rodata.str1.8:0000000000000060 .LC4
     /tmp/ccGbE86I.s:249    .text:0000000000000168 .L0 
     /tmp/ccGbE86I.s:151    .text:00000000000000fc .L4
     /tmp/ccGbE86I.s:144    .text:00000000000000f4 .L2
     /tmp/ccGbE86I.s:220    .text:0000000000000144 .L3
     /tmp/ccGbE86I.s:243    .text:0000000000000168 .L5
     /tmp/ccGbE86I.s:216    .text:0000000000000140 .L6
     /tmp/ccGbE86I.s:210    .text:0000000000000134 .L7
     /tmp/ccGbE86I.s:1337   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccGbE86I.s:2603   .debug_str:0000000000000636 .LASF119
     /tmp/ccGbE86I.s:2489   .debug_str:0000000000000319 .LASF120
     /tmp/ccGbE86I.s:2449   .debug_str:00000000000001d5 .LASF121
     /tmp/ccGbE86I.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccGbE86I.s:304    .text:00000000000001c0 .Letext0
     /tmp/ccGbE86I.s:2375   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccGbE86I.s:2519   .debug_str:00000000000003f1 .LASF0
     /tmp/ccGbE86I.s:2535   .debug_str:0000000000000433 .LASF1
     /tmp/ccGbE86I.s:2507   .debug_str:00000000000003a1 .LASF2
     /tmp/ccGbE86I.s:2473   .debug_str:00000000000002c4 .LASF4
     /tmp/ccGbE86I.s:2581   .debug_str:0000000000000588 .LASF3
     /tmp/ccGbE86I.s:2401   .debug_str:000000000000007f .LASF5
     /tmp/ccGbE86I.s:2539   .debug_str:0000000000000451 .LASF6
     /tmp/ccGbE86I.s:2517   .debug_str:00000000000003de .LASF7
     /tmp/ccGbE86I.s:2609   .debug_str:000000000000071c .LASF8
     /tmp/ccGbE86I.s:2461   .debug_str:000000000000023d .LASF9
     /tmp/ccGbE86I.s:2553   .debug_str:00000000000004db .LASF10
     /tmp/ccGbE86I.s:2605   .debug_str:00000000000006fa .LASF11
     /tmp/ccGbE86I.s:2407   .debug_str:00000000000000a7 .LASF12
     /tmp/ccGbE86I.s:2383   .debug_str:0000000000000018 .LASF13
     /tmp/ccGbE86I.s:2415   .debug_str:00000000000000f8 .LASF14
     /tmp/ccGbE86I.s:2571   .debug_str:0000000000000545 .LASF15
     /tmp/ccGbE86I.s:2421   .debug_str:0000000000000127 .LASF16
     /tmp/ccGbE86I.s:2447   .debug_str:00000000000001cd .LASF20
     /tmp/ccGbE86I.s:2631   .debug_str:00000000000007cb .LASF17
     /tmp/ccGbE86I.s:2619   .debug_str:0000000000000777 .LASF18
     /tmp/ccGbE86I.s:2597   .debug_str:0000000000000618 .LASF19
     /tmp/ccGbE86I.s:2503   .debug_str:000000000000038a .LASF28
     /tmp/ccGbE86I.s:2381   .debug_str:000000000000000f .LASF21
     /tmp/ccGbE86I.s:2377   .debug_str:0000000000000000 .LASF22
     /tmp/ccGbE86I.s:2427   .debug_str:0000000000000160 .LASF23
     /tmp/ccGbE86I.s:2437   .debug_str:000000000000018f .LASF24
     /tmp/ccGbE86I.s:2547   .debug_str:0000000000000497 .LASF26
     /tmp/ccGbE86I.s:2537   .debug_str:0000000000000446 .LASF42
     /tmp/ccGbE86I.s:2411   .debug_str:00000000000000cb .LASF44
     /tmp/ccGbE86I.s:2585   .debug_str:00000000000005ab .LASF30
     /tmp/ccGbE86I.s:2595   .debug_str:00000000000005f7 .LASF32
     /tmp/ccGbE86I.s:2557   .debug_str:00000000000004f6 .LASF25
     /tmp/ccGbE86I.s:2459   .debug_str:000000000000021c .LASF27
     /tmp/ccGbE86I.s:2389   .debug_str:000000000000003d .LASF29
     /tmp/ccGbE86I.s:2431   .debug_str:0000000000000178 .LASF31
GAS LISTING /tmp/ccGbE86I.s 			page 15


     /tmp/ccGbE86I.s:2563   .debug_str:0000000000000522 .LASF33
     /tmp/ccGbE86I.s:2541   .debug_str:0000000000000464 .LASF36
     /tmp/ccGbE86I.s:2417   .debug_str:0000000000000104 .LASF38
     /tmp/ccGbE86I.s:2509   .debug_str:00000000000003af .LASF34
     /tmp/ccGbE86I.s:2469   .debug_str:0000000000000285 .LASF35
     /tmp/ccGbE86I.s:2501   .debug_str:000000000000037d .LASF37
     /tmp/ccGbE86I.s:2399   .debug_str:0000000000000066 .LASF39
     /tmp/ccGbE86I.s:2487   .debug_str:000000000000030c .LASF40
     /tmp/ccGbE86I.s:2499   .debug_str:0000000000000361 .LASF41
     /tmp/ccGbE86I.s:2565   .debug_str:000000000000052e .LASF122
     /tmp/ccGbE86I.s:2573   .debug_str:000000000000055b .LASF43
     /tmp/ccGbE86I.s:2515   .debug_str:00000000000003ce .LASF45
     /tmp/ccGbE86I.s:2529   .debug_str:000000000000041e .LASF123
     /tmp/ccGbE86I.s:2591   .debug_str:00000000000005d1 .LASF124
     /tmp/ccGbE86I.s:2479   .debug_str:00000000000002e7 .LASF46
     /tmp/ccGbE86I.s:2525   .debug_str:000000000000040e .LASF47
     /tmp/ccGbE86I.s:2483   .debug_str:00000000000002f7 .LASF48
     /tmp/ccGbE86I.s:2527   .debug_str:0000000000000414 .LASF49
     /tmp/ccGbE86I.s:2477   .debug_str:00000000000002de .LASF50
     /tmp/ccGbE86I.s:2495   .debug_str:000000000000033b .LASF51
     /tmp/ccGbE86I.s:2465   .debug_str:0000000000000261 .LASF53
     /tmp/ccGbE86I.s:2613   .debug_str:0000000000000741 .LASF125
     /tmp/ccGbE86I.s:2471   .debug_str:000000000000029c .LASF126
     /tmp/ccGbE86I.s:2523   .debug_str:0000000000000405 .LASF52
     /tmp/ccGbE86I.s:2443   .debug_str:00000000000001b5 .LASF54
     /tmp/ccGbE86I.s:2583   .debug_str:000000000000059a .LASF55
     /tmp/ccGbE86I.s:2493   .debug_str:0000000000000330 .LASF56
     /tmp/ccGbE86I.s:2467   .debug_str:000000000000027a .LASF57
     /tmp/ccGbE86I.s:2445   .debug_str:00000000000001c8 .LASF58
     /tmp/ccGbE86I.s:2531   .debug_str:0000000000000426 .LASF59
     /tmp/ccGbE86I.s:2425   .debug_str:0000000000000151 .LASF127
     /tmp/ccGbE86I.s:2419   .debug_str:000000000000011b .LASF60
     /tmp/ccGbE86I.s:2587   .debug_str:00000000000005b5 .LASF61
     /tmp/ccGbE86I.s:2403   .debug_str:0000000000000086 .LASF62
     /tmp/ccGbE86I.s:2567   .debug_str:0000000000000533 .LASF63
     /tmp/ccGbE86I.s:2625   .debug_str:0000000000000794 .LASF64
     /tmp/ccGbE86I.s:2385   .debug_str:0000000000000028 .LASF67
     /tmp/ccGbE86I.s:2593   .debug_str:00000000000005e2 .LASF69
     /tmp/ccGbE86I.s:2433   .debug_str:000000000000017d .LASF65
     /tmp/ccGbE86I.s:2405   .debug_str:0000000000000092 .LASF66
     /tmp/ccGbE86I.s:2513   .debug_str:00000000000003c7 .LASF68
     /tmp/ccGbE86I.s:2561   .debug_str:000000000000050f .LASF70
     /tmp/ccGbE86I.s:2601   .debug_str:000000000000062f .LASF71
     /tmp/ccGbE86I.s:2607   .debug_str:0000000000000709 .LASF72
     /tmp/ccGbE86I.s:2453   .debug_str:0000000000000206 .LASF73
     /tmp/ccGbE86I.s:2423   .debug_str:000000000000013d .LASF74
     /tmp/ccGbE86I.s:2379   .debug_str:0000000000000007 .LASF75
     /tmp/ccGbE86I.s:2627   .debug_str:00000000000007ac .LASF76
     /tmp/ccGbE86I.s:2439   .debug_str:0000000000000199 .LASF77
     /tmp/ccGbE86I.s:2409   .debug_str:00000000000000b7 .LASF78
     /tmp/ccGbE86I.s:2575   .debug_str:0000000000000561 .LASF79
     /tmp/ccGbE86I.s:2441   .debug_str:00000000000001a1 .LASF80
     /tmp/ccGbE86I.s:2521   .debug_str:00000000000003fe .LASF81
     /tmp/ccGbE86I.s:2621   .debug_str:000000000000077c .LASF82
     /tmp/ccGbE86I.s:2397   .debug_str:000000000000005f .LASF83
     /tmp/ccGbE86I.s:2451   .debug_str:00000000000001f3 .LASF84
     /tmp/ccGbE86I.s:2457   .debug_str:0000000000000216 .LASF85
GAS LISTING /tmp/ccGbE86I.s 			page 16


     /tmp/ccGbE86I.s:2599   .debug_str:000000000000061d .LASF86
     /tmp/ccGbE86I.s:2395   .debug_str:0000000000000059 .LASF87
     /tmp/ccGbE86I.s:2635   .debug_str:00000000000007d5 .LASF88
     /tmp/ccGbE86I.s:2629   .debug_str:00000000000007c0 .LASF89
     /tmp/ccGbE86I.s:2577   .debug_str:0000000000000569 .LASF90
     /tmp/ccGbE86I.s:2481   .debug_str:00000000000002ec .LASF91
     /tmp/ccGbE86I.s:2497   .debug_str:0000000000000349 .LASF92
     /tmp/ccGbE86I.s:2413   .debug_str:00000000000000ee .LASF93
     /tmp/ccGbE86I.s:2551   .debug_str:00000000000004c5 .LASF94
     /tmp/ccGbE86I.s:2391   .debug_str:0000000000000045 .LASF95
     /tmp/ccGbE86I.s:2463   .debug_str:000000000000024b .LASF96
     /tmp/ccGbE86I.s:2589   .debug_str:00000000000005c2 .LASF97
     /tmp/ccGbE86I.s:2615   .debug_str:000000000000074f .LASF98
     /tmp/ccGbE86I.s:2611   .debug_str:000000000000072c .LASF99
     /tmp/ccGbE86I.s:2543   .debug_str:000000000000046f .LASF100
     /tmp/ccGbE86I.s:2549   .debug_str:00000000000004c0 .LASF101
     /tmp/ccGbE86I.s:273    .text:0000000000000190 .LFB34
     /tmp/ccGbE86I.s:302    .text:00000000000001c0 .LFE34
     /tmp/ccGbE86I.s:287    .text:00000000000001a8 .LVL32
     /tmp/ccGbE86I.s:291    .text:00000000000001b0 .LVL33
     /tmp/ccGbE86I.s:2435   .debug_str:0000000000000186 .LASF102
     /tmp/ccGbE86I.s:2485   .debug_str:00000000000002ff .LASF103
     /tmp/ccGbE86I.s:27     .text:0000000000000000 .LFB33
     /tmp/ccGbE86I.s:267    .text:0000000000000190 .LFE33
     /tmp/ccGbE86I.s:2455   .debug_str:000000000000020e .LASF104
     /tmp/ccGbE86I.s:211    .text:0000000000000134 .LBB30
     /tmp/ccGbE86I.s:246    .text:0000000000000168 .LBE30
     /tmp/ccGbE86I.s:2533   .debug_str:000000000000042c .LASF105
     /tmp/ccGbE86I.s:2301   .debug_loc:0000000000000000 .LLST5
     /tmp/ccGbE86I.s:2617   .debug_str:000000000000076b .LASF106
     /tmp/ccGbE86I.s:2555   .debug_str:00000000000004ea .LASF128
     /tmp/ccGbE86I.s:2312   .debug_loc:0000000000000036 .LLST6
     /tmp/ccGbE86I.s:2491   .debug_str:0000000000000326 .LASF107
     /tmp/ccGbE86I.s:231    .text:0000000000000154 .LBB31
     /tmp/ccGbE86I.s:245    .text:0000000000000168 .LBE31
     /tmp/ccGbE86I.s:2319   .debug_loc:0000000000000059 .LLST7
     /tmp/ccGbE86I.s:240    .text:0000000000000164 .LVL28
     /tmp/ccGbE86I.s:215    .text:0000000000000140 .LVL24
     /tmp/ccGbE86I.s:47     .text:0000000000000020 .LBB18
     /tmp/ccGbE86I.s:59     .text:0000000000000024 .LBE18
     /tmp/ccGbE86I.s:131    .text:00000000000000e8 .LBB20
     /tmp/ccGbE86I.s:146    .text:00000000000000f4 .LBE20
     /tmp/ccGbE86I.s:2326   .debug_loc:000000000000007c .LLST0
     /tmp/ccGbE86I.s:157    .text:0000000000000100 .LBB22
     /tmp/ccGbE86I.s:165    .text:0000000000000104 .LBE22
     /tmp/ccGbE86I.s:2334   .debug_loc:00000000000000a0 .LLST1
     /tmp/ccGbE86I.s:171    .text:000000000000010c .LBB24
     /tmp/ccGbE86I.s:178    .text:0000000000000110 .LBE24
     /tmp/ccGbE86I.s:2341   .debug_loc:00000000000000c3 .LLST2
     /tmp/ccGbE86I.s:184    .text:0000000000000118 .LBB26
     /tmp/ccGbE86I.s:191    .text:000000000000011c .LBE26
     /tmp/ccGbE86I.s:2348   .debug_loc:00000000000000e6 .LLST3
     /tmp/ccGbE86I.s:197    .text:0000000000000124 .LBB28
     /tmp/ccGbE86I.s:204    .text:0000000000000128 .LBE28
     /tmp/ccGbE86I.s:2355   .debug_loc:0000000000000109 .LLST4
     /tmp/ccGbE86I.s:64     .text:0000000000000030 .LVL2
     /tmp/ccGbE86I.s:69     .text:000000000000003c .LVL3
GAS LISTING /tmp/ccGbE86I.s 			page 17


     /tmp/ccGbE86I.s:75     .text:0000000000000048 .LVL4
     /tmp/ccGbE86I.s:86     .text:0000000000000068 .LVL5
     /tmp/ccGbE86I.s:93     .text:000000000000007c .LVL6
     /tmp/ccGbE86I.s:98     .text:000000000000008c .LVL7
     /tmp/ccGbE86I.s:105    .text:00000000000000a0 .LVL8
     /tmp/ccGbE86I.s:110    .text:00000000000000b0 .LVL9
     /tmp/ccGbE86I.s:117    .text:00000000000000c4 .LVL10
     /tmp/ccGbE86I.s:122    .text:00000000000000d4 .LVL11
     /tmp/ccGbE86I.s:129    .text:00000000000000e8 .LVL12
     /tmp/ccGbE86I.s:150    .text:00000000000000fc .LVL14
     /tmp/ccGbE86I.s:251    .text:0000000000000178 .LVL30
     /tmp/ccGbE86I.s:2633   .debug_str:00000000000007d0 .LASF108
     /tmp/ccGbE86I.s:2545   .debug_str:0000000000000491 .LASF109
     /tmp/ccGbE86I.s:2623   .debug_str:000000000000078f .LASF110
     /tmp/ccGbE86I.s:2393   .debug_str:000000000000004f .LASF111
     /tmp/ccGbE86I.s:2511   .debug_str:00000000000003bb .LASF129
     /tmp/ccGbE86I.s:2579   .debug_str:0000000000000581 .LASF112
     /tmp/ccGbE86I.s:2475   .debug_str:00000000000002cb .LASF114
     /tmp/ccGbE86I.s:2505   .debug_str:000000000000039a .LASF113
     /tmp/ccGbE86I.s:2559   .debug_str:00000000000004ff .LASF115
     /tmp/ccGbE86I.s:2569   .debug_str:000000000000053e .LASF116
     /tmp/ccGbE86I.s:2429   .debug_str:0000000000000165 .LASF117
     /tmp/ccGbE86I.s:2387   .debug_str:0000000000000031 .LASF118
     /tmp/ccGbE86I.s:209    .text:0000000000000134 .LVL23
     /tmp/ccGbE86I.s:219    .text:0000000000000144 .LVL25
     /tmp/ccGbE86I.s:224    .text:000000000000014c .LVL26
     /tmp/ccGbE86I.s:242    .text:0000000000000168 .LVL29
     /tmp/ccGbE86I.s:260    .text:0000000000000184 .LVL31
     /tmp/ccGbE86I.s:230    .text:0000000000000154 .LVL27
     /tmp/ccGbE86I.s:143    .text:00000000000000f4 .LVL13
     /tmp/ccGbE86I.s:156    .text:0000000000000100 .LVL15
     /tmp/ccGbE86I.s:163    .text:0000000000000104 .LVL16
     /tmp/ccGbE86I.s:170    .text:000000000000010c .LVL17
     /tmp/ccGbE86I.s:176    .text:0000000000000110 .LVL18
     /tmp/ccGbE86I.s:183    .text:0000000000000118 .LVL19
     /tmp/ccGbE86I.s:189    .text:000000000000011c .LVL20
     /tmp/ccGbE86I.s:196    .text:0000000000000124 .LVL21
     /tmp/ccGbE86I.s:202    .text:0000000000000128 .LVL22
     /tmp/ccGbE86I.s:310    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
__putc
_ZN3TCB12createThreadEPFvvE
_ZN3TCB7runningE
_Z11workerBodyAv
_Z11printStringPKc
_Z11workerBodyBv
_Z11workerBodyCv
_Z11workerBodyDv
_ZN3TCB5yieldEv
_ZdlPv
_ZdaPv
_ZN15MemoryAllocator10initialiseEv
