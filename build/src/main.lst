GAS LISTING /tmp/cc2Ebh2o.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 46696E69 		.string	"Finished!\n"
   9      73686564 
   9      210A00
  10              		.text
  11              		.align	2
  12              		.globl	_Z8userMainv
  14              	_Z8userMainv:
  15              	.LFB16:
  16              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   3:src/main.cpp  **** #include "../h/print.hpp"
   4:src/main.cpp  **** #include "../h/riscv.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** 
   8:src/main.cpp  **** void userMain()
   9:src/main.cpp  **** {
  17              		.loc 1 9 1
  18              		.cfi_startproc
  19 0000 130101FE 		addi	sp,sp,-32
  20              		.cfi_def_cfa_offset 32
  21 0004 233C1100 		sd	ra,24(sp)
  22 0008 23388100 		sd	s0,16(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25 000c 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  10:src/main.cpp  ****     __putc('1');
  27              		.loc 1 10 5
  28              		.loc 1 10 11 is_stmt 0
  29 0010 13051003 		li	a0,49
  30 0014 97000000 		call	__putc@plt
  30      E7800000 
  31              	.LVL0:
  11:src/main.cpp  ****     __putc('\n');
  32              		.loc 1 11 5 is_stmt 1
  33              		.loc 1 11 11 is_stmt 0
  34 001c 1305A000 		li	a0,10
  35 0020 97000000 		call	__putc@plt
  35      E7800000 
  36              	.LVL1:
  12:src/main.cpp  **** 
  13:src/main.cpp  ****     thread_t handle2 = nullptr;
  37              		.loc 1 13 5 is_stmt 1
  38              		.loc 1 13 14 is_stmt 0
  39 0028 233404FE 		sd	zero,-24(s0)
  14:src/main.cpp  ****     thread_t handle3 = nullptr;
  40              		.loc 1 14 5 is_stmt 1
GAS LISTING /tmp/cc2Ebh2o.s 			page 2


  41              		.loc 1 14 14 is_stmt 0
  42 002c 233004FE 		sd	zero,-32(s0)
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     //handle2 = (_thread**) mem_alloc(sizeof(_thread*));
  17:src/main.cpp  ****     //handle3 = (_thread**) mem_alloc(sizeof(_thread*));
  18:src/main.cpp  **** 
  19:src/main.cpp  ****     thread_create(&handle2, workerBodyC, nullptr);
  43              		.loc 1 19 5 is_stmt 1
  44              		.loc 1 19 18 is_stmt 0
  45 0030 13060000 		li	a2,0
  46 0034 97050000 		la	a1,_Z11workerBodyCPv
  46      83B50500 
  47 003c 130584FE 		addi	a0,s0,-24
  48 0040 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
  48      E7800000 
  49              	.LVL2:
  20:src/main.cpp  ****     thread_create(&handle3, workerBodyD, nullptr);
  50              		.loc 1 20 5 is_stmt 1
  51              		.loc 1 20 18 is_stmt 0
  52 0048 13060000 		li	a2,0
  53 004c 97050000 		la	a1,_Z11workerBodyDPv
  53      83B50500 
  54 0054 130504FE 		addi	a0,s0,-32
  55 0058 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
  55      E7800000 
  56              	.LVL3:
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     printString("Finished!\n");
  57              		.loc 1 22 5 is_stmt 1
  58              		.loc 1 22 16 is_stmt 0
  59 0060 17050000 		lla	a0,.LC0
  59      13050500 
  60 0068 97000000 		call	_Z11printStringPKc@plt
  60      E7800000 
  61              	.LVL4:
  23:src/main.cpp  **** }
  62              		.loc 1 23 1
  63 0070 83308101 		ld	ra,24(sp)
  64              		.cfi_restore 1
  65 0074 03340101 		ld	s0,16(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 32
  68 0078 13010102 		addi	sp,sp,32
  69              		.cfi_def_cfa_offset 0
  70 007c 67800000 		jr	ra
  71              		.cfi_endproc
  72              	.LFE16:
  74              		.section	.rodata.str1.8
  75 000b 00000000 		.align	3
  75      00
  76              	.LC1:
  77 0010 4D61696E 		.string	"Main Thread return value: "
  77      20546872 
  77      65616420 
  77      72657475 
  77      726E2076 
  78 002b 00000000 		.align	3
GAS LISTING /tmp/cc2Ebh2o.s 			page 3


  78      00
  79              	.LC2:
  80 0030 0A00     		.string	"\n"
  81              		.text
  82              		.align	2
  83              		.globl	main
  85              	main:
  86              	.LFB17:
  24:src/main.cpp  **** 
  25:src/main.cpp  **** void main(void*)
  26:src/main.cpp  **** {
  87              		.loc 1 26 1 is_stmt 1
  88              		.cfi_startproc
  89 0080 130101FD 		addi	sp,sp,-48
  90              		.cfi_def_cfa_offset 48
  91 0084 23341102 		sd	ra,40(sp)
  92 0088 23308102 		sd	s0,32(sp)
  93 008c 233C9100 		sd	s1,24(sp)
  94              		.cfi_offset 1, -8
  95              		.cfi_offset 8, -16
  96              		.cfi_offset 9, -24
  97 0090 13040103 		addi	s0,sp,48
  98              		.cfi_def_cfa 8, 0
  27:src/main.cpp  ****     MemoryAllocator::initialise();
  99              		.loc 1 27 5
 100              		.loc 1 27 32 is_stmt 0
 101 0094 97000000 		call	_ZN15MemoryAllocator10initialiseEv@plt
 101      E7800000 
 102              	.LVL5:
  28:src/main.cpp  **** 
  29:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 103              		.loc 1 29 5 is_stmt 1
 104              		.loc 1 29 19 is_stmt 0
 105 009c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 105      83B70700 
 106              	.LVL6:
 107              	.LBB6:
 108              	.LBB7:
 109              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv
   8:src/../h/riscv.hpp **** {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
GAS LISTING /tmp/cc2Ebh2o.s 			page 4


  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // mask set register sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask clear register sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  60:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  61:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sstatus
  65:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sstatus
  68:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sstatus
  71:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sstatus
  74:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  75:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc2Ebh2o.s 			page 5


  76:src/../h/riscv.hpp ****     // supervisor trap
  77:src/../h/riscv.hpp ****     static void supervisorTrap();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp **** private:
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // supervisor trap handler
  82:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** };
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  87:src/../h/riscv.hpp **** {
  88:src/../h/riscv.hpp ****     uint64 volatile scause;
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  90:src/../h/riscv.hpp ****     return scause;
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  94:src/../h/riscv.hpp **** {
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 102:src/../h/riscv.hpp ****     return sepc;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 114:src/../h/riscv.hpp ****     return stvec;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 110              		.loc 2 119 5 is_stmt 1
 111              		.loc 2 119 69 is_stmt 0
 112              	#APP
 113              	# 119 "src/../h/riscv.hpp" 1
 120              	}
 114              		csrw stvec, a5
 115              	# 0 "" 2
 116              	.LVL7:
 117              	#NO_APP
 118              	.LBE7:
 119              	.LBE6:
  30:src/main.cpp  ****     thread_t handle = nullptr;
 120              		.loc 1 30 5 is_stmt 1
GAS LISTING /tmp/cc2Ebh2o.s 			page 6


 121              		.loc 1 30 14 is_stmt 0
 122 00a8 233C04FC 		sd	zero,-40(s0)
  31:src/main.cpp  **** 
  32:src/main.cpp  **** //    size_t blockNum = MemoryAllocator::convert2Blocks(sizeof(_thread**));
  33:src/main.cpp  **** //    handle = (_thread**) MemoryAllocator::mem_alloc(blockNum);
  34:src/main.cpp  **** 
  35:src/main.cpp  ****     int retVal = thread_create(&handle, nullptr, nullptr);
 123              		.loc 1 35 5 is_stmt 1
 124              		.loc 1 35 31 is_stmt 0
 125 00ac 13060000 		li	a2,0
 126 00b0 93050000 		li	a1,0
 127 00b4 130584FD 		addi	a0,s0,-40
 128 00b8 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
 128      E7800000 
 129              	.LVL8:
 130 00c0 93040500 		mv	s1,a0
 131              	.LVL9:
  36:src/main.cpp  **** 
  37:src/main.cpp  **** //    printString("Main Thread handle: ");
  38:src/main.cpp  **** //    printInteger((size_t)*handle);
  39:src/main.cpp  **** //    printString("\n");
  40:src/main.cpp  **** 
  41:src/main.cpp  ****     _thread::running = handle;
 132              		.loc 1 41 5 is_stmt 1
 133              		.loc 1 41 22 is_stmt 0
 134 00c4 97070000 		la	a5,_ZN7_thread7runningE
 134      83B70700 
 135 00cc 033784FD 		ld	a4,-40(s0)
 136 00d0 23B0E700 		sd	a4,0(a5)
  42:src/main.cpp  **** 
  43:src/main.cpp  ****     printString("Main Thread return value: ");
 137              		.loc 1 43 5 is_stmt 1
 138              		.loc 1 43 16 is_stmt 0
 139 00d4 17050000 		lla	a0,.LC1
 139      13050500 
 140 00dc 97000000 		call	_Z11printStringPKc@plt
 140      E7800000 
 141              	.LVL10:
  44:src/main.cpp  ****     printInteger(retVal);
 142              		.loc 1 44 5 is_stmt 1
 143              		.loc 1 44 17 is_stmt 0
 144 00e4 13850400 		mv	a0,s1
 145 00e8 97000000 		call	_Z12printIntegerm@plt
 145      E7800000 
 146              	.LVL11:
  45:src/main.cpp  ****     printString("\n");
 147              		.loc 1 45 5 is_stmt 1
 148              		.loc 1 45 16 is_stmt 0
 149 00f0 17050000 		lla	a0,.LC2
 149      13050500 
 150 00f8 97000000 		call	_Z11printStringPKc@plt
 150      E7800000 
 151              	.LVL12:
  46:src/main.cpp  **** 
  47:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 152              		.loc 1 47 5 is_stmt 1
 153              	.LBB8:
GAS LISTING /tmp/cc2Ebh2o.s 			page 7


 154              	.LBB9:
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     uint64 volatile stval;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 126:src/../h/riscv.hpp ****     return stval;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     uint64 volatile sip;
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 148:src/../h/riscv.hpp ****     return sip;
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 155              		.loc 2 158 5
 156              		.loc 2 158 68 is_stmt 0
 157 0100 93072000 		li	a5,2
 158              	#APP
 159              	# 158 "src/../h/riscv.hpp" 1
 159              	}
 160              		csrs sstatus, a5
 161              	# 0 "" 2
 162              	.LVL13:
 163              	#NO_APP
 164              	.LBE9:
 165              	.LBE8:
  48:src/main.cpp  **** 
  49:src/main.cpp  ****     userMain();
 166              		.loc 1 49 5 is_stmt 1
 167              		.loc 1 49 13 is_stmt 0
 168 0108 97000000 		call	_Z8userMainv
 168      E7800000 
GAS LISTING /tmp/cc2Ebh2o.s 			page 8


 169              	.LVL14:
  50:src/main.cpp  **** 
  51:src/main.cpp  ****     // thread_exit();
  52:src/main.cpp  **** }
 170              		.loc 1 52 1
 171 0110 83308102 		ld	ra,40(sp)
 172              		.cfi_restore 1
 173 0114 03340102 		ld	s0,32(sp)
 174              		.cfi_restore 8
 175              		.cfi_def_cfa 2, 48
 176 0118 83348101 		ld	s1,24(sp)
 177              		.cfi_restore 9
 178              	.LVL15:
 179 011c 13010103 		addi	sp,sp,48
 180              		.cfi_def_cfa_offset 0
 181 0120 67800000 		jr	ra
 182              		.cfi_endproc
 183              	.LFE17:
 185              	.Letext0:
 186              		.file 3 "src/../h/../lib/hw.h"
 187              		.file 4 "src/../h/MemoryAllocator.hpp"
 188              		.file 5 "src/../h/../h/thread.hpp"
 189              		.file 6 "src/../h/syscall_c.hpp"
 190              		.file 7 "src/../h/print.hpp"
 191              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/cc2Ebh2o.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc2Ebh2o.s:14     .text:0000000000000000 _Z8userMainv
     /tmp/cc2Ebh2o.s:18     .text:0000000000000000 .L0 
     /tmp/cc2Ebh2o.s:19     .text:0000000000000000 .L0 
     /tmp/cc2Ebh2o.s:20     .text:0000000000000004 .L0 
     /tmp/cc2Ebh2o.s:23     .text:000000000000000c .L0 
     /tmp/cc2Ebh2o.s:24     .text:000000000000000c .L0 
     /tmp/cc2Ebh2o.s:26     .text:0000000000000010 .L0 
     /tmp/cc2Ebh2o.s:28     .text:0000000000000010 .L0 
     /tmp/cc2Ebh2o.s:29     .text:0000000000000010 .L0 
     /tmp/cc2Ebh2o.s:33     .text:000000000000001c .L0 
     /tmp/cc2Ebh2o.s:34     .text:000000000000001c .L0 
     /tmp/cc2Ebh2o.s:38     .text:0000000000000028 .L0 
     /tmp/cc2Ebh2o.s:39     .text:0000000000000028 .L0 
     /tmp/cc2Ebh2o.s:41     .text:000000000000002c .L0 
     /tmp/cc2Ebh2o.s:42     .text:000000000000002c .L0 
     /tmp/cc2Ebh2o.s:44     .text:0000000000000030 .L0 
     /tmp/cc2Ebh2o.s:45     .text:0000000000000030 .L0 
     /tmp/cc2Ebh2o.s:51     .text:0000000000000048 .L0 
     /tmp/cc2Ebh2o.s:52     .text:0000000000000048 .L0 
     /tmp/cc2Ebh2o.s:58     .text:0000000000000060 .L0 
     /tmp/cc2Ebh2o.s:59     .text:0000000000000060 .L0 
     /tmp/cc2Ebh2o.s:63     .text:0000000000000070 .L0 
     /tmp/cc2Ebh2o.s:64     .text:0000000000000074 .L0 
     /tmp/cc2Ebh2o.s:66     .text:0000000000000078 .L0 
     /tmp/cc2Ebh2o.s:67     .text:0000000000000078 .L0 
     /tmp/cc2Ebh2o.s:69     .text:000000000000007c .L0 
     /tmp/cc2Ebh2o.s:71     .text:0000000000000080 .L0 
     /tmp/cc2Ebh2o.s:85     .text:0000000000000080 main
     /tmp/cc2Ebh2o.s:88     .text:0000000000000080 .L0 
     /tmp/cc2Ebh2o.s:89     .text:0000000000000080 .L0 
     /tmp/cc2Ebh2o.s:90     .text:0000000000000084 .L0 
     /tmp/cc2Ebh2o.s:94     .text:0000000000000090 .L0 
     /tmp/cc2Ebh2o.s:95     .text:0000000000000090 .L0 
     /tmp/cc2Ebh2o.s:96     .text:0000000000000090 .L0 
     /tmp/cc2Ebh2o.s:98     .text:0000000000000094 .L0 
     /tmp/cc2Ebh2o.s:100    .text:0000000000000094 .L0 
     /tmp/cc2Ebh2o.s:101    .text:0000000000000094 .L0 
     /tmp/cc2Ebh2o.s:104    .text:000000000000009c .L0 
     /tmp/cc2Ebh2o.s:105    .text:000000000000009c .L0 
     /tmp/cc2Ebh2o.s:111    .text:00000000000000a4 .L0 
  src/../h/riscv.hpp:119    .text:00000000000000a4 .L0 
     /tmp/cc2Ebh2o.s:121    .text:00000000000000a8 .L0 
     /tmp/cc2Ebh2o.s:122    .text:00000000000000a8 .L0 
     /tmp/cc2Ebh2o.s:124    .text:00000000000000ac .L0 
     /tmp/cc2Ebh2o.s:125    .text:00000000000000ac .L0 
     /tmp/cc2Ebh2o.s:133    .text:00000000000000c4 .L0 
     /tmp/cc2Ebh2o.s:134    .text:00000000000000c4 .L0 
     /tmp/cc2Ebh2o.s:138    .text:00000000000000d4 .L0 
     /tmp/cc2Ebh2o.s:139    .text:00000000000000d4 .L0 
     /tmp/cc2Ebh2o.s:143    .text:00000000000000e4 .L0 
     /tmp/cc2Ebh2o.s:144    .text:00000000000000e4 .L0 
     /tmp/cc2Ebh2o.s:148    .text:00000000000000f0 .L0 
     /tmp/cc2Ebh2o.s:149    .text:00000000000000f0 .L0 
     /tmp/cc2Ebh2o.s:155    .text:0000000000000100 .L0 
     /tmp/cc2Ebh2o.s:156    .text:0000000000000100 .L0 
GAS LISTING /tmp/cc2Ebh2o.s 			page 10


     /tmp/cc2Ebh2o.s:157    .text:0000000000000100 .L0 
     /tmp/cc2Ebh2o.s:167    .text:0000000000000108 .L0 
     /tmp/cc2Ebh2o.s:168    .text:0000000000000108 .L0 
     /tmp/cc2Ebh2o.s:171    .text:0000000000000110 .L0 
     /tmp/cc2Ebh2o.s:172    .text:0000000000000114 .L0 
     /tmp/cc2Ebh2o.s:174    .text:0000000000000118 .L0 
     /tmp/cc2Ebh2o.s:175    .text:0000000000000118 .L0 
     /tmp/cc2Ebh2o.s:177    .text:000000000000011c .L0 
     /tmp/cc2Ebh2o.s:180    .text:0000000000000120 .L0 
     /tmp/cc2Ebh2o.s:182    .text:0000000000000124 .L0 
     /tmp/cc2Ebh2o.s:192    .text:0000000000000124 .L0 
     /tmp/cc2Ebh2o.s:46     .text:0000000000000034 .L0 
     /tmp/cc2Ebh2o.s:53     .text:000000000000004c .L0 
     /tmp/cc2Ebh2o.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc2Ebh2o.s:59     .text:0000000000000060 .L0 
     /tmp/cc2Ebh2o.s:105    .text:000000000000009c .L0 
     /tmp/cc2Ebh2o.s:134    .text:00000000000000c4 .L0 
     /tmp/cc2Ebh2o.s:76     .rodata.str1.8:0000000000000010 .LC1
     /tmp/cc2Ebh2o.s:139    .text:00000000000000d4 .L0 
     /tmp/cc2Ebh2o.s:79     .rodata.str1.8:0000000000000030 .LC2
     /tmp/cc2Ebh2o.s:149    .text:00000000000000f0 .L0 
     /tmp/cc2Ebh2o.s:1039   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc2Ebh2o.s:1914   .debug_str:0000000000000544 .LASF107
     /tmp/cc2Ebh2o.s:1836   .debug_str:00000000000002ff .LASF108
     /tmp/cc2Ebh2o.s:1798   .debug_str:00000000000001cd .LASF109
     /tmp/cc2Ebh2o.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc2Ebh2o.s:185    .text:0000000000000124 .Letext0
     /tmp/cc2Ebh2o.s:1724   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc2Ebh2o.s:1856   .debug_str:00000000000003a4 .LASF0
     /tmp/cc2Ebh2o.s:1870   .debug_str:00000000000003e5 .LASF1
     /tmp/cc2Ebh2o.s:1846   .debug_str:000000000000034f .LASF2
     /tmp/cc2Ebh2o.s:1822   .debug_str:00000000000002a8 .LASF4
     /tmp/cc2Ebh2o.s:1896   .debug_str:00000000000004be .LASF3
     /tmp/cc2Ebh2o.s:1750   .debug_str:0000000000000086 .LASF5
     /tmp/cc2Ebh2o.s:1874   .debug_str:0000000000000403 .LASF6
     /tmp/cc2Ebh2o.s:1854   .debug_str:0000000000000391 .LASF7
     /tmp/cc2Ebh2o.s:1926   .debug_str:0000000000000685 .LASF8
     /tmp/cc2Ebh2o.s:1808   .debug_str:000000000000022d .LASF9
     /tmp/cc2Ebh2o.s:1882   .debug_str:0000000000000453 .LASF10
     /tmp/cc2Ebh2o.s:1916   .debug_str:0000000000000608 .LASF11
     /tmp/cc2Ebh2o.s:1754   .debug_str:0000000000000099 .LASF12
     /tmp/cc2Ebh2o.s:1734   .debug_str:0000000000000021 .LASF13
     /tmp/cc2Ebh2o.s:1762   .debug_str:00000000000000ea .LASF14
     /tmp/cc2Ebh2o.s:1892   .debug_str:0000000000000490 .LASF15
     /tmp/cc2Ebh2o.s:1770   .debug_str:000000000000010f .LASF16
     /tmp/cc2Ebh2o.s:1796   .debug_str:00000000000001c5 .LASF20
     /tmp/cc2Ebh2o.s:1948   .debug_str:0000000000000729 .LASF17
     /tmp/cc2Ebh2o.s:1938   .debug_str:00000000000006e2 .LASF18
     /tmp/cc2Ebh2o.s:1908   .debug_str:0000000000000526 .LASF19
     /tmp/cc2Ebh2o.s:1844   .debug_str:000000000000033f .LASF32
     /tmp/cc2Ebh2o.s:1732   .debug_str:0000000000000018 .LASF21
     /tmp/cc2Ebh2o.s:1728   .debug_str:0000000000000009 .LASF22
     /tmp/cc2Ebh2o.s:1776   .debug_str:0000000000000148 .LASF23
     /tmp/cc2Ebh2o.s:1788   .debug_str:0000000000000195 .LASF28
     /tmp/cc2Ebh2o.s:1878   .debug_str:0000000000000425 .LASF30
     /tmp/cc2Ebh2o.s:1872   .debug_str:00000000000003f8 .LASF37
     /tmp/cc2Ebh2o.s:1758   .debug_str:00000000000000bd .LASF39
GAS LISTING /tmp/cc2Ebh2o.s 			page 11


     /tmp/cc2Ebh2o.s:1898   .debug_str:00000000000004d0 .LASF24
     /tmp/cc2Ebh2o.s:1904   .debug_str:00000000000004fe .LASF26
     /tmp/cc2Ebh2o.s:1884   .debug_str:0000000000000462 .LASF25
     /tmp/cc2Ebh2o.s:1806   .debug_str:000000000000020c .LASF27
     /tmp/cc2Ebh2o.s:1860   .debug_str:00000000000003b8 .LASF29
     /tmp/cc2Ebh2o.s:1852   .debug_str:000000000000036a .LASF31
     /tmp/cc2Ebh2o.s:1868   .debug_str:00000000000003df .LASF33
     /tmp/cc2Ebh2o.s:1774   .debug_str:0000000000000139 .LASF110
     /tmp/cc2Ebh2o.s:1768   .debug_str:0000000000000103 .LASF34
     /tmp/cc2Ebh2o.s:1838   .debug_str:000000000000030c .LASF35
     /tmp/cc2Ebh2o.s:1752   .debug_str:000000000000008d .LASF36
     /tmp/cc2Ebh2o.s:1888   .debug_str:000000000000047e .LASF38
     /tmp/cc2Ebh2o.s:1942   .debug_str:00000000000006fa .LASF40
     /tmp/cc2Ebh2o.s:1736   .debug_str:0000000000000031 .LASF43
     /tmp/cc2Ebh2o.s:1902   .debug_str:00000000000004e9 .LASF45
     /tmp/cc2Ebh2o.s:1784   .debug_str:0000000000000183 .LASF41
     /tmp/cc2Ebh2o.s:1782   .debug_str:000000000000016e .LASF42
     /tmp/cc2Ebh2o.s:1848   .debug_str:000000000000035d .LASF44
     /tmp/cc2Ebh2o.s:1886   .debug_str:000000000000046b .LASF46
     /tmp/cc2Ebh2o.s:1912   .debug_str:000000000000053d .LASF47
     /tmp/cc2Ebh2o.s:1920   .debug_str:0000000000000629 .LASF48
     /tmp/cc2Ebh2o.s:1802   .debug_str:00000000000001fe .LASF49
     /tmp/cc2Ebh2o.s:1772   .debug_str:0000000000000125 .LASF50
     /tmp/cc2Ebh2o.s:1730   .debug_str:0000000000000010 .LASF51
     /tmp/cc2Ebh2o.s:1814   .debug_str:000000000000026e .LASF52
     /tmp/cc2Ebh2o.s:1790   .debug_str:000000000000019f .LASF53
     /tmp/cc2Ebh2o.s:1756   .debug_str:00000000000000a9 .LASF54
     /tmp/cc2Ebh2o.s:1816   .debug_str:0000000000000282 .LASF55
     /tmp/cc2Ebh2o.s:1792   .debug_str:00000000000001a7 .LASF56
     /tmp/cc2Ebh2o.s:1858   .debug_str:00000000000003b1 .LASF57
     /tmp/cc2Ebh2o.s:1940   .debug_str:00000000000006e7 .LASF58
     /tmp/cc2Ebh2o.s:1746   .debug_str:000000000000005a .LASF59
     /tmp/cc2Ebh2o.s:1800   .debug_str:00000000000001eb .LASF60
     /tmp/cc2Ebh2o.s:1804   .debug_str:0000000000000206 .LASF61
     /tmp/cc2Ebh2o.s:1910   .debug_str:000000000000052b .LASF62
     /tmp/cc2Ebh2o.s:1744   .debug_str:0000000000000054 .LASF63
     /tmp/cc2Ebh2o.s:1950   .debug_str:000000000000072e .LASF64
     /tmp/cc2Ebh2o.s:1946   .debug_str:000000000000071e .LASF65
     /tmp/cc2Ebh2o.s:1894   .debug_str:00000000000004a6 .LASF66
     /tmp/cc2Ebh2o.s:1828   .debug_str:00000000000002bd .LASF67
     /tmp/cc2Ebh2o.s:1842   .debug_str:0000000000000327 .LASF68
     /tmp/cc2Ebh2o.s:1760   .debug_str:00000000000000e0 .LASF69
     /tmp/cc2Ebh2o.s:1818   .debug_str:000000000000028a .LASF70
     /tmp/cc2Ebh2o.s:1794   .debug_str:00000000000001bb .LASF71
     /tmp/cc2Ebh2o.s:1810   .debug_str:000000000000023b .LASF72
     /tmp/cc2Ebh2o.s:1900   .debug_str:00000000000004da .LASF73
     /tmp/cc2Ebh2o.s:1934   .debug_str:00000000000006be .LASF74
     /tmp/cc2Ebh2o.s:1930   .debug_str:000000000000069c .LASF85
     /tmp/cc2Ebh2o.s:1834   .debug_str:00000000000002dd .LASF87
     /tmp/cc2Ebh2o.s:1820   .debug_str:00000000000002a0 .LASF75
     /tmp/cc2Ebh2o.s:1740   .debug_str:0000000000000047 .LASF76
     /tmp/cc2Ebh2o.s:1826   .debug_str:00000000000002b8 .LASF77
     /tmp/cc2Ebh2o.s:1824   .debug_str:00000000000002af .LASF78
     /tmp/cc2Ebh2o.s:1862   .debug_str:00000000000003c7 .LASF79
     /tmp/cc2Ebh2o.s:1830   .debug_str:00000000000002c8 .LASF80
     /tmp/cc2Ebh2o.s:1864   .debug_str:00000000000003cd .LASF81
     /tmp/cc2Ebh2o.s:1866   .debug_str:00000000000003d7 .LASF82
GAS LISTING /tmp/cc2Ebh2o.s 			page 12


     /tmp/cc2Ebh2o.s:1738   .debug_str:000000000000003a .LASF83
     /tmp/cc2Ebh2o.s:1922   .debug_str:000000000000063c .LASF84
     /tmp/cc2Ebh2o.s:1840   .debug_str:0000000000000319 .LASF86
     /tmp/cc2Ebh2o.s:1812   .debug_str:0000000000000251 .LASF88
     /tmp/cc2Ebh2o.s:1876   .debug_str:0000000000000416 .LASF89
     /tmp/cc2Ebh2o.s:1924   .debug_str:0000000000000667 .LASF90
     /tmp/cc2Ebh2o.s:1742   .debug_str:000000000000004f .LASF91
     /tmp/cc2Ebh2o.s:1726   .debug_str:0000000000000000 .LASF92
     /tmp/cc2Ebh2o.s:1880   .debug_str:000000000000044e .LASF93
     /tmp/cc2Ebh2o.s:86     .text:0000000000000080 .LFB17
     /tmp/cc2Ebh2o.s:183    .text:0000000000000124 .LFE17
     /tmp/cc2Ebh2o.s:1906   .debug_str:000000000000051f .LASF94
     /tmp/cc2Ebh2o.s:1928   .debug_str:0000000000000695 .LASF95
     /tmp/cc2Ebh2o.s:1696   .debug_loc:0000000000000000 .LLST0
     /tmp/cc2Ebh2o.s:107    .text:00000000000000a4 .LBB6
     /tmp/cc2Ebh2o.s:119    .text:00000000000000a8 .LBE6
     /tmp/cc2Ebh2o.s:153    .text:0000000000000100 .LBB8
     /tmp/cc2Ebh2o.s:165    .text:0000000000000108 .LBE8
     /tmp/cc2Ebh2o.s:1703   .debug_loc:0000000000000023 .LLST1
     /tmp/cc2Ebh2o.s:102    .text:000000000000009c .LVL5
     /tmp/cc2Ebh2o.s:129    .text:00000000000000c0 .LVL8
     /tmp/cc2Ebh2o.s:141    .text:00000000000000e4 .LVL10
     /tmp/cc2Ebh2o.s:146    .text:00000000000000f0 .LVL11
     /tmp/cc2Ebh2o.s:151    .text:0000000000000100 .LVL12
     /tmp/cc2Ebh2o.s:169    .text:0000000000000110 .LVL14
     /tmp/cc2Ebh2o.s:1786   .debug_str:000000000000018c .LASF111
     /tmp/cc2Ebh2o.s:1832   .debug_str:00000000000002d0 .LASF112
     /tmp/cc2Ebh2o.s:15     .text:0000000000000000 .LFB16
     /tmp/cc2Ebh2o.s:72     .text:0000000000000080 .LFE16
     /tmp/cc2Ebh2o.s:1936   .debug_str:00000000000006da .LASF96
     /tmp/cc2Ebh2o.s:1766   .debug_str:00000000000000fb .LASF97
     /tmp/cc2Ebh2o.s:31     .text:000000000000001c .LVL0
     /tmp/cc2Ebh2o.s:36     .text:0000000000000028 .LVL1
     /tmp/cc2Ebh2o.s:49     .text:0000000000000048 .LVL2
     /tmp/cc2Ebh2o.s:56     .text:0000000000000060 .LVL3
     /tmp/cc2Ebh2o.s:61     .text:0000000000000070 .LVL4
     /tmp/cc2Ebh2o.s:1764   .debug_str:00000000000000f6 .LASF98
     /tmp/cc2Ebh2o.s:1850   .debug_str:0000000000000364 .LASF99
     /tmp/cc2Ebh2o.s:1748   .debug_str:0000000000000061 .LASF100
     /tmp/cc2Ebh2o.s:1780   .debug_str:0000000000000160 .LASF102
     /tmp/cc2Ebh2o.s:1778   .debug_str:000000000000014d .LASF101
     /tmp/cc2Ebh2o.s:1944   .debug_str:0000000000000712 .LASF103
     /tmp/cc2Ebh2o.s:1918   .debug_str:0000000000000617 .LASF104
     /tmp/cc2Ebh2o.s:1932   .debug_str:00000000000006b1 .LASF105
     /tmp/cc2Ebh2o.s:1890   .debug_str:0000000000000489 .LASF106
     /tmp/cc2Ebh2o.s:131    .text:00000000000000c4 .LVL9
     /tmp/cc2Ebh2o.s:178    .text:000000000000011c .LVL15
     /tmp/cc2Ebh2o.s:162    .text:0000000000000108 .LVL13
     /tmp/cc2Ebh2o.s:193    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
__putc
_Z11workerBodyCPv
_Z13thread_createPP7_threadPFvPvES2_
_Z11workerBodyDPv
_Z11printStringPKc
_ZN15MemoryAllocator10initialiseEv
GAS LISTING /tmp/cc2Ebh2o.s 			page 13


_ZN5Riscv14supervisorTrapEv
_ZN7_thread7runningE
_Z12printIntegerm
