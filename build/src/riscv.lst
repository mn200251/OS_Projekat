GAS LISTING /tmp/ccIQXOEV.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB16:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/console.h"
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   4:src/riscv.cpp **** #include "../test/printing.hpp"
   5:src/riscv.cpp **** 
   6:src/riscv.cpp **** void Riscv::popSppSpie()
   7:src/riscv.cpp **** {
  12              		.loc 1 7 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 8 5
  21              		.loc 1 8 38 is_stmt 0
  22              	#APP
  23              	# 8 "src/riscv.cpp" 1
   9              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 9 5 is_stmt 1
  27              		.loc 1 9 29 is_stmt 0
  28              	# 9 "src/riscv.cpp" 1
  10              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 10 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE16:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 0A556E65 		.string	"\nUnexpected trap cause!\n"
  45      78706563 
  45      74656420 
  45      74726170 
  45      20636175 
GAS LISTING /tmp/ccIQXOEV.s 			page 2


  46 0019 00000000 		.align	3
  46      000000
  47              	.LC1:
  48 0020 53636175 		.string	"Scause: "
  48      73653A20 
  48      00
  49 0029 00000000 		.align	3
  49      000000
  50              	.LC2:
  51 0030 0A00     		.string	"\n"
  52 0032 00000000 		.align	3
  52      0000
  53              	.LC3:
  54 0038 73657063 		.string	"sepc = "
  54      203D2000 
  55              		.text
  56              		.align	2
  57              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  59              	_ZN5Riscv20handleSupervisorTrapEv:
  60              	.LFB17:
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  13:src/riscv.cpp **** {
  61              		.loc 1 13 1 is_stmt 1
  62              		.cfi_startproc
  63 0020 130101F6 		addi	sp,sp,-160
  64              		.cfi_def_cfa_offset 160
  65 0024 233C1108 		sd	ra,152(sp)
  66 0028 23388108 		sd	s0,144(sp)
  67 002c 23349108 		sd	s1,136(sp)
  68 0030 23302109 		sd	s2,128(sp)
  69              		.cfi_offset 1, -8
  70              		.cfi_offset 8, -16
  71              		.cfi_offset 9, -24
  72              		.cfi_offset 18, -32
  73 0034 1304010A 		addi	s0,sp,160
  74              		.cfi_def_cfa 8, 0
  14:src/riscv.cpp ****     uint64 a[8];
  75              		.loc 1 14 5
  15:src/riscv.cpp ****     asm volatile("sd a0, %0" : "=m" (a[0]));
  76              		.loc 1 15 5
  77              		.loc 1 15 44 is_stmt 0
  78              	#APP
  79              	# 15 "src/riscv.cpp" 1
  16              	    asm volatile("sd a1, %0" : "=m" (a[1]));
  80              		sd a0, -96(s0)
  81              	# 0 "" 2
  82              		.loc 1 16 5 is_stmt 1
  83              		.loc 1 16 44 is_stmt 0
  84              	# 16 "src/riscv.cpp" 1
  17              	    asm volatile("sd a2, %0" : "=m" (a[2]));
  85              		sd a1, -88(s0)
  86              	# 0 "" 2
  87              		.loc 1 17 5 is_stmt 1
  88              		.loc 1 17 44 is_stmt 0
  89              	# 17 "src/riscv.cpp" 1
  18              	    asm volatile("sd a3, %0" : "=m" (a[3]));
GAS LISTING /tmp/ccIQXOEV.s 			page 3


  90              		sd a2, -80(s0)
  91              	# 0 "" 2
  92              		.loc 1 18 5 is_stmt 1
  93              		.loc 1 18 44 is_stmt 0
  94              	# 18 "src/riscv.cpp" 1
  19              	    asm volatile("sd a4, %0" : "=m" (a[4]));
  95              		sd a3, -72(s0)
  96              	# 0 "" 2
  97              		.loc 1 19 5 is_stmt 1
  98              		.loc 1 19 44 is_stmt 0
  99              	# 19 "src/riscv.cpp" 1
  20              	    asm volatile("sd a5, %0" : "=m" (a[5]));
 100              		sd a4, -64(s0)
 101              	# 0 "" 2
 102              		.loc 1 20 5 is_stmt 1
 103              		.loc 1 20 44 is_stmt 0
 104              	# 20 "src/riscv.cpp" 1
  21              	    asm volatile("sd a6, %0" : "=m" (a[6]));
 105              		sd a5, -56(s0)
 106              	# 0 "" 2
 107              		.loc 1 21 5 is_stmt 1
 108              		.loc 1 21 44 is_stmt 0
 109              	# 21 "src/riscv.cpp" 1
  22              	    asm volatile("sd a7, %0" : "=m" (a[7]));
 110              		sd a6, -48(s0)
 111              	# 0 "" 2
 112              		.loc 1 22 5 is_stmt 1
 113              		.loc 1 22 44 is_stmt 0
 114              	# 22 "src/riscv.cpp" 1
  23              	
  24:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
 115              		sd a7, -40(s0)
 116              	# 0 "" 2
 117              		.loc 1 24 5 is_stmt 1
 118              	#NO_APP
 119              	.LBB58:
 120              	.LBB59:
 121              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv
   8:src/../h/riscv.hpp **** {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccIQXOEV.s 			page 4


  20:src/../h/riscv.hpp ****     // read register sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // mask set register sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask clear register sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  60:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  61:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sstatus
  65:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sstatus
  68:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sstatus
  71:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sstatus
  74:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // supervisor trap
GAS LISTING /tmp/ccIQXOEV.s 			page 5


  77:src/../h/riscv.hpp ****     static void supervisorTrap();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp **** private:
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // supervisor trap handler
  82:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** };
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  87:src/../h/riscv.hpp **** {
  88:src/../h/riscv.hpp ****     uint64 volatile scause;
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  90:src/../h/riscv.hpp ****     return scause;
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  94:src/../h/riscv.hpp **** {
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 122              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 123              		.loc 2 101 5
 124              		.loc 2 101 64 is_stmt 0
 125              	#APP
 126              	# 101 "src/../h/riscv.hpp" 1
 102              	    return sepc;
 127              		csrr a5, sepc
 128              	# 0 "" 2
 129              	#NO_APP
 130 005c 233CF4F6 		sd	a5,-136(s0)
 131              		.loc 2 102 5 is_stmt 1
 132              		.loc 2 102 12 is_stmt 0
 133 0060 833784F7 		ld	a5,-136(s0)
 134              	.LBE59:
 135              	.LBE58:
 136              		.loc 1 24 35
 137 0064 233CF4F8 		sd	a5,-104(s0)
  25:src/riscv.cpp ****     uint64 volatile sstatus = r_sstatus();
 138              		.loc 1 25 5 is_stmt 1
 139              	.LBB60:
 140              	.LBB61:
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
GAS LISTING /tmp/ccIQXOEV.s 			page 6


 114:src/../h/riscv.hpp ****     return stvec;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     uint64 volatile stval;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 126:src/../h/riscv.hpp ****     return stval;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     uint64 volatile sip;
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 148:src/../h/riscv.hpp ****     return sip;
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 141              		.loc 2 168 5
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/ccIQXOEV.s 			page 7


 142              		.loc 2 169 5
 143              		.loc 2 169 76 is_stmt 0
 144              	#APP
 145              	# 169 "src/../h/riscv.hpp" 1
 170              	    return sstatus;
 146              		csrr a5, sstatus
 147              	# 0 "" 2
 148              	#NO_APP
 149 006c 2338F4F6 		sd	a5,-144(s0)
 150              		.loc 2 170 5 is_stmt 1
 151              		.loc 2 170 12 is_stmt 0
 152 0070 833704F7 		ld	a5,-144(s0)
 153              	.LBE61:
 154              	.LBE60:
 155              		.loc 1 25 41
 156 0074 2338F4F8 		sd	a5,-112(s0)
  26:src/riscv.cpp **** 
  27:src/riscv.cpp ****     // retrieve stack pointer relative to saved registers
  28:src/riscv.cpp ****     void* volatile SP;
 157              		.loc 1 28 5 is_stmt 1
  29:src/riscv.cpp ****     asm volatile("csrr %0, sscratch" : "=r" (SP));
 158              		.loc 1 29 5
 159              		.loc 1 29 50 is_stmt 0
 160              	#APP
 161              	# 29 "src/riscv.cpp" 1
  30              	
 162              		csrr a5, sscratch
 163              	# 0 "" 2
 164              	#NO_APP
 165 007c 2334F4F8 		sd	a5,-120(s0)
  31:src/riscv.cpp ****     uint64 volatile scause = r_scause();
 166              		.loc 1 31 5 is_stmt 1
 167              	.LBB62:
 168              	.LBB63:
  88:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 169              		.loc 2 88 5
  89:src/../h/riscv.hpp ****     return scause;
 170              		.loc 2 89 5
  89:src/../h/riscv.hpp ****     return scause;
 171              		.loc 2 89 72 is_stmt 0
 172              	#APP
 173              	# 89 "src/../h/riscv.hpp" 1
 174              		csrr a5, scause
 175              	# 0 "" 2
 176              	#NO_APP
 177 0084 2334F4F6 		sd	a5,-152(s0)
  90:src/../h/riscv.hpp **** }
 178              		.loc 2 90 5 is_stmt 1
  90:src/../h/riscv.hpp **** }
 179              		.loc 2 90 12 is_stmt 0
 180 0088 833784F6 		ld	a5,-152(s0)
 181              	.LBE63:
 182              	.LBE62:
 183              		.loc 1 31 39
 184 008c 2330F4F8 		sd	a5,-128(s0)
  32:src/riscv.cpp **** 
  33:src/riscv.cpp **** //    printString("scause: ");
GAS LISTING /tmp/ccIQXOEV.s 			page 8


  34:src/riscv.cpp **** //    printInteger(scause);
  35:src/riscv.cpp **** //    printString("\n");
  36:src/riscv.cpp **** 
  37:src/riscv.cpp **** 
  38:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 185              		.loc 1 38 5 is_stmt 1
 186              	.LBB64:
 187              		.loc 1 38 16 is_stmt 0
 188 0090 033704F8 		ld	a4,-128(s0)
 189              		.loc 1 38 40
 190 0094 93078000 		li	a5,8
 191 0098 6306F70A 		beq	a4,a5,.L4
 192              		.loc 1 38 50 discriminator 2
 193 009c 033704F8 		ld	a4,-128(s0)
 194              		.loc 1 38 40 discriminator 2
 195 00a0 93079000 		li	a5,9
 196 00a4 6300F70A 		beq	a4,a5,.L4
  39:src/riscv.cpp ****     {
  40:src/riscv.cpp ****         sepc = sepc + 4;
  41:src/riscv.cpp ****         w_sepc(sepc);
  42:src/riscv.cpp **** 
  43:src/riscv.cpp ****         // mem_alloc
  44:src/riscv.cpp ****         if (a[0] == 0x0000000000000001UL)
  45:src/riscv.cpp ****         {
  46:src/riscv.cpp ****             // get the size argument
  47:src/riscv.cpp ****             size_t size = reinterpret_cast<size_t>(a[1]);
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****             size_t blockNum = MemoryAllocator::convert2Blocks(size);
  50:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  53:src/riscv.cpp **** 
  54:src/riscv.cpp ****             // put the return value on the stack
  55:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  56:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
  57:src/riscv.cpp ****         }
  58:src/riscv.cpp ****         // mem_free
  59:src/riscv.cpp ****         else if (a[0] == 0x0000000000000002UL)
  60:src/riscv.cpp ****         {
  61:src/riscv.cpp ****             // get the ptr argument
  62:src/riscv.cpp ****             void* ptr = reinterpret_cast<void *>(a[1]);
  63:src/riscv.cpp **** 
  64:src/riscv.cpp ****             int retVal = MemoryAllocator::mem_free(ptr);
  65:src/riscv.cpp **** 
  66:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  67:src/riscv.cpp **** 
  68:src/riscv.cpp ****             // put the return value on the stack
  69:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  70:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
  71:src/riscv.cpp ****         }
  72:src/riscv.cpp ****         // thread_create
  73:src/riscv.cpp ****         else if (a[0] == 0x0000000000000011UL)
  74:src/riscv.cpp ****         {
  75:src/riscv.cpp ****             thread_t* handle = reinterpret_cast<thread_t *>(a[1]);
  76:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[2]);
  77:src/riscv.cpp ****             void* arg = reinterpret_cast<void *>(a[3]);
  78:src/riscv.cpp ****             void* stack_space = reinterpret_cast<void *>(a[4]);
GAS LISTING /tmp/ccIQXOEV.s 			page 9


  79:src/riscv.cpp **** 
  80:src/riscv.cpp ****             int retVal = _thread::threadCreate(handle, start_routine, arg, stack_space);
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  83:src/riscv.cpp **** 
  84:src/riscv.cpp ****             // put the return value on the stack
  85:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  86:src/riscv.cpp ****         }
  87:src/riscv.cpp ****         // thread_exit
  88:src/riscv.cpp ****         else if (a[0] == 0x0000000000000012UL)
  89:src/riscv.cpp ****         {
  90:src/riscv.cpp ****             _thread::running->finished = true;
  91:src/riscv.cpp **** 
  92:src/riscv.cpp ****             _thread::threadDispatch();
  93:src/riscv.cpp **** 
  94:src/riscv.cpp ****             // error if this runs!
  95:src/riscv.cpp ****             int retVal;
  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****             // return error code if thread didn't exit
  98:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  99:src/riscv.cpp ****         }
 100:src/riscv.cpp ****         // thread_dispatch
 101:src/riscv.cpp ****         else if (a[0] == 0x0000000000000013UL)
 102:src/riscv.cpp ****         {
 103:src/riscv.cpp ****             // sepc and sstatus already saved
 104:src/riscv.cpp ****             // seps already added +4
 105:src/riscv.cpp **** 
 106:src/riscv.cpp ****             _thread::running->timeSlice = 0;
 107:src/riscv.cpp **** 
 108:src/riscv.cpp ****             _thread::threadDispatch();
 109:src/riscv.cpp **** 
 110:src/riscv.cpp ****             // printString("Dispatched!\n");
 111:src/riscv.cpp **** 
 112:src/riscv.cpp ****             w_sstatus(sstatus);
 113:src/riscv.cpp ****             w_sepc(sepc);
 114:src/riscv.cpp **** 
 115:src/riscv.cpp ****             // nothing to return
 116:src/riscv.cpp ****         }
 117:src/riscv.cpp ****         // thread_join
 118:src/riscv.cpp ****         else if (a[0] == 0x0000000000000014UL)
 119:src/riscv.cpp ****         {
 120:src/riscv.cpp ****             _thread* handle = reinterpret_cast<_thread*>(a[1]);
 121:src/riscv.cpp **** 
 122:src/riscv.cpp ****             if (!handle->finished)
 123:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 124:src/riscv.cpp **** 
 125:src/riscv.cpp ****             w_sstatus(sstatus);
 126:src/riscv.cpp ****             w_sepc(sepc);
 127:src/riscv.cpp ****         }
 128:src/riscv.cpp ****         // sem_open
 129:src/riscv.cpp ****         else if (a[0] == 0x0000000000000021UL)
 130:src/riscv.cpp ****         {
 131:src/riscv.cpp ****             _sem** handle = reinterpret_cast<_sem** >(a[1]);
 132:src/riscv.cpp ****             unsigned init = (unsigned)a[2];
 133:src/riscv.cpp **** 
 134:src/riscv.cpp ****             int retVal = _sem::semOpen(handle, init);
 135:src/riscv.cpp **** 
GAS LISTING /tmp/ccIQXOEV.s 			page 10


 136:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 137:src/riscv.cpp **** 
 138:src/riscv.cpp ****             // put the return value on the stack
 139:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 140:src/riscv.cpp ****         }
 141:src/riscv.cpp ****         // sem_close
 142:src/riscv.cpp ****         else if (a[0] == 0x0000000000000022UL)
 143:src/riscv.cpp ****         {
 144:src/riscv.cpp ****             _sem* handle = reinterpret_cast<_sem* >(a[1]);
 145:src/riscv.cpp **** 
 146:src/riscv.cpp **** 
 147:src/riscv.cpp ****             int retVal = _sem::semClose(handle);
 148:src/riscv.cpp **** 
 149:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 150:src/riscv.cpp **** 
 151:src/riscv.cpp ****             // put the return value on the stack
 152:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 153:src/riscv.cpp ****         }
 154:src/riscv.cpp ****         // sem_wait
 155:src/riscv.cpp ****         else if (a[0] == 0x0000000000000023UL)
 156:src/riscv.cpp ****         {
 157:src/riscv.cpp ****             _sem* id = reinterpret_cast<_sem* >(a[1]);
 158:src/riscv.cpp **** 
 159:src/riscv.cpp ****             int retVal = _sem::semWait(id);
 160:src/riscv.cpp **** 
 161:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 162:src/riscv.cpp **** 
 163:src/riscv.cpp ****             // put the return value on the stack
 164:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 165:src/riscv.cpp **** 
 166:src/riscv.cpp ****             // restore sstatus and sepc because we are changing threads
 167:src/riscv.cpp ****             w_sstatus(sstatus);
 168:src/riscv.cpp ****             w_sepc(sepc);
 169:src/riscv.cpp ****         }
 170:src/riscv.cpp ****         // sem_signal
 171:src/riscv.cpp ****         else if (a[0] == 0x0000000000000024UL)
 172:src/riscv.cpp ****         {
 173:src/riscv.cpp ****             _sem* id = reinterpret_cast<_sem* >(a[1]);
 174:src/riscv.cpp **** 
 175:src/riscv.cpp ****             int retVal = _sem::semSignal(id);
 176:src/riscv.cpp **** 
 177:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 178:src/riscv.cpp **** 
 179:src/riscv.cpp ****             // put the return value on the stack
 180:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 181:src/riscv.cpp ****         }
 182:src/riscv.cpp ****         // enter user mode
 183:src/riscv.cpp ****         else if (a[0] == 0x0000000000000025UL)
 184:src/riscv.cpp ****         {
 185:src/riscv.cpp ****             size_t sstatus;
 186:src/riscv.cpp ****             asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 187:src/riscv.cpp ****             sstatus &= ~0x100;
 188:src/riscv.cpp ****             asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 189:src/riscv.cpp ****         }
 190:src/riscv.cpp ****         // enter system mode
 191:src/riscv.cpp ****         else if (a[0] == 0x0000000000000026UL)
 192:src/riscv.cpp ****         {
GAS LISTING /tmp/ccIQXOEV.s 			page 11


 193:src/riscv.cpp ****             size_t sstatus;
 194:src/riscv.cpp ****             asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 195:src/riscv.cpp ****             sstatus |= 0x100;
 196:src/riscv.cpp ****             asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 197:src/riscv.cpp ****         }
 198:src/riscv.cpp ****         // getc
 199:src/riscv.cpp ****         else if (a[0] == 0x0000000000000041UL)
 200:src/riscv.cpp ****         {
 201:src/riscv.cpp ****             uint64 retVal = __getc();
 202:src/riscv.cpp **** 
 203:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 204:src/riscv.cpp **** 
 205:src/riscv.cpp ****             // put the return value on the stack
 206:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 207:src/riscv.cpp ****         }
 208:src/riscv.cpp ****         // putc
 209:src/riscv.cpp ****         else if (a[0] == 0x0000000000000042UL)
 210:src/riscv.cpp ****         {
 211:src/riscv.cpp ****             char c = (char)a[1];
 212:src/riscv.cpp **** 
 213:src/riscv.cpp ****             __putc(c);
 214:src/riscv.cpp ****         }
 215:src/riscv.cpp ****         //////////////////////////////////////////////////////////////////////
 216:src/riscv.cpp ****         // fork()
 217:src/riscv.cpp ****         else if (a[0] == 0x0000000000000027UL)
 218:src/riscv.cpp ****         {
 219:src/riscv.cpp ****             _thread::threadFork();
 220:src/riscv.cpp **** //            w_sstatus(sstatus);
 221:src/riscv.cpp **** //            w_sepc(sepc);
 222:src/riscv.cpp ****         }
 223:src/riscv.cpp ****         // exec
 224:src/riscv.cpp ****         else if (a[0] == 0x0000000000000028UL)
 225:src/riscv.cpp ****         {
 226:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[1]);
 227:src/riscv.cpp ****             void* arg = (void*)a[2];
 228:src/riscv.cpp **** 
 229:src/riscv.cpp ****             // delete and make new stack
 230:src/riscv.cpp ****             _thread::threadExec();
 231:src/riscv.cpp **** 
 232:src/riscv.cpp ****             _thread::running->body = start_routine;
 233:src/riscv.cpp ****             _thread::running->arg = arg;
 234:src/riscv.cpp **** 
 235:src/riscv.cpp ****             _thread::running->context.ra = (uint64)_thread::threadWrapper;
 236:src/riscv.cpp ****             contextSwitchThreadEnded(&_thread::running->context);
 237:src/riscv.cpp ****         }
 238:src/riscv.cpp ****         // thread kill
 239:src/riscv.cpp ****         else if (a[0] == 0x0000000000000029UL)
 240:src/riscv.cpp ****         {
 241:src/riscv.cpp ****             int threadId = (int)a[1];
 242:src/riscv.cpp **** 
 243:src/riscv.cpp ****             uint64 retVal = _thread::threadKill(threadId);
 244:src/riscv.cpp **** 
 245:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 246:src/riscv.cpp **** 
 247:src/riscv.cpp ****             // put the return value on the stack
 248:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 249:src/riscv.cpp ****         }
GAS LISTING /tmp/ccIQXOEV.s 			page 12


 250:src/riscv.cpp ****         ///////////////////////////////////////////////////////////////////////
 251:src/riscv.cpp ****         else
 252:src/riscv.cpp ****         {
 253:src/riscv.cpp **** 
 254:src/riscv.cpp ****         }
 255:src/riscv.cpp ****     }
 256:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 197              		.loc 1 256 10 is_stmt 1
 198              		.loc 1 256 21 is_stmt 0
 199 00a8 033704F8 		ld	a4,-128(s0)
 200              		.loc 1 256 10
 201 00ac 9307F0FF 		li	a5,-1
 202 00b0 9397F703 		slli	a5,a5,63
 203 00b4 93871700 		addi	a5,a5,1
 204 00b8 6306F734 		beq	a4,a5,.L29
 257:src/riscv.cpp ****     {
 258:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 259:src/riscv.cpp ****         /*
 260:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 261:src/riscv.cpp **** 
 262:src/riscv.cpp ****         _thread::running->timeSlice++;
 263:src/riscv.cpp ****         if (_thread::running->timeSlice >= DEFAULT_TIME_SLICE)
 264:src/riscv.cpp ****         {
 265:src/riscv.cpp ****             // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 266:src/riscv.cpp ****             // sepc = sepc + 4;
 267:src/riscv.cpp **** 
 268:src/riscv.cpp ****             _thread::running->timeSlice = 0;
 269:src/riscv.cpp ****             _thread::threadDispatch();
 270:src/riscv.cpp ****             w_sstatus(sstatus);
 271:src/riscv.cpp ****             w_sepc(sepc);
 272:src/riscv.cpp ****         }
 273:src/riscv.cpp ****         */
 274:src/riscv.cpp ****     }
 275:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 205              		.loc 1 275 10 is_stmt 1
 206              		.loc 1 275 21 is_stmt 0
 207 00bc 033704F8 		ld	a4,-128(s0)
 208              		.loc 1 275 10
 209 00c0 9307F0FF 		li	a5,-1
 210 00c4 9397F703 		slli	a5,a5,63
 211 00c8 93879700 		addi	a5,a5,9
 212 00cc 630CF734 		beq	a4,a5,.L30
 276:src/riscv.cpp ****     {
 277:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 278:src/riscv.cpp ****         // printString("Keyboard interrupt!\n");
 279:src/riscv.cpp ****         console_handler();
 280:src/riscv.cpp **** 
 281:src/riscv.cpp ****     }
 282:src/riscv.cpp ****     else
 283:src/riscv.cpp ****     {
 284:src/riscv.cpp ****         // unexpected trap cause
 285:src/riscv.cpp ****         printString("\nUnexpected trap cause!\n");
 213              		.loc 1 285 9 is_stmt 1
 214              		.loc 1 285 20 is_stmt 0
 215 00d0 17050000 		lla	a0,.LC0
 215      13050500 
 216 00d8 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccIQXOEV.s 			page 13


 216      E7800000 
 217              	.LVL0:
 286:src/riscv.cpp ****         printString("Scause: ");
 218              		.loc 1 286 9 is_stmt 1
 219              		.loc 1 286 20 is_stmt 0
 220 00e0 17050000 		lla	a0,.LC1
 220      13050500 
 221 00e8 97000000 		call	_Z11printStringPKc@plt
 221      E7800000 
 222              	.LVL1:
 287:src/riscv.cpp ****         printInt(scause);
 223              		.loc 1 287 9 is_stmt 1
 224              		.loc 1 287 17 is_stmt 0
 225 00f0 033504F8 		ld	a0,-128(s0)
 226 00f4 13060000 		li	a2,0
 227 00f8 9305A000 		li	a1,10
 228 00fc 1B050500 		sext.w	a0,a0
 229 0100 97000000 		call	_Z8printIntiii@plt
 229      E7800000 
 230              	.LVL2:
 288:src/riscv.cpp ****         printString("\n");
 231              		.loc 1 288 9 is_stmt 1
 232              		.loc 1 288 20 is_stmt 0
 233 0108 17050000 		lla	a0,.LC2
 233      13050500 
 234 0110 97000000 		call	_Z11printStringPKc@plt
 234      E7800000 
 235              	.LVL3:
 289:src/riscv.cpp ****         printString("sepc = ");
 236              		.loc 1 289 9 is_stmt 1
 237              		.loc 1 289 20 is_stmt 0
 238 0118 17050000 		lla	a0,.LC3
 238      13050500 
 239 0120 97000000 		call	_Z11printStringPKc@plt
 239      E7800000 
 240              	.LVL4:
 290:src/riscv.cpp ****         printInt(sepc);
 241              		.loc 1 290 9 is_stmt 1
 242              		.loc 1 290 17 is_stmt 0
 243 0128 033584F9 		ld	a0,-104(s0)
 244 012c 13060000 		li	a2,0
 245 0130 9305A000 		li	a1,10
 246 0134 1B050500 		sext.w	a0,a0
 247 0138 97000000 		call	_Z8printIntiii@plt
 247      E7800000 
 248              	.LVL5:
 249              	.L26:
 291:src/riscv.cpp ****         while(1);
 250              		.loc 1 291 9 is_stmt 1 discriminator 2
 251              		.loc 1 291 9 discriminator 2
 252 0140 6F000000 		j	.L26
 253              	.L4:
 254              	.LBB65:
  40:src/riscv.cpp ****         w_sepc(sepc);
 255              		.loc 1 40 9
  40:src/riscv.cpp ****         w_sepc(sepc);
 256              		.loc 1 40 16 is_stmt 0
GAS LISTING /tmp/ccIQXOEV.s 			page 14


 257 0144 833784F9 		ld	a5,-104(s0)
  40:src/riscv.cpp ****         w_sepc(sepc);
 258              		.loc 1 40 21
 259 0148 93874700 		addi	a5,a5,4
  40:src/riscv.cpp ****         w_sepc(sepc);
 260              		.loc 1 40 14
 261 014c 233CF4F8 		sd	a5,-104(s0)
  41:src/riscv.cpp **** 
 262              		.loc 1 41 9 is_stmt 1
  41:src/riscv.cpp **** 
 263              		.loc 1 41 15 is_stmt 0
 264 0150 833784F9 		ld	a5,-104(s0)
 265              	.LVL6:
 266              	.LBB66:
 267              	.LBB67:
 107:src/../h/riscv.hpp **** }
 268              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 269              		.loc 2 107 65 is_stmt 0
 270              	#APP
 271              	# 107 "src/../h/riscv.hpp" 1
 272              		csrw sepc, a5
 273              	# 0 "" 2
 274              	.LVL7:
 275              	#NO_APP
 276              	.LBE67:
 277              	.LBE66:
  44:src/riscv.cpp ****         {
 278              		.loc 1 44 9 is_stmt 1
 279              	.LBB68:
  44:src/riscv.cpp ****         {
 280              		.loc 1 44 16 is_stmt 0
 281 0158 833704FA 		ld	a5,-96(s0)
  44:src/riscv.cpp ****         {
 282              		.loc 1 44 9
 283 015c 13071000 		li	a4,1
 284 0160 6380E70A 		beq	a5,a4,.L31
 285              	.LBE68:
 286              	.LBE65:
 287              	.LBE64:
  59:src/riscv.cpp ****         {
 288              		.loc 1 59 14 is_stmt 1
 289              	.LBB281:
 290              	.LBB263:
 291              	.LBB247:
 292              	.LBB69:
 293 0164 13072000 		li	a4,2
 294 0168 638EE70A 		beq	a5,a4,.L32
 295              	.LBE69:
 296              	.LBE247:
 297              	.LBE263:
 298              	.LBE281:
  73:src/riscv.cpp ****         {
 299              		.loc 1 73 14
 300              	.LBB282:
 301              	.LBB264:
 302              	.LBB248:
GAS LISTING /tmp/ccIQXOEV.s 			page 15


 303              	.LBB230:
 304              	.LBB70:
 305 016c 13071001 		li	a4,17
 306 0170 6388E70C 		beq	a5,a4,.L33
 307              	.LBE70:
 308              	.LBE230:
 309              	.LBE248:
 310              	.LBE264:
 311              	.LBE282:
  88:src/riscv.cpp ****         {
 312              		.loc 1 88 14
 313              	.LBB283:
 314              	.LBB265:
 315              	.LBB249:
 316              	.LBB231:
 317              	.LBB214:
 318              	.LBB71:
 319 0174 13072001 		li	a4,18
 320 0178 6388E70E 		beq	a5,a4,.L34
 321              	.LBE71:
 322              	.LBE214:
 323              	.LBE231:
 324              	.LBE249:
 325              	.LBE265:
 326              	.LBE283:
 101:src/riscv.cpp ****         {
 327              		.loc 1 101 14
 328              	.LBB284:
 329              	.LBB266:
 330              	.LBB250:
 331              	.LBB232:
 332              	.LBB215:
 333              	.LBB199:
 334              	.LBB72:
 335 017c 13073001 		li	a4,19
 336 0180 6386E710 		beq	a5,a4,.L35
 337              	.LBE72:
 338              	.LBE199:
 339              	.LBE215:
 340              	.LBE232:
 341              	.LBE250:
 342              	.LBE266:
 343              	.LBE284:
 118:src/riscv.cpp ****         {
 344              		.loc 1 118 14
 345              	.LBB285:
 346              	.LBB267:
 347              	.LBB251:
 348              	.LBB233:
 349              	.LBB216:
 350              	.LBB200:
 351              	.LBB185:
 352              	.LBB73:
 353 0184 13074001 		li	a4,20
 354 0188 6388E712 		beq	a5,a4,.L36
 355              	.LBE73:
 356              	.LBE185:
GAS LISTING /tmp/ccIQXOEV.s 			page 16


 357              	.LBE200:
 358              	.LBE216:
 359              	.LBE233:
 360              	.LBE251:
 361              	.LBE267:
 362              	.LBE285:
 129:src/riscv.cpp ****         {
 363              		.loc 1 129 14
 364              	.LBB286:
 365              	.LBB268:
 366              	.LBB252:
 367              	.LBB234:
 368              	.LBB217:
 369              	.LBB201:
 370              	.LBB186:
 371              	.LBB169:
 372              	.LBB74:
 373 018c 13071002 		li	a4,33
 374 0190 638CE714 		beq	a5,a4,.L37
 375              	.LBE74:
 376              	.LBE169:
 377              	.LBE186:
 378              	.LBE201:
 379              	.LBE217:
 380              	.LBE234:
 381              	.LBE252:
 382              	.LBE268:
 383              	.LBE286:
 142:src/riscv.cpp ****         {
 384              		.loc 1 142 14
 385              	.LBB287:
 386              	.LBB269:
 387              	.LBB253:
 388              	.LBB235:
 389              	.LBB218:
 390              	.LBB202:
 391              	.LBB187:
 392              	.LBB170:
 393              	.LBB153:
 394              	.LBB75:
 395 0194 13072002 		li	a4,34
 396 0198 6388E716 		beq	a5,a4,.L38
 397              	.LBE75:
 398              	.LBE153:
 399              	.LBE170:
 400              	.LBE187:
 401              	.LBE202:
 402              	.LBE218:
 403              	.LBE235:
 404              	.LBE253:
 405              	.LBE269:
 406              	.LBE287:
 155:src/riscv.cpp ****         {
 407              		.loc 1 155 14
 408              	.LBB288:
 409              	.LBB270:
 410              	.LBB254:
GAS LISTING /tmp/ccIQXOEV.s 			page 17


 411              	.LBB236:
 412              	.LBB219:
 413              	.LBB203:
 414              	.LBB188:
 415              	.LBB171:
 416              	.LBB154:
 417              	.LBB142:
 418              	.LBB76:
 419 019c 13073002 		li	a4,35
 420 01a0 6382E718 		beq	a5,a4,.L39
 421              	.LBE76:
 422              	.LBE142:
 423              	.LBE154:
 424              	.LBE171:
 425              	.LBE188:
 426              	.LBE203:
 427              	.LBE219:
 428              	.LBE236:
 429              	.LBE254:
 430              	.LBE270:
 431              	.LBE288:
 171:src/riscv.cpp ****         {
 432              		.loc 1 171 14
 433              	.LBB289:
 434              	.LBB271:
 435              	.LBB255:
 436              	.LBB237:
 437              	.LBB220:
 438              	.LBB204:
 439              	.LBB189:
 440              	.LBB172:
 441              	.LBB155:
 442              	.LBB143:
 443              	.LBB132:
 444              	.LBB77:
 445 01a4 13074002 		li	a4,36
 446 01a8 6384E71A 		beq	a5,a4,.L40
 447              	.LBE77:
 448              	.LBE132:
 449              	.LBE143:
 450              	.LBE155:
 451              	.LBE172:
 452              	.LBE189:
 453              	.LBE204:
 454              	.LBE220:
 455              	.LBE237:
 456              	.LBE255:
 457              	.LBE271:
 458              	.LBE289:
 183:src/riscv.cpp ****         {
 459              		.loc 1 183 14
 460              	.LBB290:
 461              	.LBB272:
 462              	.LBB256:
 463              	.LBB238:
 464              	.LBB221:
 465              	.LBB205:
GAS LISTING /tmp/ccIQXOEV.s 			page 18


 466              	.LBB190:
 467              	.LBB173:
 468              	.LBB156:
 469              	.LBB144:
 470              	.LBB133:
 471              	.LBB119:
 472              	.LBB78:
 473 01ac 13075002 		li	a4,37
 474 01b0 638EE71A 		beq	a5,a4,.L41
 475              	.LBE78:
 476              	.LBE119:
 477              	.LBE133:
 478              	.LBE144:
 479              	.LBE156:
 480              	.LBE173:
 481              	.LBE190:
 482              	.LBE205:
 483              	.LBE221:
 484              	.LBE238:
 485              	.LBE256:
 486              	.LBE272:
 487              	.LBE290:
 191:src/riscv.cpp ****         {
 488              		.loc 1 191 14
 489              	.LBB291:
 490              	.LBB273:
 491              	.LBB257:
 492              	.LBB239:
 493              	.LBB222:
 494              	.LBB206:
 495              	.LBB191:
 496              	.LBB174:
 497              	.LBB157:
 498              	.LBB145:
 499              	.LBB134:
 500              	.LBB120:
 501              	.LBB111:
 502              	.LBB79:
 503 01b4 13076002 		li	a4,38
 504 01b8 6382E71C 		beq	a5,a4,.L42
 505              	.LBE79:
 506              	.LBE111:
 507              	.LBE120:
 508              	.LBE134:
 509              	.LBE145:
 510              	.LBE157:
 511              	.LBE174:
 512              	.LBE191:
 513              	.LBE206:
 514              	.LBE222:
 515              	.LBE239:
 516              	.LBE257:
 517              	.LBE273:
 518              	.LBE291:
 199:src/riscv.cpp ****         {
 519              		.loc 1 199 14
 520              	.LBB292:
GAS LISTING /tmp/ccIQXOEV.s 			page 19


 521              	.LBB274:
 522              	.LBB258:
 523              	.LBB240:
 524              	.LBB223:
 525              	.LBB207:
 526              	.LBB192:
 527              	.LBB175:
 528              	.LBB158:
 529              	.LBB146:
 530              	.LBB135:
 531              	.LBB121:
 532              	.LBB112:
 533              	.LBB104:
 534              	.LBB80:
 535 01bc 13071004 		li	a4,65
 536 01c0 6386E71C 		beq	a5,a4,.L43
 537              	.LBE80:
 538              	.LBE104:
 539              	.LBE112:
 540              	.LBE121:
 541              	.LBE135:
 542              	.LBE146:
 543              	.LBE158:
 544              	.LBE175:
 545              	.LBE192:
 546              	.LBE207:
 547              	.LBE223:
 548              	.LBE240:
 549              	.LBE258:
 550              	.LBE274:
 551              	.LBE292:
 209:src/riscv.cpp ****         {
 552              		.loc 1 209 14
 553              	.LBB293:
 554              	.LBB275:
 555              	.LBB259:
 556              	.LBB241:
 557              	.LBB224:
 558              	.LBB208:
 559              	.LBB193:
 560              	.LBB176:
 561              	.LBB159:
 562              	.LBB147:
 563              	.LBB136:
 564              	.LBB122:
 565              	.LBB113:
 566              	.LBB105:
 567              	.LBB98:
 568              	.LBB81:
 569 01c4 13072004 		li	a4,66
 570 01c8 638EE71C 		beq	a5,a4,.L44
 571              	.LBE81:
 572              	.LBE98:
 573              	.LBE105:
 574              	.LBE113:
 575              	.LBE122:
 576              	.LBE136:
GAS LISTING /tmp/ccIQXOEV.s 			page 20


 577              	.LBE147:
 578              	.LBE159:
 579              	.LBE176:
 580              	.LBE193:
 581              	.LBE208:
 582              	.LBE224:
 583              	.LBE241:
 584              	.LBE259:
 585              	.LBE275:
 586              	.LBE293:
 217:src/riscv.cpp ****         {
 587              		.loc 1 217 14
 588              	.LBB294:
 589              	.LBB276:
 590              	.LBB260:
 591              	.LBB242:
 592              	.LBB225:
 593              	.LBB209:
 594              	.LBB194:
 595              	.LBB177:
 596              	.LBB160:
 597              	.LBB148:
 598              	.LBB137:
 599              	.LBB123:
 600              	.LBB114:
 601              	.LBB106:
 602              	.LBB99:
 603              	.LBB93:
 604              	.LBB82:
 605 01cc 13077002 		li	a4,39
 606 01d0 6382E71E 		beq	a5,a4,.L45
 607              	.LBE82:
 608              	.LBE93:
 609              	.LBE99:
 610              	.LBE106:
 611              	.LBE114:
 612              	.LBE123:
 613              	.LBE137:
 614              	.LBE148:
 615              	.LBE160:
 616              	.LBE177:
 617              	.LBE194:
 618              	.LBE209:
 619              	.LBE225:
 620              	.LBE242:
 621              	.LBE260:
 622              	.LBE276:
 623              	.LBE294:
 224:src/riscv.cpp ****         {
 624              		.loc 1 224 14
 625              	.LBB295:
 626              	.LBB277:
 627              	.LBB261:
 628              	.LBB243:
 629              	.LBB226:
 630              	.LBB210:
 631              	.LBB195:
GAS LISTING /tmp/ccIQXOEV.s 			page 21


 632              	.LBB178:
 633              	.LBB161:
 634              	.LBB149:
 635              	.LBB138:
 636              	.LBB124:
 637              	.LBB115:
 638              	.LBB107:
 639              	.LBB100:
 640              	.LBB94:
 641              	.LBB89:
 642              	.LBB83:
 643 01d4 13078002 		li	a4,40
 644 01d8 6384E71E 		beq	a5,a4,.L46
 645              	.LBE83:
 646              	.LBE89:
 647              	.LBE94:
 648              	.LBE100:
 649              	.LBE107:
 650              	.LBE115:
 651              	.LBE124:
 652              	.LBE138:
 653              	.LBE149:
 654              	.LBE161:
 655              	.LBE178:
 656              	.LBE195:
 657              	.LBE210:
 658              	.LBE226:
 659              	.LBE243:
 660              	.LBE261:
 661              	.LBE277:
 662              	.LBE295:
 239:src/riscv.cpp ****         {
 663              		.loc 1 239 14
 664              	.LBB296:
 665              	.LBB278:
 666              	.LBB262:
 667              	.LBB244:
 668              	.LBB227:
 669              	.LBB211:
 670              	.LBB196:
 671              	.LBB179:
 672              	.LBB162:
 673              	.LBB150:
 674              	.LBB139:
 675              	.LBB125:
 676              	.LBB116:
 677              	.LBB108:
 678              	.LBB101:
 679              	.LBB95:
 680              	.LBB90:
 681              	.LBB87:
 682              	.LBB84:
 683 01dc 13079002 		li	a4,41
 684 01e0 6396E722 		bne	a5,a4,.L3
 685              	.LBB85:
 241:src/riscv.cpp **** 
 686              		.loc 1 241 13
GAS LISTING /tmp/ccIQXOEV.s 			page 22


 687              	.LVL8:
 243:src/riscv.cpp **** 
 688              		.loc 1 243 13
 243:src/riscv.cpp **** 
 689              		.loc 1 243 48 is_stmt 0
 690 01e4 032584FA 		lw	a0,-88(s0)
 691 01e8 97000000 		call	_ZN7_thread10threadKillEi@plt
 691      E7800000 
 692              	.LVL9:
 245:src/riscv.cpp **** 
 693              		.loc 1 245 13 is_stmt 1
 245:src/riscv.cpp **** 
 694              		.loc 1 245 54 is_stmt 0
 695              	#APP
 696              	# 245 "src/riscv.cpp" 1
 697              		mv a5, a0
 698              	# 0 "" 2
 699              	.LVL10:
 248:src/riscv.cpp ****         }
 700              		.loc 1 248 13 is_stmt 1
 248:src/riscv.cpp ****         }
 701              		.loc 1 248 55 is_stmt 0
 702              	#NO_APP
 703 01f4 833784F8 		ld	a5,-120(s0)
 248:src/riscv.cpp ****         }
 704              		.loc 1 248 59
 705              	#APP
 706              	# 248 "src/riscv.cpp" 1
 707              		sd a0, 10 * 8(a5)
 708              	# 0 "" 2
 709              	#NO_APP
 710              	.LBE85:
 711 01fc 6F000021 		j	.L3
 712              	.L31:
 713              	.LBE84:
 714              	.LBE87:
 715              	.LBE90:
 716              	.LBE95:
 717              	.LBE101:
 718              	.LBE108:
 719              	.LBE116:
 720              	.LBE125:
 721              	.LBE139:
 722              	.LBE150:
 723              	.LBE162:
 724              	.LBE179:
 725              	.LBE196:
 726              	.LBE211:
 727              	.LBE227:
 728              	.LBE244:
 729              	.LBB245:
  47:src/riscv.cpp **** 
 730              		.loc 1 47 13 is_stmt 1
 731              	.LVL11:
  49:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
 732              		.loc 1 49 13
  49:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
GAS LISTING /tmp/ccIQXOEV.s 			page 23


 733              		.loc 1 49 62 is_stmt 0
 734 0200 033584FA 		ld	a0,-88(s0)
 735 0204 97000000 		call	_ZN15MemoryAllocator14convert2BlocksEm@plt
 735      E7800000 
 736              	.LVL12:
  50:src/riscv.cpp **** 
 737              		.loc 1 50 13 is_stmt 1
  50:src/riscv.cpp **** 
 738              		.loc 1 50 54 is_stmt 0
 739 020c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 739      E7800000 
 740              	.LVL13:
  52:src/riscv.cpp **** 
 741              		.loc 1 52 13 is_stmt 1
  52:src/riscv.cpp **** 
 742              		.loc 1 52 54 is_stmt 0
 743              	#APP
 744              	# 52 "src/riscv.cpp" 1
 745              		mv a5, a0
 746              	# 0 "" 2
 747              	.LVL14:
  55:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 748              		.loc 1 55 13 is_stmt 1
  55:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 749              		.loc 1 55 55 is_stmt 0
 750              	#NO_APP
 751 0218 833784F8 		ld	a5,-120(s0)
  55:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 752              		.loc 1 55 59
 753              	#APP
 754              	# 55 "src/riscv.cpp" 1
 755              		sd a0, 10 * 8(a5)
 756              	# 0 "" 2
 757              	#NO_APP
 758              	.LBE245:
 759 0220 6F00C01E 		j	.L3
 760              	.L32:
 761              	.LBB246:
 762              	.LBB228:
  62:src/riscv.cpp **** 
 763              		.loc 1 62 13 is_stmt 1
 764              	.LVL15:
  64:src/riscv.cpp **** 
 765              		.loc 1 64 13
  64:src/riscv.cpp **** 
 766              		.loc 1 64 51 is_stmt 0
 767 0224 033584FA 		ld	a0,-88(s0)
 768 0228 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 768      E7800000 
 769              	.LVL16:
  66:src/riscv.cpp **** 
 770              		.loc 1 66 13 is_stmt 1
  66:src/riscv.cpp **** 
 771              		.loc 1 66 54 is_stmt 0
 772              	#APP
 773              	# 66 "src/riscv.cpp" 1
 774              		mv a5, a0
GAS LISTING /tmp/ccIQXOEV.s 			page 24


 775              	# 0 "" 2
 776              	.LVL17:
  69:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 777              		.loc 1 69 13 is_stmt 1
  69:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 778              		.loc 1 69 55 is_stmt 0
 779              	#NO_APP
 780 0234 833784F8 		ld	a5,-120(s0)
  69:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 781              		.loc 1 69 59
 782              	#APP
 783              	# 69 "src/riscv.cpp" 1
 784              		sd a0, 10 * 8(a5)
 785              	# 0 "" 2
 786              	#NO_APP
 787              	.LBE228:
 788 023c 6F00001D 		j	.L3
 789              	.L33:
 790              	.LBB229:
 791              	.LBB212:
  75:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[2]);
 792              		.loc 1 75 13 is_stmt 1
 793              	.LVL18:
  76:src/riscv.cpp ****             void* arg = reinterpret_cast<void *>(a[3]);
 794              		.loc 1 76 13
  77:src/riscv.cpp ****             void* stack_space = reinterpret_cast<void *>(a[4]);
 795              		.loc 1 77 13
  78:src/riscv.cpp **** 
 796              		.loc 1 78 13
  80:src/riscv.cpp **** 
 797              		.loc 1 80 13
  80:src/riscv.cpp **** 
 798              		.loc 1 80 47 is_stmt 0
 799 0240 833604FC 		ld	a3,-64(s0)
 800 0244 033684FB 		ld	a2,-72(s0)
 801 0248 833504FB 		ld	a1,-80(s0)
 802 024c 033584FA 		ld	a0,-88(s0)
 803 0250 97000000 		call	_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_@plt
 803      E7800000 
 804              	.LVL19:
  82:src/riscv.cpp **** 
 805              		.loc 1 82 13 is_stmt 1
  82:src/riscv.cpp **** 
 806              		.loc 1 82 54 is_stmt 0
 807              	#APP
 808              	# 82 "src/riscv.cpp" 1
 809              		mv a5, a0
 810              	# 0 "" 2
 811              	.LVL20:
  85:src/riscv.cpp ****         }
 812              		.loc 1 85 13 is_stmt 1
  85:src/riscv.cpp ****         }
 813              		.loc 1 85 55 is_stmt 0
 814              	#NO_APP
 815 025c 833784F8 		ld	a5,-120(s0)
  85:src/riscv.cpp ****         }
 816              		.loc 1 85 59
GAS LISTING /tmp/ccIQXOEV.s 			page 25


 817              	#APP
 818              	# 85 "src/riscv.cpp" 1
 819              		sd a0, 10 * 8(a5)
 820              	# 0 "" 2
 821              	#NO_APP
 822              	.LBE212:
 823 0264 6F00801A 		j	.L3
 824              	.L34:
 825              	.LBB213:
 826              	.LBB197:
  90:src/riscv.cpp **** 
 827              		.loc 1 90 13 is_stmt 1
  90:src/riscv.cpp **** 
 828              		.loc 1 90 31 is_stmt 0
 829 0268 97070000 		la	a5,_ZN7_thread7runningE
 829      83B70700 
 830 0270 83B70700 		ld	a5,0(a5)
  90:src/riscv.cpp **** 
 831              		.loc 1 90 40
 832 0274 13071000 		li	a4,1
 833 0278 A384E700 		sb	a4,9(a5)
  92:src/riscv.cpp **** 
 834              		.loc 1 92 13 is_stmt 1
  92:src/riscv.cpp **** 
 835              		.loc 1 92 36 is_stmt 0
 836 027c 97000000 		call	_ZN7_thread14threadDispatchEv@plt
 836      E7800000 
 837              	.LVL21:
  95:src/riscv.cpp **** 
 838              		.loc 1 95 13 is_stmt 1
  98:src/riscv.cpp ****         }
 839              		.loc 1 98 13
  98:src/riscv.cpp ****         }
 840              		.loc 1 98 54 is_stmt 0
 841              	#APP
 842              	# 98 "src/riscv.cpp" 1
 843              		mv a5, a0
 844              	# 0 "" 2
 845              	.LVL22:
 846              	#NO_APP
 847              	.LBE197:
 848 0288 6F004018 		j	.L3
 849              	.L35:
 850              	.LBB198:
 106:src/riscv.cpp **** 
 851              		.loc 1 106 13 is_stmt 1
 106:src/riscv.cpp **** 
 852              		.loc 1 106 31 is_stmt 0
 853 028c 97070000 		la	a5,_ZN7_thread7runningE
 853      83B70700 
 854 0294 83B70700 		ld	a5,0(a5)
 106:src/riscv.cpp **** 
 855              		.loc 1 106 41
 856 0298 23B80702 		sd	zero,48(a5)
 108:src/riscv.cpp **** 
 857              		.loc 1 108 13 is_stmt 1
 108:src/riscv.cpp **** 
GAS LISTING /tmp/ccIQXOEV.s 			page 26


 858              		.loc 1 108 36 is_stmt 0
 859 029c 97000000 		call	_ZN7_thread14threadDispatchEv@plt
 859      E7800000 
 860              	.LVL23:
 112:src/riscv.cpp ****             w_sepc(sepc);
 861              		.loc 1 112 13 is_stmt 1
 112:src/riscv.cpp ****             w_sepc(sepc);
 862              		.loc 1 112 22 is_stmt 0
 863 02a4 833704F9 		ld	a5,-112(s0)
 864              	.LVL24:
 865              	.LBB180:
 866              	.LBB181:
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 867              		.loc 2 175 5 is_stmt 1
 868              		.loc 2 175 77 is_stmt 0
 869              	#APP
 870              	# 175 "src/../h/riscv.hpp" 1
 176              	}
 871              		csrw sstatus, a5
 872              	# 0 "" 2
 873              	.LVL25:
 874              	#NO_APP
 875              	.LBE181:
 876              	.LBE180:
 113:src/riscv.cpp **** 
 877              		.loc 1 113 13 is_stmt 1
 113:src/riscv.cpp **** 
 878              		.loc 1 113 19 is_stmt 0
 879 02ac 833784F9 		ld	a5,-104(s0)
 880              	.LVL26:
 881              	.LBB182:
 882              	.LBB183:
 107:src/../h/riscv.hpp **** }
 883              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 884              		.loc 2 107 65 is_stmt 0
 885              	#APP
 886              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 887              		csrw sepc, a5
 888              	# 0 "" 2
 889              		.loc 2 108 1
 890              	#NO_APP
 891 02b4 6F008015 		j	.L3
 892              	.LVL27:
 893              	.L36:
 894              	.LBE183:
 895              	.LBE182:
 896              	.LBB184:
 897              	.LBB163:
 120:src/riscv.cpp **** 
 898              		.loc 1 120 13 is_stmt 1
 120:src/riscv.cpp **** 
GAS LISTING /tmp/ccIQXOEV.s 			page 27


 899              		.loc 1 120 61 is_stmt 0
 900 02b8 833784FA 		ld	a5,-88(s0)
 901              	.LVL28:
 122:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 902              		.loc 1 122 13 is_stmt 1
 122:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 903              		.loc 1 122 26 is_stmt 0
 904 02bc 03C79700 		lbu	a4,9(a5)
 122:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 905              		.loc 1 122 13
 906 02c0 630C0700 		beqz	a4,.L47
 907              	.LVL29:
 908              	.L14:
 125:src/riscv.cpp ****             w_sepc(sepc);
 909              		.loc 1 125 13 is_stmt 1
 125:src/riscv.cpp ****             w_sepc(sepc);
 910              		.loc 1 125 22 is_stmt 0
 911 02c4 833704F9 		ld	a5,-112(s0)
 912              	.LVL30:
 913              	.LBB164:
 914              	.LBB165:
 175:src/../h/riscv.hpp **** }
 915              		.loc 2 175 5 is_stmt 1
 175:src/../h/riscv.hpp **** }
 916              		.loc 2 175 77 is_stmt 0
 917              	#APP
 918              	# 175 "src/../h/riscv.hpp" 1
 919              		csrw sstatus, a5
 920              	# 0 "" 2
 921              	.LVL31:
 922              	#NO_APP
 923              	.LBE165:
 924              	.LBE164:
 126:src/riscv.cpp ****         }
 925              		.loc 1 126 13 is_stmt 1
 126:src/riscv.cpp ****         }
 926              		.loc 1 126 19 is_stmt 0
 927 02cc 833784F9 		ld	a5,-104(s0)
 928              	.LVL32:
 929              	.LBB166:
 930              	.LBB167:
 107:src/../h/riscv.hpp **** }
 931              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 932              		.loc 2 107 65 is_stmt 0
 933              	#APP
 934              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 935              		csrw sepc, a5
 936              	# 0 "" 2
 937              		.loc 2 108 1
 938              	#NO_APP
 939 02d4 6F008013 		j	.L3
 940              	.LVL33:
 941              	.L47:
 942              	.LBE167:
 943              	.LBE166:
GAS LISTING /tmp/ccIQXOEV.s 			page 28


 123:src/riscv.cpp **** 
 944              		.loc 1 123 17 is_stmt 1
 123:src/riscv.cpp **** 
 945              		.loc 1 123 30 is_stmt 0
 946 02d8 03B50704 		ld	a0,64(a5)
 947 02dc 97000000 		call	_ZN4_sem7semWaitEPS_@plt
 947      E7800000 
 948              	.LVL34:
 949 02e4 6FF01FFE 		j	.L14
 950              	.L37:
 951              	.LBE163:
 952              	.LBB168:
 953              	.LBB151:
 131:src/riscv.cpp ****             unsigned init = (unsigned)a[2];
 954              		.loc 1 131 13 is_stmt 1
 955              	.LVL35:
 132:src/riscv.cpp **** 
 956              		.loc 1 132 13
 134:src/riscv.cpp **** 
 957              		.loc 1 134 13
 134:src/riscv.cpp **** 
 958              		.loc 1 134 39 is_stmt 0
 959 02e8 832504FB 		lw	a1,-80(s0)
 960 02ec 033584FA 		ld	a0,-88(s0)
 961 02f0 97000000 		call	_ZN4_sem7semOpenEPPS_j@plt
 961      E7800000 
 962              	.LVL36:
 136:src/riscv.cpp **** 
 963              		.loc 1 136 13 is_stmt 1
 136:src/riscv.cpp **** 
 964              		.loc 1 136 54 is_stmt 0
 965              	#APP
 966              	# 136 "src/riscv.cpp" 1
 967              		mv a5, a0
 968              	# 0 "" 2
 969              	.LVL37:
 139:src/riscv.cpp ****         }
 970              		.loc 1 139 13 is_stmt 1
 139:src/riscv.cpp ****         }
 971              		.loc 1 139 55 is_stmt 0
 972              	#NO_APP
 973 02fc 833784F8 		ld	a5,-120(s0)
 139:src/riscv.cpp ****         }
 974              		.loc 1 139 59
 975              	#APP
 976              	# 139 "src/riscv.cpp" 1
 977              		sd a0, 10 * 8(a5)
 978              	# 0 "" 2
 979              	#NO_APP
 980              	.LBE151:
 981 0304 6F008010 		j	.L3
 982              	.L38:
 983              	.LBB152:
 984              	.LBB140:
 144:src/riscv.cpp **** 
 985              		.loc 1 144 13 is_stmt 1
 986              	.LVL38:
GAS LISTING /tmp/ccIQXOEV.s 			page 29


 147:src/riscv.cpp **** 
 987              		.loc 1 147 13
 147:src/riscv.cpp **** 
 988              		.loc 1 147 40 is_stmt 0
 989 0308 033584FA 		ld	a0,-88(s0)
 990 030c 97000000 		call	_ZN4_sem8semCloseEPS_@plt
 990      E7800000 
 991              	.LVL39:
 149:src/riscv.cpp **** 
 992              		.loc 1 149 13 is_stmt 1
 149:src/riscv.cpp **** 
 993              		.loc 1 149 54 is_stmt 0
 994              	#APP
 995              	# 149 "src/riscv.cpp" 1
 996              		mv a5, a0
 997              	# 0 "" 2
 998              	.LVL40:
 152:src/riscv.cpp ****         }
 999              		.loc 1 152 13 is_stmt 1
 152:src/riscv.cpp ****         }
 1000              		.loc 1 152 55 is_stmt 0
 1001              	#NO_APP
 1002 0318 833784F8 		ld	a5,-120(s0)
 152:src/riscv.cpp ****         }
 1003              		.loc 1 152 59
 1004              	#APP
 1005              	# 152 "src/riscv.cpp" 1
 1006              		sd a0, 10 * 8(a5)
 1007              	# 0 "" 2
 1008              	#NO_APP
 1009              	.LBE140:
 1010 0320 6F00C00E 		j	.L3
 1011              	.L39:
 1012              	.LBB141:
 1013              	.LBB126:
 157:src/riscv.cpp **** 
 1014              		.loc 1 157 13 is_stmt 1
 1015              	.LVL41:
 159:src/riscv.cpp **** 
 1016              		.loc 1 159 13
 159:src/riscv.cpp **** 
 1017              		.loc 1 159 39 is_stmt 0
 1018 0324 033584FA 		ld	a0,-88(s0)
 1019 0328 97000000 		call	_ZN4_sem7semWaitEPS_@plt
 1019      E7800000 
 1020              	.LVL42:
 161:src/riscv.cpp **** 
 1021              		.loc 1 161 13 is_stmt 1
 161:src/riscv.cpp **** 
 1022              		.loc 1 161 54 is_stmt 0
 1023              	#APP
 1024              	# 161 "src/riscv.cpp" 1
 1025              		mv a5, a0
 1026              	# 0 "" 2
 1027              	.LVL43:
 164:src/riscv.cpp **** 
 1028              		.loc 1 164 13 is_stmt 1
GAS LISTING /tmp/ccIQXOEV.s 			page 30


 164:src/riscv.cpp **** 
 1029              		.loc 1 164 55 is_stmt 0
 1030              	#NO_APP
 1031 0334 833784F8 		ld	a5,-120(s0)
 164:src/riscv.cpp **** 
 1032              		.loc 1 164 59
 1033              	#APP
 1034              	# 164 "src/riscv.cpp" 1
 167:src/riscv.cpp ****             w_sepc(sepc);
 1035              		sd a0, 10 * 8(a5)
 1036              	# 0 "" 2
 1037              		.loc 1 167 13 is_stmt 1
 167:src/riscv.cpp ****             w_sepc(sepc);
 1038              		.loc 1 167 22 is_stmt 0
 1039              	#NO_APP
 1040 033c 833704F9 		ld	a5,-112(s0)
 1041              	.LVL44:
 1042              	.LBB127:
 1043              	.LBB128:
 175:src/../h/riscv.hpp **** }
 1044              		.loc 2 175 5 is_stmt 1
 175:src/../h/riscv.hpp **** }
 1045              		.loc 2 175 77 is_stmt 0
 1046              	#APP
 1047              	# 175 "src/../h/riscv.hpp" 1
 1048              		csrw sstatus, a5
 1049              	# 0 "" 2
 1050              	.LVL45:
 1051              	#NO_APP
 1052              	.LBE128:
 1053              	.LBE127:
 168:src/riscv.cpp ****         }
 1054              		.loc 1 168 13 is_stmt 1
 168:src/riscv.cpp ****         }
 1055              		.loc 1 168 19 is_stmt 0
 1056 0344 833784F9 		ld	a5,-104(s0)
 1057              	.LVL46:
 1058              	.LBB129:
 1059              	.LBB130:
 107:src/../h/riscv.hpp **** }
 1060              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 1061              		.loc 2 107 65 is_stmt 0
 1062              	#APP
 1063              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 1064              		csrw sepc, a5
 1065              	# 0 "" 2
 1066              		.loc 2 108 1
 1067              	#NO_APP
 1068 034c 6F00000C 		j	.L3
 1069              	.LVL47:
 1070              	.L40:
 1071              	.LBE130:
 1072              	.LBE129:
 1073              	.LBE126:
 1074              	.LBB131:
GAS LISTING /tmp/ccIQXOEV.s 			page 31


 1075              	.LBB117:
 173:src/riscv.cpp **** 
 1076              		.loc 1 173 13 is_stmt 1
 175:src/riscv.cpp **** 
 1077              		.loc 1 175 13
 175:src/riscv.cpp **** 
 1078              		.loc 1 175 41 is_stmt 0
 1079 0350 033584FA 		ld	a0,-88(s0)
 1080 0354 97000000 		call	_ZN4_sem9semSignalEPS_@plt
 1080      E7800000 
 1081              	.LVL48:
 177:src/riscv.cpp **** 
 1082              		.loc 1 177 13 is_stmt 1
 177:src/riscv.cpp **** 
 1083              		.loc 1 177 54 is_stmt 0
 1084              	#APP
 1085              	# 177 "src/riscv.cpp" 1
 1086              		mv a5, a0
 1087              	# 0 "" 2
 1088              	.LVL49:
 180:src/riscv.cpp ****         }
 1089              		.loc 1 180 13 is_stmt 1
 180:src/riscv.cpp ****         }
 1090              		.loc 1 180 55 is_stmt 0
 1091              	#NO_APP
 1092 0360 833784F8 		ld	a5,-120(s0)
 180:src/riscv.cpp ****         }
 1093              		.loc 1 180 59
 1094              	#APP
 1095              	# 180 "src/riscv.cpp" 1
 1096              		sd a0, 10 * 8(a5)
 1097              	# 0 "" 2
 1098              	#NO_APP
 1099              	.LBE117:
 1100 0368 6F00400A 		j	.L3
 1101              	.L41:
 1102              	.LBB118:
 1103              	.LBB109:
 185:src/riscv.cpp ****             asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 1104              		.loc 1 185 13 is_stmt 1
 186:src/riscv.cpp ****             sstatus &= ~0x100;
 1105              		.loc 1 186 13
 186:src/riscv.cpp ****             sstatus &= ~0x100;
 1106              		.loc 1 186 62 is_stmt 0
 1107              	#APP
 1108              	# 186 "src/riscv.cpp" 1
 1109              		csrr a5, sstatus
 1110              	# 0 "" 2
 1111              	.LVL50:
 187:src/riscv.cpp ****             asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 1112              		.loc 1 187 13 is_stmt 1
 187:src/riscv.cpp ****             asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 1113              		.loc 1 187 21 is_stmt 0
 1114              	#NO_APP
 1115 0370 93F7F7EF 		andi	a5,a5,-257
 1116              	.LVL51:
 188:src/riscv.cpp ****         }
GAS LISTING /tmp/ccIQXOEV.s 			page 32


 1117              		.loc 1 188 13 is_stmt 1
 188:src/riscv.cpp ****         }
 1118              		.loc 1 188 63 is_stmt 0
 1119              	#APP
 1120              	# 188 "src/riscv.cpp" 1
 1121              		csrw sstatus, a5
 1122              	# 0 "" 2
 1123              	#NO_APP
 1124              	.LBE109:
 1125 0378 6F004009 		j	.L3
 1126              	.LVL52:
 1127              	.L42:
 1128              	.LBB110:
 1129              	.LBB102:
 193:src/riscv.cpp ****             asm volatile("csrr %0, sstatus" : "=r" (sstatus));
 1130              		.loc 1 193 13 is_stmt 1
 194:src/riscv.cpp ****             sstatus |= 0x100;
 1131              		.loc 1 194 13
 194:src/riscv.cpp ****             sstatus |= 0x100;
 1132              		.loc 1 194 62 is_stmt 0
 1133              	#APP
 1134              	# 194 "src/riscv.cpp" 1
 1135              		csrr a5, sstatus
 1136              	# 0 "" 2
 1137              	.LVL53:
 195:src/riscv.cpp ****             asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 1138              		.loc 1 195 13 is_stmt 1
 195:src/riscv.cpp ****             asm volatile("csrw sstatus, %0" : : "r" (sstatus));
 1139              		.loc 1 195 21 is_stmt 0
 1140              	#NO_APP
 1141 0380 93E70710 		ori	a5,a5,256
 1142              	.LVL54:
 196:src/riscv.cpp ****         }
 1143              		.loc 1 196 13 is_stmt 1
 196:src/riscv.cpp ****         }
 1144              		.loc 1 196 63 is_stmt 0
 1145              	#APP
 1146              	# 196 "src/riscv.cpp" 1
 1147              		csrw sstatus, a5
 1148              	# 0 "" 2
 1149              	#NO_APP
 1150              	.LBE102:
 1151 0388 6F004008 		j	.L3
 1152              	.LVL55:
 1153              	.L43:
 1154              	.LBB103:
 1155              	.LBB96:
 201:src/riscv.cpp **** 
 1156              		.loc 1 201 13 is_stmt 1
 201:src/riscv.cpp **** 
 1157              		.loc 1 201 35 is_stmt 0
 1158 038c 97000000 		call	__getc@plt
 1158      E7800000 
 1159              	.LVL56:
 203:src/riscv.cpp **** 
 1160              		.loc 1 203 13 is_stmt 1
 203:src/riscv.cpp **** 
GAS LISTING /tmp/ccIQXOEV.s 			page 33


 1161              		.loc 1 203 54 is_stmt 0
 1162              	#APP
 1163              	# 203 "src/riscv.cpp" 1
 1164              		mv a5, a0
 1165              	# 0 "" 2
 1166              	.LVL57:
 206:src/riscv.cpp ****         }
 1167              		.loc 1 206 13 is_stmt 1
 206:src/riscv.cpp ****         }
 1168              		.loc 1 206 55 is_stmt 0
 1169              	#NO_APP
 1170 0398 833784F8 		ld	a5,-120(s0)
 206:src/riscv.cpp ****         }
 1171              		.loc 1 206 59
 1172              	#APP
 1173              	# 206 "src/riscv.cpp" 1
 1174              		sd a0, 10 * 8(a5)
 1175              	# 0 "" 2
 1176              	#NO_APP
 1177              	.LBE96:
 1178 03a0 6F00C006 		j	.L3
 1179              	.L44:
 1180              	.LBB97:
 1181              	.LBB91:
 211:src/riscv.cpp **** 
 1182              		.loc 1 211 13 is_stmt 1
 1183              	.LVL58:
 213:src/riscv.cpp ****         }
 1184              		.loc 1 213 13
 213:src/riscv.cpp ****         }
 1185              		.loc 1 213 19 is_stmt 0
 1186 03a4 034584FA 		lbu	a0,-88(s0)
 1187 03a8 97000000 		call	__putc@plt
 1187      E7800000 
 1188              	.LVL59:
 1189 03b0 6F00C005 		j	.L3
 1190              	.L45:
 1191              	.LBE91:
 1192              	.LBB92:
 219:src/riscv.cpp **** //            w_sstatus(sstatus);
 1193              		.loc 1 219 13 is_stmt 1
 219:src/riscv.cpp **** //            w_sstatus(sstatus);
 1194              		.loc 1 219 32 is_stmt 0
 1195 03b4 97000000 		call	_ZN7_thread10threadForkEv@plt
 1195      E7800000 
 1196              	.LVL60:
 1197 03bc 6F000005 		j	.L3
 1198              	.L46:
 1199              	.LBB88:
 1200              	.LBB86:
 226:src/riscv.cpp ****             void* arg = (void*)a[2];
 1201              		.loc 1 226 13 is_stmt 1
 226:src/riscv.cpp ****             void* arg = (void*)a[2];
 1202              		.loc 1 226 81 is_stmt 0
 1203 03c0 033984FA 		ld	s2,-88(s0)
 1204              	.LVL61:
 227:src/riscv.cpp **** 
GAS LISTING /tmp/ccIQXOEV.s 			page 34


 1205              		.loc 1 227 13 is_stmt 1
 227:src/riscv.cpp **** 
 1206              		.loc 1 227 35 is_stmt 0
 1207 03c4 833404FB 		ld	s1,-80(s0)
 1208              	.LVL62:
 230:src/riscv.cpp **** 
 1209              		.loc 1 230 13 is_stmt 1
 230:src/riscv.cpp **** 
 1210              		.loc 1 230 32 is_stmt 0
 1211 03c8 97000000 		call	_ZN7_thread10threadExecEv@plt
 1211      E7800000 
 1212              	.LVL63:
 232:src/riscv.cpp ****             _thread::running->arg = arg;
 1213              		.loc 1 232 13 is_stmt 1
 232:src/riscv.cpp ****             _thread::running->arg = arg;
 1214              		.loc 1 232 31 is_stmt 0
 1215 03d0 97070000 		la	a5,_ZN7_thread7runningE
 1215      83B70700 
 1216 03d8 03B70700 		ld	a4,0(a5)
 232:src/riscv.cpp ****             _thread::running->arg = arg;
 1217              		.loc 1 232 36
 1218 03dc 23302701 		sd	s2,0(a4)
 233:src/riscv.cpp **** 
 1219              		.loc 1 233 13 is_stmt 1
 233:src/riscv.cpp **** 
 1220              		.loc 1 233 31 is_stmt 0
 1221 03e0 03B50700 		ld	a0,0(a5)
 233:src/riscv.cpp **** 
 1222              		.loc 1 233 35
 1223 03e4 23349502 		sd	s1,40(a0)
 235:src/riscv.cpp ****             contextSwitchThreadEnded(&_thread::running->context);
 1224              		.loc 1 235 13 is_stmt 1
 235:src/riscv.cpp ****             contextSwitchThreadEnded(&_thread::running->context);
 1225              		.loc 1 235 42 is_stmt 0
 1226 03e8 97070000 		la	a5,_ZN7_thread13threadWrapperEv
 1226      83B70700 
 1227 03f0 233CF500 		sd	a5,24(a0)
 236:src/riscv.cpp ****         }
 1228              		.loc 1 236 13 is_stmt 1
 236:src/riscv.cpp ****         }
 1229              		.loc 1 236 37 is_stmt 0
 1230 03f4 13058501 		addi	a0,a0,24
 1231 03f8 97000000 		call	contextSwitchThreadEnded@plt
 1231      E7800000 
 1232              	.LVL64:
 1233 0400 6F00C000 		j	.L3
 1234              	.LVL65:
 1235              	.L29:
 1236              	.LBE86:
 1237              	.LBE88:
 1238              	.LBE92:
 1239              	.LBE97:
 1240              	.LBE103:
 1241              	.LBE110:
 1242              	.LBE118:
 1243              	.LBE131:
 1244              	.LBE141:
GAS LISTING /tmp/ccIQXOEV.s 			page 35


 1245              	.LBE152:
 1246              	.LBE168:
 1247              	.LBE184:
 1248              	.LBE198:
 1249              	.LBE213:
 1250              	.LBE229:
 1251              	.LBE246:
 1252              	.LBE262:
 1253              	.LBE278:
 258:src/riscv.cpp ****         /*
 1254              		.loc 1 258 9 is_stmt 1
 1255              	.LBB279:
 1256              	.LBB280:
 141:src/../h/riscv.hpp **** }
 1257              		.loc 2 141 5
 141:src/../h/riscv.hpp **** }
 1258              		.loc 2 141 64 is_stmt 0
 1259 0404 93072000 		li	a5,2
 1260              	#APP
 1261              	# 141 "src/../h/riscv.hpp" 1
 1262              		csrc sip, a5
 1263              	# 0 "" 2
 1264              	.LVL66:
 1265              	#NO_APP
 1266              	.L3:
 1267              	.LBE280:
 1268              	.LBE279:
 1269              	.LBE296:
 292:src/riscv.cpp ****     }
 293:src/riscv.cpp **** }
 1270              		.loc 1 293 1
 1271 040c 83308109 		ld	ra,152(sp)
 1272              		.cfi_remember_state
 1273              		.cfi_restore 1
 1274 0410 03340109 		ld	s0,144(sp)
 1275              		.cfi_restore 8
 1276              		.cfi_def_cfa 2, 160
 1277 0414 83348108 		ld	s1,136(sp)
 1278              		.cfi_restore 9
 1279 0418 03390108 		ld	s2,128(sp)
 1280              		.cfi_restore 18
 1281 041c 1301010A 		addi	sp,sp,160
 1282              		.cfi_def_cfa_offset 0
 1283 0420 67800000 		jr	ra
 1284              	.L30:
 1285              		.cfi_restore_state
 1286              	.LBB297:
 279:src/riscv.cpp **** 
 1287              		.loc 1 279 9 is_stmt 1
 279:src/riscv.cpp **** 
 1288              		.loc 1 279 24 is_stmt 0
 1289 0424 97000000 		call	console_handler@plt
 1289      E7800000 
 1290              	.LVL67:
 1291 042c 6FF01FFE 		j	.L3
 1292              	.LBE297:
 1293              		.cfi_endproc
GAS LISTING /tmp/ccIQXOEV.s 			page 36


 1294              	.LFE17:
 1296              	.Letext0:
 1297              		.file 3 "src/../h/../lib/hw.h"
 1298              		.file 4 "src/../h/../h/thread.hpp"
 1299              		.file 5 "src/../h/../h/sem.hpp"
 1300              		.file 6 "src/../h/../h/MemoryAllocator.hpp"
 1301              		.file 7 "src/../h/syscall_c.hpp"
 1302              		.file 8 "src/../lib/console.h"
 1303              		.file 9 "src/../h/../h/../test/printing.hpp"
GAS LISTING /tmp/ccIQXOEV.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccIQXOEV.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccIQXOEV.s:13     .text:0000000000000000 .L0 
     /tmp/ccIQXOEV.s:14     .text:0000000000000000 .L0 
     /tmp/ccIQXOEV.s:15     .text:0000000000000004 .L0 
     /tmp/ccIQXOEV.s:17     .text:0000000000000008 .L0 
     /tmp/ccIQXOEV.s:19     .text:000000000000000c .L0 
     /tmp/ccIQXOEV.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:8      .text:000000000000000c .L0 
     /tmp/ccIQXOEV.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:9      .text:0000000000000010 .L0 
     /tmp/ccIQXOEV.s:33     .text:0000000000000014 .L0 
     /tmp/ccIQXOEV.s:34     .text:0000000000000018 .L0 
     /tmp/ccIQXOEV.s:35     .text:0000000000000018 .L0 
     /tmp/ccIQXOEV.s:37     .text:000000000000001c .L0 
     /tmp/ccIQXOEV.s:39     .text:0000000000000020 .L0 
     /tmp/ccIQXOEV.s:59     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccIQXOEV.s:62     .text:0000000000000020 .L0 
     /tmp/ccIQXOEV.s:63     .text:0000000000000020 .L0 
     /tmp/ccIQXOEV.s:64     .text:0000000000000024 .L0 
     /tmp/ccIQXOEV.s:69     .text:0000000000000034 .L0 
     /tmp/ccIQXOEV.s:70     .text:0000000000000034 .L0 
     /tmp/ccIQXOEV.s:71     .text:0000000000000034 .L0 
     /tmp/ccIQXOEV.s:72     .text:0000000000000034 .L0 
     /tmp/ccIQXOEV.s:74     .text:0000000000000038 .L0 
     /tmp/ccIQXOEV.s:76     .text:0000000000000038 .L0 
     /tmp/ccIQXOEV.s:77     .text:0000000000000038 .L0 
       src/riscv.cpp:15     .text:0000000000000038 .L0 
     /tmp/ccIQXOEV.s:83     .text:000000000000003c .L0 
       src/riscv.cpp:16     .text:000000000000003c .L0 
     /tmp/ccIQXOEV.s:88     .text:0000000000000040 .L0 
       src/riscv.cpp:17     .text:0000000000000040 .L0 
     /tmp/ccIQXOEV.s:93     .text:0000000000000044 .L0 
       src/riscv.cpp:18     .text:0000000000000044 .L0 
     /tmp/ccIQXOEV.s:98     .text:0000000000000048 .L0 
       src/riscv.cpp:19     .text:0000000000000048 .L0 
     /tmp/ccIQXOEV.s:103    .text:000000000000004c .L0 
       src/riscv.cpp:20     .text:000000000000004c .L0 
     /tmp/ccIQXOEV.s:108    .text:0000000000000050 .L0 
       src/riscv.cpp:21     .text:0000000000000050 .L0 
     /tmp/ccIQXOEV.s:113    .text:0000000000000054 .L0 
       src/riscv.cpp:22     .text:0000000000000054 .L0 
     /tmp/ccIQXOEV.s:122    .text:0000000000000058 .L0 
     /tmp/ccIQXOEV.s:123    .text:0000000000000058 .L0 
     /tmp/ccIQXOEV.s:124    .text:0000000000000058 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000058 .L0 
     /tmp/ccIQXOEV.s:132    .text:0000000000000060 .L0 
     /tmp/ccIQXOEV.s:133    .text:0000000000000060 .L0 
     /tmp/ccIQXOEV.s:137    .text:0000000000000064 .L0 
     /tmp/ccIQXOEV.s:141    .text:0000000000000068 .L0 
     /tmp/ccIQXOEV.s:142    .text:0000000000000068 .L0 
     /tmp/ccIQXOEV.s:143    .text:0000000000000068 .L0 
  src/../h/riscv.hpp:169    .text:0000000000000068 .L0 
     /tmp/ccIQXOEV.s:151    .text:0000000000000070 .L0 
     /tmp/ccIQXOEV.s:152    .text:0000000000000070 .L0 
     /tmp/ccIQXOEV.s:156    .text:0000000000000074 .L0 
GAS LISTING /tmp/ccIQXOEV.s 			page 38


     /tmp/ccIQXOEV.s:158    .text:0000000000000078 .L0 
     /tmp/ccIQXOEV.s:159    .text:0000000000000078 .L0 
       src/riscv.cpp:29     .text:0000000000000078 .L0 
     /tmp/ccIQXOEV.s:169    .text:0000000000000080 .L0 
     /tmp/ccIQXOEV.s:170    .text:0000000000000080 .L0 
     /tmp/ccIQXOEV.s:171    .text:0000000000000080 .L0 
  src/../h/riscv.hpp:89     .text:0000000000000080 .L0 
     /tmp/ccIQXOEV.s:179    .text:0000000000000088 .L0 
     /tmp/ccIQXOEV.s:180    .text:0000000000000088 .L0 
     /tmp/ccIQXOEV.s:184    .text:000000000000008c .L0 
     /tmp/ccIQXOEV.s:187    .text:0000000000000090 .L0 
     /tmp/ccIQXOEV.s:188    .text:0000000000000090 .L0 
     /tmp/ccIQXOEV.s:190    .text:0000000000000094 .L0 
     /tmp/ccIQXOEV.s:193    .text:000000000000009c .L0 
     /tmp/ccIQXOEV.s:195    .text:00000000000000a0 .L0 
     /tmp/ccIQXOEV.s:198    .text:00000000000000a8 .L0 
     /tmp/ccIQXOEV.s:199    .text:00000000000000a8 .L0 
     /tmp/ccIQXOEV.s:201    .text:00000000000000ac .L0 
     /tmp/ccIQXOEV.s:206    .text:00000000000000bc .L0 
     /tmp/ccIQXOEV.s:207    .text:00000000000000bc .L0 
     /tmp/ccIQXOEV.s:209    .text:00000000000000c0 .L0 
     /tmp/ccIQXOEV.s:214    .text:00000000000000d0 .L0 
     /tmp/ccIQXOEV.s:215    .text:00000000000000d0 .L0 
     /tmp/ccIQXOEV.s:219    .text:00000000000000e0 .L0 
     /tmp/ccIQXOEV.s:220    .text:00000000000000e0 .L0 
     /tmp/ccIQXOEV.s:224    .text:00000000000000f0 .L0 
     /tmp/ccIQXOEV.s:225    .text:00000000000000f0 .L0 
     /tmp/ccIQXOEV.s:232    .text:0000000000000108 .L0 
     /tmp/ccIQXOEV.s:233    .text:0000000000000108 .L0 
     /tmp/ccIQXOEV.s:237    .text:0000000000000118 .L0 
     /tmp/ccIQXOEV.s:238    .text:0000000000000118 .L0 
     /tmp/ccIQXOEV.s:242    .text:0000000000000128 .L0 
     /tmp/ccIQXOEV.s:243    .text:0000000000000128 .L0 
     /tmp/ccIQXOEV.s:251    .text:0000000000000140 .L0 
     /tmp/ccIQXOEV.s:252    .text:0000000000000140 .L0 
     /tmp/ccIQXOEV.s:256    .text:0000000000000144 .L0 
     /tmp/ccIQXOEV.s:257    .text:0000000000000144 .L0 
     /tmp/ccIQXOEV.s:259    .text:0000000000000148 .L0 
     /tmp/ccIQXOEV.s:261    .text:000000000000014c .L0 
     /tmp/ccIQXOEV.s:263    .text:0000000000000150 .L0 
     /tmp/ccIQXOEV.s:264    .text:0000000000000150 .L0 
     /tmp/ccIQXOEV.s:269    .text:0000000000000154 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000154 .L0 
     /tmp/ccIQXOEV.s:280    .text:0000000000000158 .L0 
     /tmp/ccIQXOEV.s:281    .text:0000000000000158 .L0 
     /tmp/ccIQXOEV.s:283    .text:000000000000015c .L0 
     /tmp/ccIQXOEV.s:293    .text:0000000000000164 .L0 
     /tmp/ccIQXOEV.s:305    .text:000000000000016c .L0 
     /tmp/ccIQXOEV.s:319    .text:0000000000000174 .L0 
     /tmp/ccIQXOEV.s:335    .text:000000000000017c .L0 
     /tmp/ccIQXOEV.s:353    .text:0000000000000184 .L0 
     /tmp/ccIQXOEV.s:373    .text:000000000000018c .L0 
     /tmp/ccIQXOEV.s:395    .text:0000000000000194 .L0 
     /tmp/ccIQXOEV.s:419    .text:000000000000019c .L0 
     /tmp/ccIQXOEV.s:445    .text:00000000000001a4 .L0 
     /tmp/ccIQXOEV.s:473    .text:00000000000001ac .L0 
     /tmp/ccIQXOEV.s:503    .text:00000000000001b4 .L0 
GAS LISTING /tmp/ccIQXOEV.s 			page 39


     /tmp/ccIQXOEV.s:535    .text:00000000000001bc .L0 
     /tmp/ccIQXOEV.s:569    .text:00000000000001c4 .L0 
     /tmp/ccIQXOEV.s:605    .text:00000000000001cc .L0 
     /tmp/ccIQXOEV.s:643    .text:00000000000001d4 .L0 
     /tmp/ccIQXOEV.s:683    .text:00000000000001dc .L0 
     /tmp/ccIQXOEV.s:688    .text:00000000000001e4 .L0 
     /tmp/ccIQXOEV.s:689    .text:00000000000001e4 .L0 
     /tmp/ccIQXOEV.s:690    .text:00000000000001e4 .L0 
     /tmp/ccIQXOEV.s:694    .text:00000000000001f0 .L0 
       src/riscv.cpp:245    .text:00000000000001f0 .L0 
     /tmp/ccIQXOEV.s:701    .text:00000000000001f4 .L0 
     /tmp/ccIQXOEV.s:703    .text:00000000000001f4 .L0 
       src/riscv.cpp:248    .text:00000000000001f8 .L0 
     /tmp/ccIQXOEV.s:732    .text:0000000000000200 .L0 
     /tmp/ccIQXOEV.s:733    .text:0000000000000200 .L0 
     /tmp/ccIQXOEV.s:734    .text:0000000000000200 .L0 
     /tmp/ccIQXOEV.s:738    .text:000000000000020c .L0 
     /tmp/ccIQXOEV.s:739    .text:000000000000020c .L0 
     /tmp/ccIQXOEV.s:742    .text:0000000000000214 .L0 
       src/riscv.cpp:52     .text:0000000000000214 .L0 
     /tmp/ccIQXOEV.s:749    .text:0000000000000218 .L0 
     /tmp/ccIQXOEV.s:751    .text:0000000000000218 .L0 
       src/riscv.cpp:55     .text:000000000000021c .L0 
     /tmp/ccIQXOEV.s:765    .text:0000000000000224 .L0 
     /tmp/ccIQXOEV.s:766    .text:0000000000000224 .L0 
     /tmp/ccIQXOEV.s:767    .text:0000000000000224 .L0 
     /tmp/ccIQXOEV.s:771    .text:0000000000000230 .L0 
       src/riscv.cpp:66     .text:0000000000000230 .L0 
     /tmp/ccIQXOEV.s:778    .text:0000000000000234 .L0 
     /tmp/ccIQXOEV.s:780    .text:0000000000000234 .L0 
       src/riscv.cpp:69     .text:0000000000000238 .L0 
     /tmp/ccIQXOEV.s:794    .text:0000000000000240 .L0 
     /tmp/ccIQXOEV.s:795    .text:0000000000000240 .L0 
     /tmp/ccIQXOEV.s:796    .text:0000000000000240 .L0 
     /tmp/ccIQXOEV.s:797    .text:0000000000000240 .L0 
     /tmp/ccIQXOEV.s:798    .text:0000000000000240 .L0 
     /tmp/ccIQXOEV.s:799    .text:0000000000000240 .L0 
     /tmp/ccIQXOEV.s:806    .text:0000000000000258 .L0 
       src/riscv.cpp:82     .text:0000000000000258 .L0 
     /tmp/ccIQXOEV.s:813    .text:000000000000025c .L0 
     /tmp/ccIQXOEV.s:815    .text:000000000000025c .L0 
       src/riscv.cpp:85     .text:0000000000000260 .L0 
     /tmp/ccIQXOEV.s:828    .text:0000000000000268 .L0 
     /tmp/ccIQXOEV.s:829    .text:0000000000000268 .L0 
     /tmp/ccIQXOEV.s:832    .text:0000000000000274 .L0 
     /tmp/ccIQXOEV.s:835    .text:000000000000027c .L0 
     /tmp/ccIQXOEV.s:836    .text:000000000000027c .L0 
     /tmp/ccIQXOEV.s:839    .text:0000000000000284 .L0 
     /tmp/ccIQXOEV.s:840    .text:0000000000000284 .L0 
       src/riscv.cpp:98     .text:0000000000000284 .L0 
     /tmp/ccIQXOEV.s:852    .text:000000000000028c .L0 
     /tmp/ccIQXOEV.s:853    .text:000000000000028c .L0 
     /tmp/ccIQXOEV.s:856    .text:0000000000000298 .L0 
     /tmp/ccIQXOEV.s:858    .text:000000000000029c .L0 
     /tmp/ccIQXOEV.s:859    .text:000000000000029c .L0 
     /tmp/ccIQXOEV.s:862    .text:00000000000002a4 .L0 
     /tmp/ccIQXOEV.s:863    .text:00000000000002a4 .L0 
GAS LISTING /tmp/ccIQXOEV.s 			page 40


     /tmp/ccIQXOEV.s:868    .text:00000000000002a8 .L0 
  src/../h/riscv.hpp:175    .text:00000000000002a8 .L0 
     /tmp/ccIQXOEV.s:878    .text:00000000000002ac .L0 
     /tmp/ccIQXOEV.s:879    .text:00000000000002ac .L0 
     /tmp/ccIQXOEV.s:884    .text:00000000000002b0 .L0 
  src/../h/riscv.hpp:107    .text:00000000000002b0 .L0 
     /tmp/ccIQXOEV.s:891    .text:00000000000002b4 .L0 
     /tmp/ccIQXOEV.s:899    .text:00000000000002b8 .L0 
     /tmp/ccIQXOEV.s:900    .text:00000000000002b8 .L0 
     /tmp/ccIQXOEV.s:903    .text:00000000000002bc .L0 
     /tmp/ccIQXOEV.s:904    .text:00000000000002bc .L0 
     /tmp/ccIQXOEV.s:906    .text:00000000000002c0 .L0 
     /tmp/ccIQXOEV.s:910    .text:00000000000002c4 .L0 
     /tmp/ccIQXOEV.s:911    .text:00000000000002c4 .L0 
     /tmp/ccIQXOEV.s:916    .text:00000000000002c8 .L0 
  src/../h/riscv.hpp:175    .text:00000000000002c8 .L0 
     /tmp/ccIQXOEV.s:926    .text:00000000000002cc .L0 
     /tmp/ccIQXOEV.s:927    .text:00000000000002cc .L0 
     /tmp/ccIQXOEV.s:932    .text:00000000000002d0 .L0 
  src/../h/riscv.hpp:107    .text:00000000000002d0 .L0 
     /tmp/ccIQXOEV.s:939    .text:00000000000002d4 .L0 
     /tmp/ccIQXOEV.s:945    .text:00000000000002d8 .L0 
     /tmp/ccIQXOEV.s:946    .text:00000000000002d8 .L0 
     /tmp/ccIQXOEV.s:956    .text:00000000000002e8 .L0 
     /tmp/ccIQXOEV.s:957    .text:00000000000002e8 .L0 
     /tmp/ccIQXOEV.s:958    .text:00000000000002e8 .L0 
     /tmp/ccIQXOEV.s:959    .text:00000000000002e8 .L0 
     /tmp/ccIQXOEV.s:964    .text:00000000000002f8 .L0 
       src/riscv.cpp:136    .text:00000000000002f8 .L0 
     /tmp/ccIQXOEV.s:971    .text:00000000000002fc .L0 
     /tmp/ccIQXOEV.s:973    .text:00000000000002fc .L0 
       src/riscv.cpp:139    .text:0000000000000300 .L0 
     /tmp/ccIQXOEV.s:987    .text:0000000000000308 .L0 
     /tmp/ccIQXOEV.s:988    .text:0000000000000308 .L0 
     /tmp/ccIQXOEV.s:989    .text:0000000000000308 .L0 
     /tmp/ccIQXOEV.s:993    .text:0000000000000314 .L0 
       src/riscv.cpp:149    .text:0000000000000314 .L0 
     /tmp/ccIQXOEV.s:1000   .text:0000000000000318 .L0 
     /tmp/ccIQXOEV.s:1002   .text:0000000000000318 .L0 
       src/riscv.cpp:152    .text:000000000000031c .L0 
     /tmp/ccIQXOEV.s:1016   .text:0000000000000324 .L0 
     /tmp/ccIQXOEV.s:1017   .text:0000000000000324 .L0 
     /tmp/ccIQXOEV.s:1018   .text:0000000000000324 .L0 
     /tmp/ccIQXOEV.s:1022   .text:0000000000000330 .L0 
       src/riscv.cpp:161    .text:0000000000000330 .L0 
     /tmp/ccIQXOEV.s:1029   .text:0000000000000334 .L0 
     /tmp/ccIQXOEV.s:1031   .text:0000000000000334 .L0 
       src/riscv.cpp:164    .text:0000000000000338 .L0 
     /tmp/ccIQXOEV.s:1038   .text:000000000000033c .L0 
     /tmp/ccIQXOEV.s:1040   .text:000000000000033c .L0 
     /tmp/ccIQXOEV.s:1045   .text:0000000000000340 .L0 
  src/../h/riscv.hpp:175    .text:0000000000000340 .L0 
     /tmp/ccIQXOEV.s:1055   .text:0000000000000344 .L0 
     /tmp/ccIQXOEV.s:1056   .text:0000000000000344 .L0 
     /tmp/ccIQXOEV.s:1061   .text:0000000000000348 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000348 .L0 
     /tmp/ccIQXOEV.s:1068   .text:000000000000034c .L0 
GAS LISTING /tmp/ccIQXOEV.s 			page 41


     /tmp/ccIQXOEV.s:1077   .text:0000000000000350 .L0 
     /tmp/ccIQXOEV.s:1078   .text:0000000000000350 .L0 
     /tmp/ccIQXOEV.s:1079   .text:0000000000000350 .L0 
     /tmp/ccIQXOEV.s:1083   .text:000000000000035c .L0 
       src/riscv.cpp:177    .text:000000000000035c .L0 
     /tmp/ccIQXOEV.s:1090   .text:0000000000000360 .L0 
     /tmp/ccIQXOEV.s:1092   .text:0000000000000360 .L0 
       src/riscv.cpp:180    .text:0000000000000364 .L0 
     /tmp/ccIQXOEV.s:1105   .text:000000000000036c .L0 
     /tmp/ccIQXOEV.s:1106   .text:000000000000036c .L0 
       src/riscv.cpp:186    .text:000000000000036c .L0 
     /tmp/ccIQXOEV.s:1113   .text:0000000000000370 .L0 
     /tmp/ccIQXOEV.s:1115   .text:0000000000000370 .L0 
     /tmp/ccIQXOEV.s:1118   .text:0000000000000374 .L0 
       src/riscv.cpp:188    .text:0000000000000374 .L0 
     /tmp/ccIQXOEV.s:1131   .text:000000000000037c .L0 
     /tmp/ccIQXOEV.s:1132   .text:000000000000037c .L0 
       src/riscv.cpp:194    .text:000000000000037c .L0 
     /tmp/ccIQXOEV.s:1139   .text:0000000000000380 .L0 
     /tmp/ccIQXOEV.s:1141   .text:0000000000000380 .L0 
     /tmp/ccIQXOEV.s:1144   .text:0000000000000384 .L0 
       src/riscv.cpp:196    .text:0000000000000384 .L0 
     /tmp/ccIQXOEV.s:1157   .text:000000000000038c .L0 
     /tmp/ccIQXOEV.s:1158   .text:000000000000038c .L0 
     /tmp/ccIQXOEV.s:1161   .text:0000000000000394 .L0 
       src/riscv.cpp:203    .text:0000000000000394 .L0 
     /tmp/ccIQXOEV.s:1168   .text:0000000000000398 .L0 
     /tmp/ccIQXOEV.s:1170   .text:0000000000000398 .L0 
       src/riscv.cpp:206    .text:000000000000039c .L0 
     /tmp/ccIQXOEV.s:1184   .text:00000000000003a4 .L0 
     /tmp/ccIQXOEV.s:1185   .text:00000000000003a4 .L0 
     /tmp/ccIQXOEV.s:1186   .text:00000000000003a4 .L0 
     /tmp/ccIQXOEV.s:1194   .text:00000000000003b4 .L0 
     /tmp/ccIQXOEV.s:1195   .text:00000000000003b4 .L0 
     /tmp/ccIQXOEV.s:1202   .text:00000000000003c0 .L0 
     /tmp/ccIQXOEV.s:1203   .text:00000000000003c0 .L0 
     /tmp/ccIQXOEV.s:1206   .text:00000000000003c4 .L0 
     /tmp/ccIQXOEV.s:1207   .text:00000000000003c4 .L0 
     /tmp/ccIQXOEV.s:1210   .text:00000000000003c8 .L0 
     /tmp/ccIQXOEV.s:1211   .text:00000000000003c8 .L0 
     /tmp/ccIQXOEV.s:1214   .text:00000000000003d0 .L0 
     /tmp/ccIQXOEV.s:1215   .text:00000000000003d0 .L0 
     /tmp/ccIQXOEV.s:1218   .text:00000000000003dc .L0 
     /tmp/ccIQXOEV.s:1220   .text:00000000000003e0 .L0 
     /tmp/ccIQXOEV.s:1221   .text:00000000000003e0 .L0 
     /tmp/ccIQXOEV.s:1223   .text:00000000000003e4 .L0 
     /tmp/ccIQXOEV.s:1225   .text:00000000000003e8 .L0 
     /tmp/ccIQXOEV.s:1226   .text:00000000000003e8 .L0 
     /tmp/ccIQXOEV.s:1229   .text:00000000000003f4 .L0 
     /tmp/ccIQXOEV.s:1230   .text:00000000000003f4 .L0 
     /tmp/ccIQXOEV.s:1257   .text:0000000000000404 .L0 
     /tmp/ccIQXOEV.s:1258   .text:0000000000000404 .L0 
     /tmp/ccIQXOEV.s:1259   .text:0000000000000404 .L0 
     /tmp/ccIQXOEV.s:1271   .text:000000000000040c .L0 
     /tmp/ccIQXOEV.s:1272   .text:0000000000000410 .L0 
     /tmp/ccIQXOEV.s:1273   .text:0000000000000410 .L0 
     /tmp/ccIQXOEV.s:1275   .text:0000000000000414 .L0 
GAS LISTING /tmp/ccIQXOEV.s 			page 42


     /tmp/ccIQXOEV.s:1276   .text:0000000000000414 .L0 
     /tmp/ccIQXOEV.s:1278   .text:0000000000000418 .L0 
     /tmp/ccIQXOEV.s:1280   .text:000000000000041c .L0 
     /tmp/ccIQXOEV.s:1282   .text:0000000000000420 .L0 
     /tmp/ccIQXOEV.s:1285   .text:0000000000000424 .L0 
     /tmp/ccIQXOEV.s:1288   .text:0000000000000424 .L0 
     /tmp/ccIQXOEV.s:1289   .text:0000000000000424 .L0 
     /tmp/ccIQXOEV.s:1293   .text:0000000000000430 .L0 
     /tmp/ccIQXOEV.s:1304   .text:0000000000000430 .L0 
     /tmp/ccIQXOEV.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccIQXOEV.s:215    .text:00000000000000d0 .L0 
     /tmp/ccIQXOEV.s:47     .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccIQXOEV.s:220    .text:00000000000000e0 .L0 
     /tmp/ccIQXOEV.s:50     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccIQXOEV.s:233    .text:0000000000000108 .L0 
     /tmp/ccIQXOEV.s:53     .rodata.str1.8:0000000000000038 .LC3
     /tmp/ccIQXOEV.s:238    .text:0000000000000118 .L0 
     /tmp/ccIQXOEV.s:829    .text:0000000000000268 .L0 
     /tmp/ccIQXOEV.s:853    .text:000000000000028c .L0 
     /tmp/ccIQXOEV.s:1215   .text:00000000000003d0 .L0 
     /tmp/ccIQXOEV.s:1226   .text:00000000000003e8 .L0 
     /tmp/ccIQXOEV.s:253    .text:0000000000000144 .L4
     /tmp/ccIQXOEV.s:1235   .text:0000000000000404 .L29
     /tmp/ccIQXOEV.s:1284   .text:0000000000000424 .L30
     /tmp/ccIQXOEV.s:249    .text:0000000000000140 .L26
     /tmp/ccIQXOEV.s:712    .text:0000000000000200 .L31
     /tmp/ccIQXOEV.s:760    .text:0000000000000224 .L32
     /tmp/ccIQXOEV.s:789    .text:0000000000000240 .L33
     /tmp/ccIQXOEV.s:824    .text:0000000000000268 .L34
     /tmp/ccIQXOEV.s:849    .text:000000000000028c .L35
     /tmp/ccIQXOEV.s:893    .text:00000000000002b8 .L36
     /tmp/ccIQXOEV.s:950    .text:00000000000002e8 .L37
     /tmp/ccIQXOEV.s:982    .text:0000000000000308 .L38
     /tmp/ccIQXOEV.s:1011   .text:0000000000000324 .L39
     /tmp/ccIQXOEV.s:1070   .text:0000000000000350 .L40
     /tmp/ccIQXOEV.s:1101   .text:000000000000036c .L41
     /tmp/ccIQXOEV.s:1127   .text:000000000000037c .L42
     /tmp/ccIQXOEV.s:1153   .text:000000000000038c .L43
     /tmp/ccIQXOEV.s:1179   .text:00000000000003a4 .L44
     /tmp/ccIQXOEV.s:1190   .text:00000000000003b4 .L45
     /tmp/ccIQXOEV.s:1198   .text:00000000000003c0 .L46
     /tmp/ccIQXOEV.s:1266   .text:000000000000040c .L3
     /tmp/ccIQXOEV.s:941    .text:00000000000002d8 .L47
     /tmp/ccIQXOEV.s:908    .text:00000000000002c4 .L14
     /tmp/ccIQXOEV.s:2923   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccIQXOEV.s:4269   .debug_str:00000000000006e5 .LASF149
     /tmp/ccIQXOEV.s:4205   .debug_str:0000000000000514 .LASF150
     /tmp/ccIQXOEV.s:4095   .debug_str:000000000000020b .LASF151
     /tmp/ccIQXOEV.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccIQXOEV.s:1296   .text:0000000000000430 .Letext0
     /tmp/ccIQXOEV.s:4015   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccIQXOEV.s:4179   .debug_str:0000000000000471 .LASF0
     /tmp/ccIQXOEV.s:4199   .debug_str:00000000000004e3 .LASF1
     /tmp/ccIQXOEV.s:4161   .debug_str:00000000000003e7 .LASF2
     /tmp/ccIQXOEV.s:4129   .debug_str:0000000000000323 .LASF4
     /tmp/ccIQXOEV.s:4243   .debug_str:0000000000000625 .LASF3
     /tmp/ccIQXOEV.s:4047   .debug_str:0000000000000094 .LASF5
GAS LISTING /tmp/ccIQXOEV.s 			page 43


     /tmp/ccIQXOEV.s:4203   .debug_str:0000000000000501 .LASF6
     /tmp/ccIQXOEV.s:4177   .debug_str:000000000000045e .LASF7
     /tmp/ccIQXOEV.s:4283   .debug_str:000000000000081c .LASF8
     /tmp/ccIQXOEV.s:4111   .debug_str:000000000000029d .LASF9
     /tmp/ccIQXOEV.s:4219   .debug_str:0000000000000574 .LASF10
     /tmp/ccIQXOEV.s:4273   .debug_str:00000000000007b5 .LASF11
     /tmp/ccIQXOEV.s:4049   .debug_str:000000000000009b .LASF12
     /tmp/ccIQXOEV.s:4027   .debug_str:0000000000000032 .LASF13
     /tmp/ccIQXOEV.s:4061   .debug_str:00000000000000f4 .LASF14
     /tmp/ccIQXOEV.s:4237   .debug_str:00000000000005e1 .LASF15
     /tmp/ccIQXOEV.s:4067   .debug_str:000000000000011d .LASF16
     /tmp/ccIQXOEV.s:4195   .debug_str:00000000000004d2 .LASF115
     /tmp/ccIQXOEV.s:4147   .debug_str:00000000000003a2 .LASF152
     /tmp/ccIQXOEV.s:4253   .debug_str:0000000000000681 .LASF17
     /tmp/ccIQXOEV.s:4193   .debug_str:00000000000004c9 .LASF18
     /tmp/ccIQXOEV.s:4139   .debug_str:0000000000000362 .LASF19
     /tmp/ccIQXOEV.s:4233   .debug_str:00000000000005cf .LASF52
     /tmp/ccIQXOEV.s:4307   .debug_str:00000000000008cf .LASF54
     /tmp/ccIQXOEV.s:4029   .debug_str:0000000000000042 .LASF20
     /tmp/ccIQXOEV.s:4087   .debug_str:00000000000001c2 .LASF22
     /tmp/ccIQXOEV.s:4083   .debug_str:00000000000001b1 .LASF24
     /tmp/ccIQXOEV.s:4081   .debug_str:000000000000019c .LASF26
     /tmp/ccIQXOEV.s:4247   .debug_str:0000000000000658 .LASF21
     /tmp/ccIQXOEV.s:4227   .debug_str:00000000000005ac .LASF23
     /tmp/ccIQXOEV.s:4267   .debug_str:00000000000006de .LASF25
     /tmp/ccIQXOEV.s:4259   .debug_str:00000000000006a9 .LASF27
     /tmp/ccIQXOEV.s:4101   .debug_str:0000000000000256 .LASF28
     /tmp/ccIQXOEV.s:4069   .debug_str:0000000000000133 .LASF29
     /tmp/ccIQXOEV.s:4021   .debug_str:0000000000000010 .LASF30
     /tmp/ccIQXOEV.s:4119   .debug_str:00000000000002e3 .LASF31
     /tmp/ccIQXOEV.s:4045   .debug_str:000000000000008c .LASF32
     /tmp/ccIQXOEV.s:4053   .debug_str:00000000000000b0 .LASF33
     /tmp/ccIQXOEV.s:4315   .debug_str:0000000000000916 .LASF34
     /tmp/ccIQXOEV.s:4089   .debug_str:00000000000001d7 .LASF35
     /tmp/ccIQXOEV.s:4181   .debug_str:000000000000047e .LASF36
     /tmp/ccIQXOEV.s:4303   .debug_str:00000000000008b2 .LASF37
     /tmp/ccIQXOEV.s:4043   .debug_str:0000000000000085 .LASF38
     /tmp/ccIQXOEV.s:4099   .debug_str:0000000000000243 .LASF39
     /tmp/ccIQXOEV.s:4105   .debug_str:000000000000026c .LASF40
     /tmp/ccIQXOEV.s:4265   .debug_str:00000000000006cc .LASF41
     /tmp/ccIQXOEV.s:4041   .debug_str:000000000000007f .LASF42
     /tmp/ccIQXOEV.s:4321   .debug_str:0000000000000941 .LASF43
     /tmp/ccIQXOEV.s:4313   .debug_str:000000000000090b .LASF44
     /tmp/ccIQXOEV.s:4241   .debug_str:000000000000060d .LASF45
     /tmp/ccIQXOEV.s:4197   .debug_str:00000000000004d8 .LASF46
     /tmp/ccIQXOEV.s:4255   .debug_str:000000000000068a .LASF47
     /tmp/ccIQXOEV.s:4059   .debug_str:00000000000000ea .LASF48
     /tmp/ccIQXOEV.s:4123   .debug_str:0000000000000300 .LASF49
     /tmp/ccIQXOEV.s:4167   .debug_str:0000000000000409 .LASF50
     /tmp/ccIQXOEV.s:4115   .debug_str:00000000000002b0 .LASF51
     /tmp/ccIQXOEV.s:4249   .debug_str:000000000000065f .LASF53
     /tmp/ccIQXOEV.s:4055   .debug_str:00000000000000c4 .LASF55
     /tmp/ccIQXOEV.s:4291   .debug_str:0000000000000856 .LASF70
     /tmp/ccIQXOEV.s:4145   .debug_str:0000000000000380 .LASF72
     /tmp/ccIQXOEV.s:4125   .debug_str:0000000000000316 .LASF56
     /tmp/ccIQXOEV.s:4037   .debug_str:000000000000006e .LASF57
     /tmp/ccIQXOEV.s:4155   .debug_str:00000000000003d5 .LASF58
GAS LISTING /tmp/ccIQXOEV.s 			page 44


     /tmp/ccIQXOEV.s:4231   .debug_str:00000000000005ca .LASF59
     /tmp/ccIQXOEV.s:4207   .debug_str:0000000000000522 .LASF60
     /tmp/ccIQXOEV.s:4137   .debug_str:000000000000035d .LASF61
     /tmp/ccIQXOEV.s:4157   .debug_str:00000000000003da .LASF62
     /tmp/ccIQXOEV.s:4135   .debug_str:0000000000000354 .LASF63
     /tmp/ccIQXOEV.s:4185   .debug_str:0000000000000494 .LASF64
     /tmp/ccIQXOEV.s:4141   .debug_str:000000000000036b .LASF65
     /tmp/ccIQXOEV.s:4189   .debug_str:00000000000004a5 .LASF66
     /tmp/ccIQXOEV.s:4023   .debug_str:0000000000000018 .LASF67
     /tmp/ccIQXOEV.s:4169   .debug_str:0000000000000413 .LASF68
     /tmp/ccIQXOEV.s:4229   .debug_str:00000000000005bf .LASF69
     /tmp/ccIQXOEV.s:4163   .debug_str:00000000000003f5 .LASF71
     /tmp/ccIQXOEV.s:4191   .debug_str:00000000000004af .LASF73
     /tmp/ccIQXOEV.s:4263   .debug_str:00000000000006c1 .LASF74
     /tmp/ccIQXOEV.s:4097   .debug_str:0000000000000229 .LASF75
     /tmp/ccIQXOEV.s:4173   .debug_str:0000000000000425 .LASF76
     /tmp/ccIQXOEV.s:4245   .debug_str:0000000000000637 .LASF77
     /tmp/ccIQXOEV.s:4261   .debug_str:00000000000006bc .LASF78
     /tmp/ccIQXOEV.s:4305   .debug_str:00000000000008c5 .LASF79
     /tmp/ccIQXOEV.s:4077   .debug_str:000000000000017d .LASF80
     /tmp/ccIQXOEV.s:4159   .debug_str:00000000000003e2 .LASF81
     /tmp/ccIQXOEV.s:4109   .debug_str:0000000000000295 .LASF96
     /tmp/ccIQXOEV.s:4075   .debug_str:0000000000000165 .LASF109
     /tmp/ccIQXOEV.s:4275   .debug_str:00000000000007c4 .LASF82
     /tmp/ccIQXOEV.s:4149   .debug_str:00000000000003ad .LASF83
     /tmp/ccIQXOEV.s:4187   .debug_str:000000000000049a .LASF84
     /tmp/ccIQXOEV.s:4079   .debug_str:0000000000000182 .LASF85
     /tmp/ccIQXOEV.s:4143   .debug_str:0000000000000373 .LASF86
     /tmp/ccIQXOEV.s:4085   .debug_str:00000000000001ba .LASF87
     /tmp/ccIQXOEV.s:4035   .debug_str:0000000000000061 .LASF88
     /tmp/ccIQXOEV.s:4279   .debug_str:00000000000007d3 .LASF89
     /tmp/ccIQXOEV.s:4151   .debug_str:00000000000003c2 .LASF90
     /tmp/ccIQXOEV.s:4117   .debug_str:00000000000002c6 .LASF91
     /tmp/ccIQXOEV.s:4025   .debug_str:0000000000000023 .LASF92
     /tmp/ccIQXOEV.s:4281   .debug_str:00000000000007fe .LASF93
     /tmp/ccIQXOEV.s:4091   .debug_str:00000000000001eb .LASF94
     /tmp/ccIQXOEV.s:4127   .debug_str:000000000000031e .LASF95
     /tmp/ccIQXOEV.s:4093   .debug_str:00000000000001f0 .LASF97
     /tmp/ccIQXOEV.s:4271   .debug_str:00000000000007a9 .LASF98
     /tmp/ccIQXOEV.s:4311   .debug_str:00000000000008f3 .LASF100
     /tmp/ccIQXOEV.s:4057   .debug_str:00000000000000e0 .LASF99
     /tmp/ccIQXOEV.s:4239   .debug_str:00000000000005f7 .LASF101
     /tmp/ccIQXOEV.s:4277   .debug_str:00000000000007cb .LASF102
     /tmp/ccIQXOEV.s:4221   .debug_str:0000000000000583 .LASF103
     /tmp/ccIQXOEV.s:4171   .debug_str:000000000000041d .LASF104
     /tmp/ccIQXOEV.s:4063   .debug_str:0000000000000100 .LASF105
     /tmp/ccIQXOEV.s:4209   .debug_str:0000000000000527 .LASF106
     /tmp/ccIQXOEV.s:4317   .debug_str:000000000000091e .LASF107
     /tmp/ccIQXOEV.s:4165   .debug_str:0000000000000400 .LASF108
     /tmp/ccIQXOEV.s:4071   .debug_str:0000000000000147 .LASF110
     /tmp/ccIQXOEV.s:4017   .debug_str:0000000000000000 .LASF111
     /tmp/ccIQXOEV.s:4065   .debug_str:0000000000000115 .LASF112
     /tmp/ccIQXOEV.s:4301   .debug_str:00000000000008ad .LASF113
     /tmp/ccIQXOEV.s:4153   .debug_str:00000000000003d0 .LASF114
     /tmp/ccIQXOEV.s:4217   .debug_str:0000000000000564 .LASF116
     /tmp/ccIQXOEV.s:4223   .debug_str:000000000000059a .LASF117
     /tmp/ccIQXOEV.s:4019   .debug_str:0000000000000009 .LASF118
GAS LISTING /tmp/ccIQXOEV.s 			page 45


     /tmp/ccIQXOEV.s:4299   .debug_str:00000000000008a3 .LASF119
     /tmp/ccIQXOEV.s:4215   .debug_str:000000000000053b .LASF120
     /tmp/ccIQXOEV.s:4201   .debug_str:00000000000004f6 .LASF121
     /tmp/ccIQXOEV.s:4107   .debug_str:0000000000000272 .LASF122
     /tmp/ccIQXOEV.s:4285   .debug_str:000000000000082c .LASF123
     /tmp/ccIQXOEV.s:4293   .debug_str:000000000000086b .LASF124
     /tmp/ccIQXOEV.s:4133   .debug_str:000000000000034b .LASF125
     /tmp/ccIQXOEV.s:4131   .debug_str:000000000000032a .LASF126
     /tmp/ccIQXOEV.s:4183   .debug_str:0000000000000485 .LASF127
     /tmp/ccIQXOEV.s:4175   .debug_str:0000000000000437 .LASF128
     /tmp/ccIQXOEV.s:60     .text:0000000000000020 .LFB17
     /tmp/ccIQXOEV.s:1294   .text:0000000000000430 .LFE17
     /tmp/ccIQXOEV.s:4051   .debug_str:00000000000000ab .LASF129
     /tmp/ccIQXOEV.s:4073   .debug_str:000000000000015d .LASF130
     /tmp/ccIQXOEV.s:4031   .debug_str:000000000000004b .LASF131
     /tmp/ccIQXOEV.s:729    .text:0000000000000200 .LBB245
     /tmp/ccIQXOEV.s:758    .text:0000000000000220 .LBE245
     /tmp/ccIQXOEV.s:3795   .debug_loc:0000000000000000 .LLST24
     /tmp/ccIQXOEV.s:4121   .debug_str:00000000000002f7 .LASF132
     /tmp/ccIQXOEV.s:3803   .debug_loc:0000000000000025 .LLST25
     /tmp/ccIQXOEV.s:4287   .debug_str:0000000000000836 .LASF133
     /tmp/ccIQXOEV.s:736    .text:000000000000020c .LVL12
     /tmp/ccIQXOEV.s:740    .text:0000000000000214 .LVL13
     /tmp/ccIQXOEV.s:762    .text:0000000000000224 .LBB228
     /tmp/ccIQXOEV.s:787    .text:000000000000023c .LBE228
     /tmp/ccIQXOEV.s:3810   .debug_loc:0000000000000048 .LLST23
     /tmp/ccIQXOEV.s:769    .text:0000000000000230 .LVL16
     /tmp/ccIQXOEV.s:791    .text:0000000000000240 .LBB212
     /tmp/ccIQXOEV.s:822    .text:0000000000000264 .LBE212
     /tmp/ccIQXOEV.s:4257   .debug_str:00000000000006a2 .LASF134
     /tmp/ccIQXOEV.s:3818   .debug_loc:000000000000006d .LLST19
     /tmp/ccIQXOEV.s:4103   .debug_str:000000000000025e .LASF135
     /tmp/ccIQXOEV.s:3826   .debug_loc:0000000000000092 .LLST20
     /tmp/ccIQXOEV.s:3834   .debug_loc:00000000000000b7 .LLST21
     /tmp/ccIQXOEV.s:4319   .debug_str:0000000000000935 .LASF136
     /tmp/ccIQXOEV.s:3842   .debug_loc:00000000000000dc .LLST22
     /tmp/ccIQXOEV.s:804    .text:0000000000000258 .LVL19
     /tmp/ccIQXOEV.s:826    .text:0000000000000268 .LBB197
     /tmp/ccIQXOEV.s:847    .text:0000000000000288 .LBE197
     /tmp/ccIQXOEV.s:837    .text:0000000000000284 .LVL21
     /tmp/ccIQXOEV.s:897    .text:00000000000002b8 .LBB163
     /tmp/ccIQXOEV.s:951    .text:00000000000002e8 .LBE163
     /tmp/ccIQXOEV.s:3850   .debug_loc:0000000000000100 .LLST14
     /tmp/ccIQXOEV.s:913    .text:00000000000002c8 .LBB164
     /tmp/ccIQXOEV.s:924    .text:00000000000002cc .LBE164
     /tmp/ccIQXOEV.s:3861   .debug_loc:0000000000000136 .LLST15
     /tmp/ccIQXOEV.s:929    .text:00000000000002d0 .LBB166
     /tmp/ccIQXOEV.s:943    .text:00000000000002d8 .LBE166
     /tmp/ccIQXOEV.s:3868   .debug_loc:0000000000000159 .LLST16
     /tmp/ccIQXOEV.s:948    .text:00000000000002e4 .LVL34
     /tmp/ccIQXOEV.s:953    .text:00000000000002e8 .LBB151
     /tmp/ccIQXOEV.s:980    .text:0000000000000304 .LBE151
     /tmp/ccIQXOEV.s:3875   .debug_loc:000000000000017c .LLST12
     /tmp/ccIQXOEV.s:4213   .debug_str:0000000000000536 .LASF137
     /tmp/ccIQXOEV.s:3883   .debug_loc:00000000000001a1 .LLST13
     /tmp/ccIQXOEV.s:962    .text:00000000000002f8 .LVL36
     /tmp/ccIQXOEV.s:984    .text:0000000000000308 .LBB140
GAS LISTING /tmp/ccIQXOEV.s 			page 46


     /tmp/ccIQXOEV.s:1009   .text:0000000000000320 .LBE140
     /tmp/ccIQXOEV.s:3891   .debug_loc:00000000000001c6 .LLST11
     /tmp/ccIQXOEV.s:991    .text:0000000000000314 .LVL39
     /tmp/ccIQXOEV.s:1013   .text:0000000000000324 .LBB126
     /tmp/ccIQXOEV.s:1073   .text:0000000000000350 .LBE126
     /tmp/ccIQXOEV.s:3899   .debug_loc:00000000000001eb .LLST8
     /tmp/ccIQXOEV.s:1042   .text:0000000000000340 .LBB127
     /tmp/ccIQXOEV.s:1053   .text:0000000000000344 .LBE127
     /tmp/ccIQXOEV.s:3907   .debug_loc:0000000000000210 .LLST9
     /tmp/ccIQXOEV.s:1058   .text:0000000000000348 .LBB129
     /tmp/ccIQXOEV.s:1072   .text:0000000000000350 .LBE129
     /tmp/ccIQXOEV.s:3914   .debug_loc:0000000000000233 .LLST10
     /tmp/ccIQXOEV.s:1020   .text:0000000000000330 .LVL42
     /tmp/ccIQXOEV.s:1075   .text:0000000000000350 .LBB117
     /tmp/ccIQXOEV.s:1099   .text:0000000000000368 .LBE117
     /tmp/ccIQXOEV.s:3921   .debug_loc:0000000000000256 .LLST7
     /tmp/ccIQXOEV.s:1081   .text:000000000000035c .LVL48
     /tmp/ccIQXOEV.s:1103   .text:000000000000036c .LBB109
     /tmp/ccIQXOEV.s:1124   .text:0000000000000378 .LBE109
     /tmp/ccIQXOEV.s:3929   .debug_loc:000000000000027b .LLST6
     /tmp/ccIQXOEV.s:1129   .text:000000000000037c .LBB102
     /tmp/ccIQXOEV.s:1150   .text:0000000000000388 .LBE102
     /tmp/ccIQXOEV.s:3936   .debug_loc:000000000000029e .LLST5
     /tmp/ccIQXOEV.s:1155   .text:000000000000038c .LBB96
     /tmp/ccIQXOEV.s:1177   .text:00000000000003a0 .LBE96
     /tmp/ccIQXOEV.s:1159   .text:0000000000000394 .LVL56
     /tmp/ccIQXOEV.s:1181   .text:00000000000003a4 .LBB91
     /tmp/ccIQXOEV.s:1191   .text:00000000000003b4 .LBE91
     /tmp/ccIQXOEV.s:3943   .debug_loc:00000000000002c1 .LLST4
     /tmp/ccIQXOEV.s:1188   .text:00000000000003b0 .LVL59
     /tmp/ccIQXOEV.s:1200   .text:00000000000003c0 .LBB86
     /tmp/ccIQXOEV.s:1236   .text:0000000000000404 .LBE86
     /tmp/ccIQXOEV.s:3951   .debug_loc:00000000000002e6 .LLST2
     /tmp/ccIQXOEV.s:3958   .debug_loc:0000000000000309 .LLST3
     /tmp/ccIQXOEV.s:1212   .text:00000000000003d0 .LVL63
     /tmp/ccIQXOEV.s:1232   .text:0000000000000400 .LVL64
     /tmp/ccIQXOEV.s:685    .text:00000000000001e4 .LBB85
     /tmp/ccIQXOEV.s:710    .text:00000000000001fc .LBE85
     /tmp/ccIQXOEV.s:4039   .debug_str:0000000000000076 .LASF138
     /tmp/ccIQXOEV.s:3965   .debug_loc:000000000000032c .LLST1
     /tmp/ccIQXOEV.s:692    .text:00000000000001f0 .LVL9
     /tmp/ccIQXOEV.s:119    .text:0000000000000058 .LBB58
     /tmp/ccIQXOEV.s:135    .text:0000000000000064 .LBE58
     /tmp/ccIQXOEV.s:139    .text:0000000000000068 .LBB60
     /tmp/ccIQXOEV.s:154    .text:0000000000000074 .LBE60
     /tmp/ccIQXOEV.s:167    .text:0000000000000080 .LBB62
     /tmp/ccIQXOEV.s:182    .text:000000000000008c .LBE62
     /tmp/ccIQXOEV.s:266    .text:0000000000000154 .LBB66
     /tmp/ccIQXOEV.s:277    .text:0000000000000158 .LBE66
     /tmp/ccIQXOEV.s:3973   .debug_loc:0000000000000351 .LLST0
     /tmp/ccIQXOEV.s:865    .text:00000000000002a8 .LBB180
     /tmp/ccIQXOEV.s:876    .text:00000000000002ac .LBE180
     /tmp/ccIQXOEV.s:3980   .debug_loc:0000000000000374 .LLST17
     /tmp/ccIQXOEV.s:881    .text:00000000000002b0 .LBB182
     /tmp/ccIQXOEV.s:895    .text:00000000000002b8 .LBE182
     /tmp/ccIQXOEV.s:3987   .debug_loc:0000000000000397 .LLST18
     /tmp/ccIQXOEV.s:1255   .text:0000000000000404 .LBB279
GAS LISTING /tmp/ccIQXOEV.s 			page 47


     /tmp/ccIQXOEV.s:1268   .text:000000000000040c .LBE279
     /tmp/ccIQXOEV.s:3994   .debug_loc:00000000000003ba .LLST26
     /tmp/ccIQXOEV.s:217    .text:00000000000000e0 .LVL0
     /tmp/ccIQXOEV.s:222    .text:00000000000000f0 .LVL1
     /tmp/ccIQXOEV.s:230    .text:0000000000000108 .LVL2
     /tmp/ccIQXOEV.s:235    .text:0000000000000118 .LVL3
     /tmp/ccIQXOEV.s:240    .text:0000000000000128 .LVL4
     /tmp/ccIQXOEV.s:248    .text:0000000000000140 .LVL5
     /tmp/ccIQXOEV.s:860    .text:00000000000002a4 .LVL23
     /tmp/ccIQXOEV.s:1196   .text:00000000000003bc .LVL60
     /tmp/ccIQXOEV.s:1290   .text:000000000000042c .LVL67
     /tmp/ccIQXOEV.s:4211   .debug_str:0000000000000531 .LASF139
     /tmp/ccIQXOEV.s:10     .text:0000000000000000 .LFB16
     /tmp/ccIQXOEV.s:40     .text:0000000000000020 .LFE16
     /tmp/ccIQXOEV.s:4113   .debug_str:00000000000002ab .LASF140
     /tmp/ccIQXOEV.s:4295   .debug_str:000000000000088c .LASF141
     /tmp/ccIQXOEV.s:4235   .debug_str:00000000000005da .LASF142
     /tmp/ccIQXOEV.s:4289   .debug_str:000000000000083d .LASF143
     /tmp/ccIQXOEV.s:4251   .debug_str:000000000000066e .LASF144
     /tmp/ccIQXOEV.s:4309   .debug_str:00000000000008e7 .LASF145
     /tmp/ccIQXOEV.s:4033   .debug_str:0000000000000052 .LASF146
     /tmp/ccIQXOEV.s:4225   .debug_str:00000000000005a3 .LASF147
     /tmp/ccIQXOEV.s:4297   .debug_str:0000000000000893 .LASF148
     /tmp/ccIQXOEV.s:731    .text:0000000000000200 .LVL11
     /tmp/ccIQXOEV.s:764    .text:0000000000000224 .LVL15
     /tmp/ccIQXOEV.s:793    .text:0000000000000240 .LVL18
     /tmp/ccIQXOEV.s:901    .text:00000000000002bc .LVL28
     /tmp/ccIQXOEV.s:907    .text:00000000000002c4 .LVL29
     /tmp/ccIQXOEV.s:940    .text:00000000000002d8 .LVL33
     /tmp/ccIQXOEV.s:912    .text:00000000000002c8 .LVL30
     /tmp/ccIQXOEV.s:921    .text:00000000000002cc .LVL31
     /tmp/ccIQXOEV.s:928    .text:00000000000002d0 .LVL32
     /tmp/ccIQXOEV.s:955    .text:00000000000002e8 .LVL35
     /tmp/ccIQXOEV.s:986    .text:0000000000000308 .LVL38
     /tmp/ccIQXOEV.s:1015   .text:0000000000000324 .LVL41
     /tmp/ccIQXOEV.s:1041   .text:0000000000000340 .LVL44
     /tmp/ccIQXOEV.s:1050   .text:0000000000000344 .LVL45
     /tmp/ccIQXOEV.s:1057   .text:0000000000000348 .LVL46
     /tmp/ccIQXOEV.s:1069   .text:0000000000000350 .LVL47
     /tmp/ccIQXOEV.s:1111   .text:0000000000000370 .LVL50
     /tmp/ccIQXOEV.s:1126   .text:000000000000037c .LVL52
     /tmp/ccIQXOEV.s:1137   .text:0000000000000380 .LVL53
     /tmp/ccIQXOEV.s:1152   .text:000000000000038c .LVL55
     /tmp/ccIQXOEV.s:1183   .text:00000000000003a4 .LVL58
     /tmp/ccIQXOEV.s:1204   .text:00000000000003c4 .LVL61
     /tmp/ccIQXOEV.s:1234   .text:0000000000000404 .LVL65
     /tmp/ccIQXOEV.s:1208   .text:00000000000003c8 .LVL62
     /tmp/ccIQXOEV.s:687    .text:00000000000001e4 .LVL8
     /tmp/ccIQXOEV.s:265    .text:0000000000000154 .LVL6
     /tmp/ccIQXOEV.s:274    .text:0000000000000158 .LVL7
     /tmp/ccIQXOEV.s:864    .text:00000000000002a8 .LVL24
     /tmp/ccIQXOEV.s:873    .text:00000000000002ac .LVL25
     /tmp/ccIQXOEV.s:880    .text:00000000000002b0 .LVL26
     /tmp/ccIQXOEV.s:892    .text:00000000000002b8 .LVL27
     /tmp/ccIQXOEV.s:1264   .text:000000000000040c .LVL66
     /tmp/ccIQXOEV.s:1305   .debug_info:0000000000000000 .Ldebug_info0

GAS LISTING /tmp/ccIQXOEV.s 			page 48


UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN7_thread10threadKillEi
_ZN15MemoryAllocator14convert2BlocksEm
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_
_ZN7_thread7runningE
_ZN7_thread14threadDispatchEv
_ZN4_sem7semWaitEPS_
_ZN4_sem7semOpenEPPS_j
_ZN4_sem8semCloseEPS_
_ZN4_sem9semSignalEPS_
__getc
__putc
_ZN7_thread10threadForkEv
_ZN7_thread10threadExecEv
_ZN7_thread13threadWrapperEv
contextSwitchThreadEnded
console_handler
