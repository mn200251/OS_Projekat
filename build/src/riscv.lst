GAS LISTING /tmp/ccMwoIU2.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB16:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/console.h"
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   4:src/riscv.cpp **** #include "../test/printing.hpp"
   5:src/riscv.cpp **** 
   6:src/riscv.cpp **** void Riscv::popSppSpie()
   7:src/riscv.cpp **** {
  12              		.loc 1 7 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 8 5
  21              		.loc 1 8 38 is_stmt 0
  22              	#APP
  23              	# 8 "src/riscv.cpp" 1
   9              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 9 5 is_stmt 1
  27              		.loc 1 9 29 is_stmt 0
  28              	# 9 "src/riscv.cpp" 1
  10              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 10 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE16:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 53636175 		.string	"Scause: "
  45      73653A20 
  45      00
  46 0009 00000000 		.align	3
  46      000000
GAS LISTING /tmp/ccMwoIU2.s 			page 2


  47              	.LC1:
  48 0010 0A00     		.string	"\n"
  49 0012 00000000 		.align	3
  49      0000
  50              	.LC2:
  51 0018 73657063 		.string	"sepc = "
  51      203D2000 
  52              		.align	3
  53              	.LC3:
  54 0020 0A556E65 		.string	"\nUnexpected trap cause!\n"
  54      78706563 
  54      74656420 
  54      74726170 
  54      20636175 
  55              		.text
  56              		.align	2
  57              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  59              	_ZN5Riscv20handleSupervisorTrapEv:
  60              	.LFB17:
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  13:src/riscv.cpp **** {
  61              		.loc 1 13 1 is_stmt 1
  62              		.cfi_startproc
  63 0020 130101F7 		addi	sp,sp,-144
  64              		.cfi_def_cfa_offset 144
  65 0024 23341108 		sd	ra,136(sp)
  66 0028 23308108 		sd	s0,128(sp)
  67              		.cfi_offset 1, -8
  68              		.cfi_offset 8, -16
  69 002c 13040109 		addi	s0,sp,144
  70              		.cfi_def_cfa 8, 0
  14:src/riscv.cpp ****     uint64 a[8];
  71              		.loc 1 14 5
  15:src/riscv.cpp ****     asm volatile("sd a0, %0" : "=m" (a[0]));
  72              		.loc 1 15 5
  73              		.loc 1 15 44 is_stmt 0
  74              	#APP
  75              	# 15 "src/riscv.cpp" 1
  16              	    asm volatile("sd a1, %0" : "=m" (a[1]));
  76              		sd a0, -80(s0)
  77              	# 0 "" 2
  78              		.loc 1 16 5 is_stmt 1
  79              		.loc 1 16 44 is_stmt 0
  80              	# 16 "src/riscv.cpp" 1
  17              	    asm volatile("sd a2, %0" : "=m" (a[2]));
  81              		sd a1, -72(s0)
  82              	# 0 "" 2
  83              		.loc 1 17 5 is_stmt 1
  84              		.loc 1 17 44 is_stmt 0
  85              	# 17 "src/riscv.cpp" 1
  18              	    asm volatile("sd a3, %0" : "=m" (a[3]));
  86              		sd a2, -64(s0)
  87              	# 0 "" 2
  88              		.loc 1 18 5 is_stmt 1
  89              		.loc 1 18 44 is_stmt 0
  90              	# 18 "src/riscv.cpp" 1
GAS LISTING /tmp/ccMwoIU2.s 			page 3


  19              	    asm volatile("sd a4, %0" : "=m" (a[4]));
  91              		sd a3, -56(s0)
  92              	# 0 "" 2
  93              		.loc 1 19 5 is_stmt 1
  94              		.loc 1 19 44 is_stmt 0
  95              	# 19 "src/riscv.cpp" 1
  20              	    asm volatile("sd a5, %0" : "=m" (a[5]));
  96              		sd a4, -48(s0)
  97              	# 0 "" 2
  98              		.loc 1 20 5 is_stmt 1
  99              		.loc 1 20 44 is_stmt 0
 100              	# 20 "src/riscv.cpp" 1
  21              	    asm volatile("sd a6, %0" : "=m" (a[6]));
 101              		sd a5, -40(s0)
 102              	# 0 "" 2
 103              		.loc 1 21 5 is_stmt 1
 104              		.loc 1 21 44 is_stmt 0
 105              	# 21 "src/riscv.cpp" 1
  22              	    asm volatile("sd a7, %0" : "=m" (a[7]));
 106              		sd a6, -32(s0)
 107              	# 0 "" 2
 108              		.loc 1 22 5 is_stmt 1
 109              		.loc 1 22 44 is_stmt 0
 110              	# 22 "src/riscv.cpp" 1
  23              	
  24:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
 111              		sd a7, -24(s0)
 112              	# 0 "" 2
 113              		.loc 1 24 5 is_stmt 1
 114              	#NO_APP
 115              	.LBB45:
 116              	.LBB46:
 117              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv
   8:src/../h/riscv.hpp **** {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccMwoIU2.s 			page 4


  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // mask set register sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask clear register sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  60:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  61:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sstatus
  65:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sstatus
  68:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sstatus
  71:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sstatus
  74:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // supervisor trap
  77:src/../h/riscv.hpp ****     static void supervisorTrap();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp **** private:
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // supervisor trap handler
GAS LISTING /tmp/ccMwoIU2.s 			page 5


  82:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** };
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  87:src/../h/riscv.hpp **** {
  88:src/../h/riscv.hpp ****     uint64 volatile scause;
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  90:src/../h/riscv.hpp ****     return scause;
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  94:src/../h/riscv.hpp **** {
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 118              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 119              		.loc 2 101 5
 120              		.loc 2 101 64 is_stmt 0
 121              	#APP
 122              	# 101 "src/../h/riscv.hpp" 1
 102              	    return sepc;
 123              		csrr a5, sepc
 124              	# 0 "" 2
 125              	#NO_APP
 126 0054 2334F4F8 		sd	a5,-120(s0)
 127              		.loc 2 102 5 is_stmt 1
 128              		.loc 2 102 12 is_stmt 0
 129 0058 833784F8 		ld	a5,-120(s0)
 130              	.LBE46:
 131              	.LBE45:
 132              		.loc 1 24 35
 133 005c 2334F4FA 		sd	a5,-88(s0)
  25:src/riscv.cpp ****     uint64 volatile sstatus = r_sstatus();
 134              		.loc 1 25 5 is_stmt 1
 135              	.LBB47:
 136              	.LBB48:
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 114:src/../h/riscv.hpp ****     return stvec;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 118:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccMwoIU2.s 			page 6


 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     uint64 volatile stval;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 126:src/../h/riscv.hpp ****     return stval;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     uint64 volatile sip;
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 148:src/../h/riscv.hpp ****     return sip;
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 137              		.loc 2 168 5
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 138              		.loc 2 169 5
 139              		.loc 2 169 76 is_stmt 0
 140              	#APP
 141              	# 169 "src/../h/riscv.hpp" 1
 170              	    return sstatus;
GAS LISTING /tmp/ccMwoIU2.s 			page 7


 142              		csrr a5, sstatus
 143              	# 0 "" 2
 144              	#NO_APP
 145 0064 2330F4F8 		sd	a5,-128(s0)
 146              		.loc 2 170 5 is_stmt 1
 147              		.loc 2 170 12 is_stmt 0
 148 0068 833704F8 		ld	a5,-128(s0)
 149              	.LBE48:
 150              	.LBE47:
 151              		.loc 1 25 41
 152 006c 2330F4FA 		sd	a5,-96(s0)
  26:src/riscv.cpp **** 
  27:src/riscv.cpp ****     // retrieve stack pointer relative to saved registers
  28:src/riscv.cpp ****     void* volatile SP;
 153              		.loc 1 28 5 is_stmt 1
  29:src/riscv.cpp ****     asm volatile("csrr %0, sscratch" : "=r" (SP));
 154              		.loc 1 29 5
 155              		.loc 1 29 50 is_stmt 0
 156              	#APP
 157              	# 29 "src/riscv.cpp" 1
  30              	
 158              		csrr a5, sscratch
 159              	# 0 "" 2
 160              	#NO_APP
 161 0074 233CF4F8 		sd	a5,-104(s0)
  31:src/riscv.cpp ****     uint64 volatile scause = r_scause();
 162              		.loc 1 31 5 is_stmt 1
 163              	.LBB49:
 164              	.LBB50:
  88:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 165              		.loc 2 88 5
  89:src/../h/riscv.hpp ****     return scause;
 166              		.loc 2 89 5
  89:src/../h/riscv.hpp ****     return scause;
 167              		.loc 2 89 72 is_stmt 0
 168              	#APP
 169              	# 89 "src/../h/riscv.hpp" 1
 170              		csrr a5, scause
 171              	# 0 "" 2
 172              	#NO_APP
 173 007c 233CF4F6 		sd	a5,-136(s0)
  90:src/../h/riscv.hpp **** }
 174              		.loc 2 90 5 is_stmt 1
  90:src/../h/riscv.hpp **** }
 175              		.loc 2 90 12 is_stmt 0
 176 0080 833784F7 		ld	a5,-136(s0)
 177              	.LBE50:
 178              	.LBE49:
 179              		.loc 1 31 39
 180 0084 2338F4F8 		sd	a5,-112(s0)
  32:src/riscv.cpp **** 
  33:src/riscv.cpp **** //    printString("scause: ");
  34:src/riscv.cpp **** //    printInteger(scause);
  35:src/riscv.cpp **** //    printString("\n");
  36:src/riscv.cpp **** 
  37:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 181              		.loc 1 37 5 is_stmt 1
GAS LISTING /tmp/ccMwoIU2.s 			page 8


 182              	.LBB51:
 183              		.loc 1 37 16 is_stmt 0
 184 0088 033704F9 		ld	a4,-112(s0)
 185              		.loc 1 37 40
 186 008c 93078000 		li	a5,8
 187 0090 630CF70A 		beq	a4,a5,.L4
 188              		.loc 1 37 50 discriminator 2
 189 0094 033704F9 		ld	a4,-112(s0)
 190              		.loc 1 37 40 discriminator 2
 191 0098 93079000 		li	a5,9
 192 009c 6306F70A 		beq	a4,a5,.L4
  38:src/riscv.cpp ****     {
  39:src/riscv.cpp ****         sepc = sepc + 4;
  40:src/riscv.cpp ****         w_sepc(sepc);
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****         // mem_alloc
  43:src/riscv.cpp ****         if (a[0] == 0x0000000000000001UL)
  44:src/riscv.cpp ****         {
  45:src/riscv.cpp ****             // get the size argument
  46:src/riscv.cpp ****             size_t size = reinterpret_cast<size_t>(a[1]);
  47:src/riscv.cpp **** 
  48:src/riscv.cpp ****             size_t blockNum = MemoryAllocator::convert2Blocks(size);
  49:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****             // retVal should already be in a0 but just in case
  52:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  53:src/riscv.cpp **** 
  54:src/riscv.cpp ****             // put the return value on the stack
  55:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  56:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
  57:src/riscv.cpp ****         }
  58:src/riscv.cpp ****         // mem_free
  59:src/riscv.cpp ****         else if (a[0] == 0x0000000000000002UL)
  60:src/riscv.cpp ****         {
  61:src/riscv.cpp ****             // get the ptr argument
  62:src/riscv.cpp ****             void* ptr = reinterpret_cast<void *>(a[1]);
  63:src/riscv.cpp **** 
  64:src/riscv.cpp ****             int retVal = MemoryAllocator::mem_free(ptr);
  65:src/riscv.cpp **** 
  66:src/riscv.cpp ****             // retVal should already be in a0 but just in case
  67:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  68:src/riscv.cpp **** 
  69:src/riscv.cpp ****             // put the return value on the stack
  70:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  71:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
  72:src/riscv.cpp ****         }
  73:src/riscv.cpp ****         // thread_create
  74:src/riscv.cpp ****         else if (a[0] == 0x0000000000000011UL)
  75:src/riscv.cpp ****         {
  76:src/riscv.cpp ****             thread_t* handle = reinterpret_cast<thread_t *>(a[1]);
  77:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[2]);
  78:src/riscv.cpp ****             void* arg = reinterpret_cast<void *>(a[3]);
  79:src/riscv.cpp ****             void* stack_space = reinterpret_cast<void *>(a[4]);
  80:src/riscv.cpp **** 
  81:src/riscv.cpp ****             int retVal = _thread::threadCreate(handle, start_routine, arg, stack_space);
  82:src/riscv.cpp **** 
  83:src/riscv.cpp ****             // retVal should already be in a0 but just in case
GAS LISTING /tmp/ccMwoIU2.s 			page 9


  84:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  85:src/riscv.cpp **** 
  86:src/riscv.cpp ****             // put the return value on the stack
  87:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  88:src/riscv.cpp ****         }
  89:src/riscv.cpp ****         // thread_exit
  90:src/riscv.cpp ****         else if (a[0] == 0x0000000000000012UL)
  91:src/riscv.cpp ****         {
  92:src/riscv.cpp ****             _thread::running->finished = true;
  93:src/riscv.cpp **** 
  94:src/riscv.cpp ****             _thread::threadDispatch();
  95:src/riscv.cpp **** 
  96:src/riscv.cpp ****             // error if this runs!
  97:src/riscv.cpp ****             int retVal;
  98:src/riscv.cpp **** 
  99:src/riscv.cpp ****             // return error code if thread didn't exit
 100:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 101:src/riscv.cpp ****         }
 102:src/riscv.cpp ****         // thread_dispatch
 103:src/riscv.cpp ****         else if (a[0] == 0x0000000000000013UL)
 104:src/riscv.cpp ****         {
 105:src/riscv.cpp ****             // sepc and sstatus already saved
 106:src/riscv.cpp ****             // seps already added +4
 107:src/riscv.cpp **** 
 108:src/riscv.cpp ****             _thread::running->timeSlice = 0;
 109:src/riscv.cpp **** 
 110:src/riscv.cpp ****             _thread::threadDispatch();
 111:src/riscv.cpp **** 
 112:src/riscv.cpp ****             // printString("Dispatched!\n");
 113:src/riscv.cpp **** 
 114:src/riscv.cpp ****             w_sstatus(sstatus);
 115:src/riscv.cpp ****             w_sepc(sepc);
 116:src/riscv.cpp **** 
 117:src/riscv.cpp ****             // nothing to return
 118:src/riscv.cpp ****         }
 119:src/riscv.cpp ****         // thread_join
 120:src/riscv.cpp ****         else if (a[0] == 0x0000000000000014UL)
 121:src/riscv.cpp ****         {
 122:src/riscv.cpp ****             _thread* handle = reinterpret_cast<_thread*>(a[1]);
 123:src/riscv.cpp **** 
 124:src/riscv.cpp ****             if (!handle->finished)
 125:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 126:src/riscv.cpp **** 
 127:src/riscv.cpp **** 
 128:src/riscv.cpp ****             w_sstatus(sstatus);
 129:src/riscv.cpp ****             w_sepc(sepc);
 130:src/riscv.cpp ****         }
 131:src/riscv.cpp ****         // sem_open
 132:src/riscv.cpp ****         else if (a[0] == 0x0000000000000021UL)
 133:src/riscv.cpp ****         {
 134:src/riscv.cpp ****             _sem** handle = reinterpret_cast<_sem** >(a[1]);
 135:src/riscv.cpp ****             unsigned init = (unsigned)a[2];
 136:src/riscv.cpp **** 
 137:src/riscv.cpp ****             int retVal = _sem::semOpen(handle, init);
 138:src/riscv.cpp **** 
 139:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 140:src/riscv.cpp **** 
GAS LISTING /tmp/ccMwoIU2.s 			page 10


 141:src/riscv.cpp ****             // put the return value on the stack
 142:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 143:src/riscv.cpp ****         }
 144:src/riscv.cpp ****         // sem_close
 145:src/riscv.cpp ****         else if (a[0] == 0x0000000000000022UL)
 146:src/riscv.cpp ****         {
 147:src/riscv.cpp ****             _sem* handle = reinterpret_cast<_sem* >(a[1]);
 148:src/riscv.cpp **** 
 149:src/riscv.cpp **** 
 150:src/riscv.cpp ****             int retVal = _sem::semClose(handle);
 151:src/riscv.cpp **** 
 152:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 153:src/riscv.cpp **** 
 154:src/riscv.cpp ****             // put the return value on the stack
 155:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 156:src/riscv.cpp ****         }
 157:src/riscv.cpp ****         // sem_wait
 158:src/riscv.cpp ****         else if (a[0] == 0x0000000000000023UL)
 159:src/riscv.cpp ****         {
 160:src/riscv.cpp ****             _sem* id = reinterpret_cast<_sem* >(a[1]);
 161:src/riscv.cpp **** 
 162:src/riscv.cpp ****             int retVal = _sem::semWait(id);
 163:src/riscv.cpp **** 
 164:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 165:src/riscv.cpp **** 
 166:src/riscv.cpp ****             // put the return value on the stack
 167:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 168:src/riscv.cpp **** 
 169:src/riscv.cpp ****             // restore sstatus and sepc because we are changing threads
 170:src/riscv.cpp ****             w_sstatus(sstatus);
 171:src/riscv.cpp ****             w_sepc(sepc);
 172:src/riscv.cpp ****         }
 173:src/riscv.cpp ****         // sem_signal
 174:src/riscv.cpp ****         else if (a[0] == 0x0000000000000024UL)
 175:src/riscv.cpp ****         {
 176:src/riscv.cpp ****             _sem* id = reinterpret_cast<_sem* >(a[1]);
 177:src/riscv.cpp **** 
 178:src/riscv.cpp ****             int retVal = _sem::semSignal(id);
 179:src/riscv.cpp **** 
 180:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 181:src/riscv.cpp **** 
 182:src/riscv.cpp ****             // put the return value on the stack
 183:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
 184:src/riscv.cpp ****         }
 185:src/riscv.cpp ****         else
 186:src/riscv.cpp ****         {
 187:src/riscv.cpp **** 
 188:src/riscv.cpp ****         }
 189:src/riscv.cpp ****     }
 190:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 193              		.loc 1 190 10 is_stmt 1
 194              		.loc 1 190 21 is_stmt 0
 195 00a0 033704F9 		ld	a4,-112(s0)
 196              		.loc 1 190 10
 197 00a4 9307F0FF 		li	a5,-1
 198 00a8 9397F703 		slli	a5,a5,63
 199 00ac 93871700 		addi	a5,a5,1
GAS LISTING /tmp/ccMwoIU2.s 			page 11


 200 00b0 6306F726 		beq	a4,a5,.L21
 191:src/riscv.cpp ****     {
 192:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 193:src/riscv.cpp ****         /*
 194:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 195:src/riscv.cpp **** 
 196:src/riscv.cpp ****         _thread::running->timeSlice++;
 197:src/riscv.cpp ****         if (_thread::running->timeSlice >= DEFAULT_TIME_SLICE)
 198:src/riscv.cpp ****         {
 199:src/riscv.cpp ****             // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 200:src/riscv.cpp ****             // sepc = sepc + 4;
 201:src/riscv.cpp **** 
 202:src/riscv.cpp ****             _thread::running->timeSlice = 0;
 203:src/riscv.cpp ****             _thread::threadDispatch();
 204:src/riscv.cpp ****             w_sstatus(sstatus);
 205:src/riscv.cpp ****             w_sepc(sepc);
 206:src/riscv.cpp ****         }
 207:src/riscv.cpp ****         */
 208:src/riscv.cpp ****     }
 209:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 201              		.loc 1 209 10 is_stmt 1
 202              		.loc 1 209 21 is_stmt 0
 203 00b4 033704F9 		ld	a4,-112(s0)
 204              		.loc 1 209 10
 205 00b8 9307F0FF 		li	a5,-1
 206 00bc 9397F703 		slli	a5,a5,63
 207 00c0 93879700 		addi	a5,a5,9
 208 00c4 6302F726 		beq	a4,a5,.L22
 210:src/riscv.cpp ****     {
 211:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 212:src/riscv.cpp ****         // printString("Keyboard interrupt!\n");
 213:src/riscv.cpp ****         console_handler();
 214:src/riscv.cpp **** 
 215:src/riscv.cpp ****     }
 216:src/riscv.cpp ****     else
 217:src/riscv.cpp ****     {
 218:src/riscv.cpp ****         printString("Scause: ");
 209              		.loc 1 218 9 is_stmt 1
 210              		.loc 1 218 20 is_stmt 0
 211 00c8 17050000 		lla	a0,.LC0
 211      13050500 
 212 00d0 97000000 		call	_Z11printStringPKc@plt
 212      E7800000 
 213              	.LVL0:
 219:src/riscv.cpp ****         printInt(scause);
 214              		.loc 1 219 9 is_stmt 1
 215              		.loc 1 219 17 is_stmt 0
 216 00d8 033504F9 		ld	a0,-112(s0)
 217 00dc 13060000 		li	a2,0
 218 00e0 9305A000 		li	a1,10
 219 00e4 1B050500 		sext.w	a0,a0
 220 00e8 97000000 		call	_Z8printIntiii@plt
 220      E7800000 
 221              	.LVL1:
 220:src/riscv.cpp ****         printString("\n");
 222              		.loc 1 220 9 is_stmt 1
 223              		.loc 1 220 20 is_stmt 0
GAS LISTING /tmp/ccMwoIU2.s 			page 12


 224 00f0 17050000 		lla	a0,.LC1
 224      13050500 
 225 00f8 97000000 		call	_Z11printStringPKc@plt
 225      E7800000 
 226              	.LVL2:
 221:src/riscv.cpp ****         printString("sepc = ");
 227              		.loc 1 221 9 is_stmt 1
 228              		.loc 1 221 20 is_stmt 0
 229 0100 17050000 		lla	a0,.LC2
 229      13050500 
 230 0108 97000000 		call	_Z11printStringPKc@plt
 230      E7800000 
 231              	.LVL3:
 222:src/riscv.cpp ****         printInt(sepc);
 232              		.loc 1 222 9 is_stmt 1
 233              		.loc 1 222 17 is_stmt 0
 234 0110 033584FA 		ld	a0,-88(s0)
 235 0114 13060000 		li	a2,0
 236 0118 9305A000 		li	a1,10
 237 011c 1B050500 		sext.w	a0,a0
 238 0120 97000000 		call	_Z8printIntiii@plt
 238      E7800000 
 239              	.LVL4:
 223:src/riscv.cpp ****         printString("\nUnexpected trap cause!\n");
 240              		.loc 1 223 9 is_stmt 1
 241              		.loc 1 223 20 is_stmt 0
 242 0128 17050000 		lla	a0,.LC3
 242      13050500 
 243 0130 97000000 		call	_Z11printStringPKc@plt
 243      E7800000 
 244              	.LVL5:
 245              	.L3:
 246              	.LBE51:
 224:src/riscv.cpp ****         // unexpected trap cause
 225:src/riscv.cpp ****     }
 226:src/riscv.cpp **** }
 247              		.loc 1 226 1
 248 0138 83308108 		ld	ra,136(sp)
 249              		.cfi_remember_state
 250              		.cfi_restore 1
 251 013c 03340108 		ld	s0,128(sp)
 252              		.cfi_restore 8
 253              		.cfi_def_cfa 2, 144
 254 0140 13010109 		addi	sp,sp,144
 255              		.cfi_def_cfa_offset 0
 256 0144 67800000 		jr	ra
 257              	.L4:
 258              		.cfi_restore_state
 259              	.LBB150:
 260              	.LBB52:
  39:src/riscv.cpp ****         w_sepc(sepc);
 261              		.loc 1 39 9 is_stmt 1
  39:src/riscv.cpp ****         w_sepc(sepc);
 262              		.loc 1 39 16 is_stmt 0
 263 0148 833784FA 		ld	a5,-88(s0)
  39:src/riscv.cpp ****         w_sepc(sepc);
 264              		.loc 1 39 21
GAS LISTING /tmp/ccMwoIU2.s 			page 13


 265 014c 93874700 		addi	a5,a5,4
  39:src/riscv.cpp ****         w_sepc(sepc);
 266              		.loc 1 39 14
 267 0150 2334F4FA 		sd	a5,-88(s0)
  40:src/riscv.cpp **** 
 268              		.loc 1 40 9 is_stmt 1
  40:src/riscv.cpp **** 
 269              		.loc 1 40 15 is_stmt 0
 270 0154 833784FA 		ld	a5,-88(s0)
 271              	.LVL6:
 272              	.LBB53:
 273              	.LBB54:
 107:src/../h/riscv.hpp **** }
 274              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 275              		.loc 2 107 65 is_stmt 0
 276              	#APP
 277              	# 107 "src/../h/riscv.hpp" 1
 278              		csrw sepc, a5
 279              	# 0 "" 2
 280              	.LVL7:
 281              	#NO_APP
 282              	.LBE54:
 283              	.LBE53:
  43:src/riscv.cpp ****         {
 284              		.loc 1 43 9 is_stmt 1
 285              	.LBB55:
  43:src/riscv.cpp ****         {
 286              		.loc 1 43 16 is_stmt 0
 287 015c 833704FB 		ld	a5,-80(s0)
  43:src/riscv.cpp ****         {
 288              		.loc 1 43 9
 289 0160 13071000 		li	a4,1
 290 0164 6384E706 		beq	a5,a4,.L23
 291              	.LBE55:
 292              	.LBE52:
 293              	.LBE150:
  59:src/riscv.cpp ****         {
 294              		.loc 1 59 14 is_stmt 1
 295              	.LBB151:
 296              	.LBB139:
 297              	.LBB130:
 298              	.LBB56:
 299 0168 13072000 		li	a4,2
 300 016c 6382E708 		beq	a5,a4,.L24
 301              	.LBE56:
 302              	.LBE130:
 303              	.LBE139:
 304              	.LBE151:
  74:src/riscv.cpp ****         {
 305              		.loc 1 74 14
 306              	.LBB152:
 307              	.LBB140:
 308              	.LBB131:
 309              	.LBB120:
 310              	.LBB57:
 311 0170 13071001 		li	a4,17
GAS LISTING /tmp/ccMwoIU2.s 			page 14


 312 0174 638CE708 		beq	a5,a4,.L25
 313              	.LBE57:
 314              	.LBE120:
 315              	.LBE131:
 316              	.LBE140:
 317              	.LBE152:
  90:src/riscv.cpp ****         {
 318              		.loc 1 90 14
 319              	.LBB153:
 320              	.LBB141:
 321              	.LBB132:
 322              	.LBB121:
 323              	.LBB111:
 324              	.LBB58:
 325 0178 13072001 		li	a4,18
 326 017c 638CE70A 		beq	a5,a4,.L26
 327              	.LBE58:
 328              	.LBE111:
 329              	.LBE121:
 330              	.LBE132:
 331              	.LBE141:
 332              	.LBE153:
 103:src/riscv.cpp ****         {
 333              		.loc 1 103 14
 334              	.LBB154:
 335              	.LBB142:
 336              	.LBB133:
 337              	.LBB122:
 338              	.LBB112:
 339              	.LBB103:
 340              	.LBB59:
 341 0180 13073001 		li	a4,19
 342 0184 638AE70C 		beq	a5,a4,.L27
 343              	.LBE59:
 344              	.LBE103:
 345              	.LBE112:
 346              	.LBE122:
 347              	.LBE133:
 348              	.LBE142:
 349              	.LBE154:
 120:src/riscv.cpp ****         {
 350              		.loc 1 120 14
 351              	.LBB155:
 352              	.LBB143:
 353              	.LBB134:
 354              	.LBB123:
 355              	.LBB113:
 356              	.LBB104:
 357              	.LBB96:
 358              	.LBB60:
 359 0188 13074001 		li	a4,20
 360 018c 638CE70E 		beq	a5,a4,.L28
 361              	.LBE60:
 362              	.LBE96:
 363              	.LBE104:
 364              	.LBE113:
 365              	.LBE123:
GAS LISTING /tmp/ccMwoIU2.s 			page 15


 366              	.LBE134:
 367              	.LBE143:
 368              	.LBE155:
 132:src/riscv.cpp ****         {
 369              		.loc 1 132 14
 370              	.LBB156:
 371              	.LBB144:
 372              	.LBB135:
 373              	.LBB124:
 374              	.LBB114:
 375              	.LBB105:
 376              	.LBB97:
 377              	.LBB87:
 378              	.LBB61:
 379 0190 13071002 		li	a4,33
 380 0194 6380E712 		beq	a5,a4,.L29
 381              	.LBE61:
 382              	.LBE87:
 383              	.LBE97:
 384              	.LBE105:
 385              	.LBE114:
 386              	.LBE124:
 387              	.LBE135:
 388              	.LBE144:
 389              	.LBE156:
 145:src/riscv.cpp ****         {
 390              		.loc 1 145 14
 391              	.LBB157:
 392              	.LBB145:
 393              	.LBB136:
 394              	.LBB125:
 395              	.LBB115:
 396              	.LBB106:
 397              	.LBB98:
 398              	.LBB88:
 399              	.LBB78:
 400              	.LBB62:
 401 0198 13072002 		li	a4,34
 402 019c 638CE712 		beq	a5,a4,.L30
 403              	.LBE62:
 404              	.LBE78:
 405              	.LBE88:
 406              	.LBE98:
 407              	.LBE106:
 408              	.LBE115:
 409              	.LBE125:
 410              	.LBE136:
 411              	.LBE145:
 412              	.LBE157:
 158:src/riscv.cpp ****         {
 413              		.loc 1 158 14
 414              	.LBB158:
 415              	.LBB146:
 416              	.LBB137:
 417              	.LBB126:
 418              	.LBB116:
 419              	.LBB107:
GAS LISTING /tmp/ccMwoIU2.s 			page 16


 420              	.LBB99:
 421              	.LBB89:
 422              	.LBB79:
 423              	.LBB74:
 424              	.LBB63:
 425 01a0 13073002 		li	a4,35
 426 01a4 6386E714 		beq	a5,a4,.L31
 427              	.LBE63:
 428              	.LBE74:
 429              	.LBE79:
 430              	.LBE89:
 431              	.LBE99:
 432              	.LBE107:
 433              	.LBE116:
 434              	.LBE126:
 435              	.LBE137:
 436              	.LBE146:
 437              	.LBE158:
 174:src/riscv.cpp ****         {
 438              		.loc 1 174 14
 439              	.LBB159:
 440              	.LBB147:
 441              	.LBB138:
 442              	.LBB127:
 443              	.LBB117:
 444              	.LBB108:
 445              	.LBB100:
 446              	.LBB90:
 447              	.LBB80:
 448              	.LBB75:
 449              	.LBB71:
 450              	.LBB64:
 451 01a8 13074002 		li	a4,36
 452 01ac E396E7F8 		bne	a5,a4,.L3
 453              	.LBB65:
 176:src/riscv.cpp **** 
 454              		.loc 1 176 13
 455              	.LVL8:
 178:src/riscv.cpp **** 
 456              		.loc 1 178 13
 178:src/riscv.cpp **** 
 457              		.loc 1 178 41 is_stmt 0
 458 01b0 033584FB 		ld	a0,-72(s0)
 459 01b4 97000000 		call	_ZN4_sem9semSignalEPS_@plt
 459      E7800000 
 460              	.LVL9:
 180:src/riscv.cpp **** 
 461              		.loc 1 180 13 is_stmt 1
 180:src/riscv.cpp **** 
 462              		.loc 1 180 54 is_stmt 0
 463              	#APP
 464              	# 180 "src/riscv.cpp" 1
 465              		mv a5, a0
 466              	# 0 "" 2
 467              	.LVL10:
 183:src/riscv.cpp ****         }
 468              		.loc 1 183 13 is_stmt 1
GAS LISTING /tmp/ccMwoIU2.s 			page 17


 183:src/riscv.cpp ****         }
 469              		.loc 1 183 55 is_stmt 0
 470              	#NO_APP
 471 01c0 833784F9 		ld	a5,-104(s0)
 183:src/riscv.cpp ****         }
 472              		.loc 1 183 59
 473              	#APP
 474              	# 183 "src/riscv.cpp" 1
 475              		sd a0, 10 * 8(a5)
 476              	# 0 "" 2
 477              	#NO_APP
 478              	.LBE65:
 479 01c8 6FF01FF7 		j	.L3
 480              	.L23:
 481              	.LBE64:
 482              	.LBE71:
 483              	.LBE75:
 484              	.LBE80:
 485              	.LBE90:
 486              	.LBE100:
 487              	.LBE108:
 488              	.LBE117:
 489              	.LBE127:
 490              	.LBB128:
  46:src/riscv.cpp **** 
 491              		.loc 1 46 13 is_stmt 1
 492              	.LVL11:
  48:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
 493              		.loc 1 48 13
  48:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
 494              		.loc 1 48 62 is_stmt 0
 495 01cc 033584FB 		ld	a0,-72(s0)
 496 01d0 97000000 		call	_ZN15MemoryAllocator14convert2BlocksEm@plt
 496      E7800000 
 497              	.LVL12:
  49:src/riscv.cpp **** 
 498              		.loc 1 49 13 is_stmt 1
  49:src/riscv.cpp **** 
 499              		.loc 1 49 54 is_stmt 0
 500 01d8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 500      E7800000 
 501              	.LVL13:
  52:src/riscv.cpp **** 
 502              		.loc 1 52 13 is_stmt 1
  52:src/riscv.cpp **** 
 503              		.loc 1 52 54 is_stmt 0
 504              	#APP
 505              	# 52 "src/riscv.cpp" 1
 506              		mv a5, a0
 507              	# 0 "" 2
 508              	.LVL14:
  55:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 509              		.loc 1 55 13 is_stmt 1
  55:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 510              		.loc 1 55 55 is_stmt 0
 511              	#NO_APP
 512 01e4 833784F9 		ld	a5,-104(s0)
GAS LISTING /tmp/ccMwoIU2.s 			page 18


  55:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 513              		.loc 1 55 59
 514              	#APP
 515              	# 55 "src/riscv.cpp" 1
 516              		sd a0, 10 * 8(a5)
 517              	# 0 "" 2
 518              	#NO_APP
 519              	.LBE128:
 520 01ec 6FF0DFF4 		j	.L3
 521              	.L24:
 522              	.LBB129:
 523              	.LBB118:
  62:src/riscv.cpp **** 
 524              		.loc 1 62 13 is_stmt 1
 525              	.LVL15:
  64:src/riscv.cpp **** 
 526              		.loc 1 64 13
  64:src/riscv.cpp **** 
 527              		.loc 1 64 51 is_stmt 0
 528 01f0 033584FB 		ld	a0,-72(s0)
 529 01f4 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 529      E7800000 
 530              	.LVL16:
  67:src/riscv.cpp **** 
 531              		.loc 1 67 13 is_stmt 1
  67:src/riscv.cpp **** 
 532              		.loc 1 67 54 is_stmt 0
 533              	#APP
 534              	# 67 "src/riscv.cpp" 1
 535              		mv a5, a0
 536              	# 0 "" 2
 537              	.LVL17:
  70:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 538              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 539              		.loc 1 70 55 is_stmt 0
 540              	#NO_APP
 541 0200 833784F9 		ld	a5,-104(s0)
  70:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 542              		.loc 1 70 59
 543              	#APP
 544              	# 70 "src/riscv.cpp" 1
 545              		sd a0, 10 * 8(a5)
 546              	# 0 "" 2
 547              	#NO_APP
 548              	.LBE118:
 549 0208 6FF01FF3 		j	.L3
 550              	.L25:
 551              	.LBB119:
 552              	.LBB109:
  76:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[2]);
 553              		.loc 1 76 13 is_stmt 1
 554              	.LVL18:
  77:src/riscv.cpp ****             void* arg = reinterpret_cast<void *>(a[3]);
 555              		.loc 1 77 13
  78:src/riscv.cpp ****             void* stack_space = reinterpret_cast<void *>(a[4]);
 556              		.loc 1 78 13
GAS LISTING /tmp/ccMwoIU2.s 			page 19


  79:src/riscv.cpp **** 
 557              		.loc 1 79 13
  81:src/riscv.cpp **** 
 558              		.loc 1 81 13
  81:src/riscv.cpp **** 
 559              		.loc 1 81 47 is_stmt 0
 560 020c 833604FD 		ld	a3,-48(s0)
 561 0210 033684FC 		ld	a2,-56(s0)
 562 0214 833504FC 		ld	a1,-64(s0)
 563 0218 033584FB 		ld	a0,-72(s0)
 564 021c 97000000 		call	_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_@plt
 564      E7800000 
 565              	.LVL19:
  84:src/riscv.cpp **** 
 566              		.loc 1 84 13 is_stmt 1
  84:src/riscv.cpp **** 
 567              		.loc 1 84 54 is_stmt 0
 568              	#APP
 569              	# 84 "src/riscv.cpp" 1
 570              		mv a5, a0
 571              	# 0 "" 2
 572              	.LVL20:
  87:src/riscv.cpp ****         }
 573              		.loc 1 87 13 is_stmt 1
  87:src/riscv.cpp ****         }
 574              		.loc 1 87 55 is_stmt 0
 575              	#NO_APP
 576 0228 833784F9 		ld	a5,-104(s0)
  87:src/riscv.cpp ****         }
 577              		.loc 1 87 59
 578              	#APP
 579              	# 87 "src/riscv.cpp" 1
 580              		sd a0, 10 * 8(a5)
 581              	# 0 "" 2
 582              	#NO_APP
 583              	.LBE109:
 584 0230 6FF09FF0 		j	.L3
 585              	.L26:
 586              	.LBB110:
 587              	.LBB101:
  92:src/riscv.cpp **** 
 588              		.loc 1 92 13 is_stmt 1
  92:src/riscv.cpp **** 
 589              		.loc 1 92 31 is_stmt 0
 590 0234 97070000 		la	a5,_ZN7_thread7runningE
 590      83B70700 
 591 023c 83B70700 		ld	a5,0(a5)
  92:src/riscv.cpp **** 
 592              		.loc 1 92 40
 593 0240 13071000 		li	a4,1
 594 0244 A384E700 		sb	a4,9(a5)
  94:src/riscv.cpp **** 
 595              		.loc 1 94 13 is_stmt 1
  94:src/riscv.cpp **** 
 596              		.loc 1 94 36 is_stmt 0
 597 0248 97000000 		call	_ZN7_thread14threadDispatchEv@plt
 597      E7800000 
GAS LISTING /tmp/ccMwoIU2.s 			page 20


 598              	.LVL21:
  97:src/riscv.cpp **** 
 599              		.loc 1 97 13 is_stmt 1
 100:src/riscv.cpp ****         }
 600              		.loc 1 100 13
 100:src/riscv.cpp ****         }
 601              		.loc 1 100 54 is_stmt 0
 602              	#APP
 603              	# 100 "src/riscv.cpp" 1
 604              		mv a5, a0
 605              	# 0 "" 2
 606              	.LVL22:
 607              	#NO_APP
 608              	.LBE101:
 609 0254 6FF05FEE 		j	.L3
 610              	.L27:
 611              	.LBB102:
 108:src/riscv.cpp **** 
 612              		.loc 1 108 13 is_stmt 1
 108:src/riscv.cpp **** 
 613              		.loc 1 108 31 is_stmt 0
 614 0258 97070000 		la	a5,_ZN7_thread7runningE
 614      83B70700 
 615 0260 83B70700 		ld	a5,0(a5)
 108:src/riscv.cpp **** 
 616              		.loc 1 108 41
 617 0264 23B80702 		sd	zero,48(a5)
 110:src/riscv.cpp **** 
 618              		.loc 1 110 13 is_stmt 1
 110:src/riscv.cpp **** 
 619              		.loc 1 110 36 is_stmt 0
 620 0268 97000000 		call	_ZN7_thread14threadDispatchEv@plt
 620      E7800000 
 621              	.LVL23:
 114:src/riscv.cpp ****             w_sepc(sepc);
 622              		.loc 1 114 13 is_stmt 1
 114:src/riscv.cpp ****             w_sepc(sepc);
 623              		.loc 1 114 22 is_stmt 0
 624 0270 833704FA 		ld	a5,-96(s0)
 625              	.LVL24:
 626              	.LBB91:
 627              	.LBB92:
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 628              		.loc 2 175 5 is_stmt 1
 629              		.loc 2 175 77 is_stmt 0
 630              	#APP
 631              	# 175 "src/../h/riscv.hpp" 1
 176              	}
 632              		csrw sstatus, a5
 633              	# 0 "" 2
 634              	.LVL25:
 635              	#NO_APP
 636              	.LBE92:
GAS LISTING /tmp/ccMwoIU2.s 			page 21


 637              	.LBE91:
 115:src/riscv.cpp **** 
 638              		.loc 1 115 13 is_stmt 1
 115:src/riscv.cpp **** 
 639              		.loc 1 115 19 is_stmt 0
 640 0278 833784FA 		ld	a5,-88(s0)
 641              	.LVL26:
 642              	.LBB93:
 643              	.LBB94:
 107:src/../h/riscv.hpp **** }
 644              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 645              		.loc 2 107 65 is_stmt 0
 646              	#APP
 647              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 648              		csrw sepc, a5
 649              	# 0 "" 2
 650              		.loc 2 108 1
 651              	#NO_APP
 652 0280 6FF09FEB 		j	.L3
 653              	.LVL27:
 654              	.L28:
 655              	.LBE94:
 656              	.LBE93:
 657              	.LBB95:
 658              	.LBB81:
 122:src/riscv.cpp **** 
 659              		.loc 1 122 13 is_stmt 1
 122:src/riscv.cpp **** 
 660              		.loc 1 122 61 is_stmt 0
 661 0284 833784FB 		ld	a5,-72(s0)
 662              	.LVL28:
 124:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 663              		.loc 1 124 13 is_stmt 1
 124:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 664              		.loc 1 124 26 is_stmt 0
 665 0288 03C79700 		lbu	a4,9(a5)
 124:src/riscv.cpp ****                 _sem::semWait(handle->semaphore);
 666              		.loc 1 124 13
 667 028c 630C0700 		beqz	a4,.L32
 668              	.LVL29:
 669              	.L14:
 128:src/riscv.cpp ****             w_sepc(sepc);
 670              		.loc 1 128 13 is_stmt 1
 128:src/riscv.cpp ****             w_sepc(sepc);
 671              		.loc 1 128 22 is_stmt 0
 672 0290 833704FA 		ld	a5,-96(s0)
 673              	.LVL30:
 674              	.LBB82:
 675              	.LBB83:
 175:src/../h/riscv.hpp **** }
 676              		.loc 2 175 5 is_stmt 1
 175:src/../h/riscv.hpp **** }
 677              		.loc 2 175 77 is_stmt 0
 678              	#APP
 679              	# 175 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccMwoIU2.s 			page 22


 680              		csrw sstatus, a5
 681              	# 0 "" 2
 682              	.LVL31:
 683              	#NO_APP
 684              	.LBE83:
 685              	.LBE82:
 129:src/riscv.cpp ****         }
 686              		.loc 1 129 13 is_stmt 1
 129:src/riscv.cpp ****         }
 687              		.loc 1 129 19 is_stmt 0
 688 0298 833784FA 		ld	a5,-88(s0)
 689              	.LVL32:
 690              	.LBB84:
 691              	.LBB85:
 107:src/../h/riscv.hpp **** }
 692              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 693              		.loc 2 107 65 is_stmt 0
 694              	#APP
 695              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 696              		csrw sepc, a5
 697              	# 0 "" 2
 698              		.loc 2 108 1
 699              	#NO_APP
 700 02a0 6FF09FE9 		j	.L3
 701              	.LVL33:
 702              	.L32:
 703              	.LBE85:
 704              	.LBE84:
 125:src/riscv.cpp **** 
 705              		.loc 1 125 17 is_stmt 1
 125:src/riscv.cpp **** 
 706              		.loc 1 125 30 is_stmt 0
 707 02a4 03B50704 		ld	a0,64(a5)
 708 02a8 97000000 		call	_ZN4_sem7semWaitEPS_@plt
 708      E7800000 
 709              	.LVL34:
 710 02b0 6FF01FFE 		j	.L14
 711              	.L29:
 712              	.LBE81:
 713              	.LBB86:
 714              	.LBB76:
 134:src/riscv.cpp ****             unsigned init = (unsigned)a[2];
 715              		.loc 1 134 13 is_stmt 1
 716              	.LVL35:
 135:src/riscv.cpp **** 
 717              		.loc 1 135 13
 137:src/riscv.cpp **** 
 718              		.loc 1 137 13
 137:src/riscv.cpp **** 
 719              		.loc 1 137 39 is_stmt 0
 720 02b4 832504FC 		lw	a1,-64(s0)
 721 02b8 033584FB 		ld	a0,-72(s0)
 722 02bc 97000000 		call	_ZN4_sem7semOpenEPPS_j@plt
 722      E7800000 
 723              	.LVL36:
GAS LISTING /tmp/ccMwoIU2.s 			page 23


 139:src/riscv.cpp **** 
 724              		.loc 1 139 13 is_stmt 1
 139:src/riscv.cpp **** 
 725              		.loc 1 139 54 is_stmt 0
 726              	#APP
 727              	# 139 "src/riscv.cpp" 1
 728              		mv a5, a0
 729              	# 0 "" 2
 730              	.LVL37:
 142:src/riscv.cpp ****         }
 731              		.loc 1 142 13 is_stmt 1
 142:src/riscv.cpp ****         }
 732              		.loc 1 142 55 is_stmt 0
 733              	#NO_APP
 734 02c8 833784F9 		ld	a5,-104(s0)
 142:src/riscv.cpp ****         }
 735              		.loc 1 142 59
 736              	#APP
 737              	# 142 "src/riscv.cpp" 1
 738              		sd a0, 10 * 8(a5)
 739              	# 0 "" 2
 740              	#NO_APP
 741              	.LBE76:
 742 02d0 6FF09FE6 		j	.L3
 743              	.L30:
 744              	.LBB77:
 745              	.LBB72:
 147:src/riscv.cpp **** 
 746              		.loc 1 147 13 is_stmt 1
 747              	.LVL38:
 150:src/riscv.cpp **** 
 748              		.loc 1 150 13
 150:src/riscv.cpp **** 
 749              		.loc 1 150 40 is_stmt 0
 750 02d4 033584FB 		ld	a0,-72(s0)
 751 02d8 97000000 		call	_ZN4_sem8semCloseEPS_@plt
 751      E7800000 
 752              	.LVL39:
 152:src/riscv.cpp **** 
 753              		.loc 1 152 13 is_stmt 1
 152:src/riscv.cpp **** 
 754              		.loc 1 152 54 is_stmt 0
 755              	#APP
 756              	# 152 "src/riscv.cpp" 1
 757              		mv a5, a0
 758              	# 0 "" 2
 759              	.LVL40:
 155:src/riscv.cpp ****         }
 760              		.loc 1 155 13 is_stmt 1
 155:src/riscv.cpp ****         }
 761              		.loc 1 155 55 is_stmt 0
 762              	#NO_APP
 763 02e4 833784F9 		ld	a5,-104(s0)
 155:src/riscv.cpp ****         }
 764              		.loc 1 155 59
 765              	#APP
 766              	# 155 "src/riscv.cpp" 1
GAS LISTING /tmp/ccMwoIU2.s 			page 24


 767              		sd a0, 10 * 8(a5)
 768              	# 0 "" 2
 769              	#NO_APP
 770              	.LBE72:
 771 02ec 6FF0DFE4 		j	.L3
 772              	.L31:
 773              	.LBB73:
 774              	.LBB66:
 160:src/riscv.cpp **** 
 775              		.loc 1 160 13 is_stmt 1
 776              	.LVL41:
 162:src/riscv.cpp **** 
 777              		.loc 1 162 13
 162:src/riscv.cpp **** 
 778              		.loc 1 162 39 is_stmt 0
 779 02f0 033584FB 		ld	a0,-72(s0)
 780 02f4 97000000 		call	_ZN4_sem7semWaitEPS_@plt
 780      E7800000 
 781              	.LVL42:
 164:src/riscv.cpp **** 
 782              		.loc 1 164 13 is_stmt 1
 164:src/riscv.cpp **** 
 783              		.loc 1 164 54 is_stmt 0
 784              	#APP
 785              	# 164 "src/riscv.cpp" 1
 786              		mv a5, a0
 787              	# 0 "" 2
 788              	.LVL43:
 167:src/riscv.cpp **** 
 789              		.loc 1 167 13 is_stmt 1
 167:src/riscv.cpp **** 
 790              		.loc 1 167 55 is_stmt 0
 791              	#NO_APP
 792 0300 833784F9 		ld	a5,-104(s0)
 167:src/riscv.cpp **** 
 793              		.loc 1 167 59
 794              	#APP
 795              	# 167 "src/riscv.cpp" 1
 170:src/riscv.cpp ****             w_sepc(sepc);
 796              		sd a0, 10 * 8(a5)
 797              	# 0 "" 2
 798              		.loc 1 170 13 is_stmt 1
 170:src/riscv.cpp ****             w_sepc(sepc);
 799              		.loc 1 170 22 is_stmt 0
 800              	#NO_APP
 801 0308 833704FA 		ld	a5,-96(s0)
 802              	.LVL44:
 803              	.LBB67:
 804              	.LBB68:
 175:src/../h/riscv.hpp **** }
 805              		.loc 2 175 5 is_stmt 1
 175:src/../h/riscv.hpp **** }
 806              		.loc 2 175 77 is_stmt 0
 807              	#APP
 808              	# 175 "src/../h/riscv.hpp" 1
 809              		csrw sstatus, a5
 810              	# 0 "" 2
GAS LISTING /tmp/ccMwoIU2.s 			page 25


 811              	.LVL45:
 812              	#NO_APP
 813              	.LBE68:
 814              	.LBE67:
 171:src/riscv.cpp ****         }
 815              		.loc 1 171 13 is_stmt 1
 171:src/riscv.cpp ****         }
 816              		.loc 1 171 19 is_stmt 0
 817 0310 833784FA 		ld	a5,-88(s0)
 818              	.LVL46:
 819              	.LBB69:
 820              	.LBB70:
 107:src/../h/riscv.hpp **** }
 821              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 822              		.loc 2 107 65 is_stmt 0
 823              	#APP
 824              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 825              		csrw sepc, a5
 826              	# 0 "" 2
 827              		.loc 2 108 1
 828              	#NO_APP
 829 0318 6FF01FE2 		j	.L3
 830              	.LVL47:
 831              	.L21:
 832              	.LBE70:
 833              	.LBE69:
 834              	.LBE66:
 835              	.LBE73:
 836              	.LBE77:
 837              	.LBE86:
 838              	.LBE95:
 839              	.LBE102:
 840              	.LBE110:
 841              	.LBE119:
 842              	.LBE129:
 843              	.LBE138:
 844              	.LBE147:
 192:src/riscv.cpp ****         /*
 845              		.loc 1 192 9 is_stmt 1
 846              	.LBB148:
 847              	.LBB149:
 141:src/../h/riscv.hpp **** }
 848              		.loc 2 141 5
 141:src/../h/riscv.hpp **** }
 849              		.loc 2 141 64 is_stmt 0
 850 031c 93072000 		li	a5,2
 851              	#APP
 852              	# 141 "src/../h/riscv.hpp" 1
 142:src/../h/riscv.hpp **** 
 853              		csrc sip, a5
 854              	# 0 "" 2
 855              		.loc 2 142 1
 856              	#NO_APP
 857 0324 6FF05FE1 		j	.L3
 858              	.LVL48:
GAS LISTING /tmp/ccMwoIU2.s 			page 26


 859              	.L22:
 860              	.LBE149:
 861              	.LBE148:
 213:src/riscv.cpp **** 
 862              		.loc 1 213 9 is_stmt 1
 213:src/riscv.cpp **** 
 863              		.loc 1 213 24 is_stmt 0
 864 0328 97000000 		call	console_handler@plt
 864      E7800000 
 865              	.LVL49:
 866 0330 6FF09FE0 		j	.L3
 867              	.LBE159:
 868              		.cfi_endproc
 869              	.LFE17:
 871              	.Letext0:
 872              		.file 3 "src/../h/../lib/hw.h"
 873              		.file 4 "src/../h/../h/thread.hpp"
 874              		.file 5 "src/../h/../h/sem.hpp"
 875              		.file 6 "src/../h/../h/MemoryAllocator.hpp"
 876              		.file 7 "src/../h/syscall_c.hpp"
 877              		.file 8 "src/../h/../h/../test/printing.hpp"
 878              		.file 9 "src/../lib/console.h"
GAS LISTING /tmp/ccMwoIU2.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccMwoIU2.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccMwoIU2.s:13     .text:0000000000000000 .L0 
     /tmp/ccMwoIU2.s:14     .text:0000000000000000 .L0 
     /tmp/ccMwoIU2.s:15     .text:0000000000000004 .L0 
     /tmp/ccMwoIU2.s:17     .text:0000000000000008 .L0 
     /tmp/ccMwoIU2.s:19     .text:000000000000000c .L0 
     /tmp/ccMwoIU2.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:8      .text:000000000000000c .L0 
     /tmp/ccMwoIU2.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:9      .text:0000000000000010 .L0 
     /tmp/ccMwoIU2.s:33     .text:0000000000000014 .L0 
     /tmp/ccMwoIU2.s:34     .text:0000000000000018 .L0 
     /tmp/ccMwoIU2.s:35     .text:0000000000000018 .L0 
     /tmp/ccMwoIU2.s:37     .text:000000000000001c .L0 
     /tmp/ccMwoIU2.s:39     .text:0000000000000020 .L0 
     /tmp/ccMwoIU2.s:59     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccMwoIU2.s:62     .text:0000000000000020 .L0 
     /tmp/ccMwoIU2.s:63     .text:0000000000000020 .L0 
     /tmp/ccMwoIU2.s:64     .text:0000000000000024 .L0 
     /tmp/ccMwoIU2.s:67     .text:000000000000002c .L0 
     /tmp/ccMwoIU2.s:68     .text:000000000000002c .L0 
     /tmp/ccMwoIU2.s:70     .text:0000000000000030 .L0 
     /tmp/ccMwoIU2.s:72     .text:0000000000000030 .L0 
     /tmp/ccMwoIU2.s:73     .text:0000000000000030 .L0 
       src/riscv.cpp:15     .text:0000000000000030 .L0 
     /tmp/ccMwoIU2.s:79     .text:0000000000000034 .L0 
       src/riscv.cpp:16     .text:0000000000000034 .L0 
     /tmp/ccMwoIU2.s:84     .text:0000000000000038 .L0 
       src/riscv.cpp:17     .text:0000000000000038 .L0 
     /tmp/ccMwoIU2.s:89     .text:000000000000003c .L0 
       src/riscv.cpp:18     .text:000000000000003c .L0 
     /tmp/ccMwoIU2.s:94     .text:0000000000000040 .L0 
       src/riscv.cpp:19     .text:0000000000000040 .L0 
     /tmp/ccMwoIU2.s:99     .text:0000000000000044 .L0 
       src/riscv.cpp:20     .text:0000000000000044 .L0 
     /tmp/ccMwoIU2.s:104    .text:0000000000000048 .L0 
       src/riscv.cpp:21     .text:0000000000000048 .L0 
     /tmp/ccMwoIU2.s:109    .text:000000000000004c .L0 
       src/riscv.cpp:22     .text:000000000000004c .L0 
     /tmp/ccMwoIU2.s:118    .text:0000000000000050 .L0 
     /tmp/ccMwoIU2.s:119    .text:0000000000000050 .L0 
     /tmp/ccMwoIU2.s:120    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000050 .L0 
     /tmp/ccMwoIU2.s:128    .text:0000000000000058 .L0 
     /tmp/ccMwoIU2.s:129    .text:0000000000000058 .L0 
     /tmp/ccMwoIU2.s:133    .text:000000000000005c .L0 
     /tmp/ccMwoIU2.s:137    .text:0000000000000060 .L0 
     /tmp/ccMwoIU2.s:138    .text:0000000000000060 .L0 
     /tmp/ccMwoIU2.s:139    .text:0000000000000060 .L0 
  src/../h/riscv.hpp:169    .text:0000000000000060 .L0 
     /tmp/ccMwoIU2.s:147    .text:0000000000000068 .L0 
     /tmp/ccMwoIU2.s:148    .text:0000000000000068 .L0 
     /tmp/ccMwoIU2.s:152    .text:000000000000006c .L0 
     /tmp/ccMwoIU2.s:154    .text:0000000000000070 .L0 
     /tmp/ccMwoIU2.s:155    .text:0000000000000070 .L0 
GAS LISTING /tmp/ccMwoIU2.s 			page 28


       src/riscv.cpp:29     .text:0000000000000070 .L0 
     /tmp/ccMwoIU2.s:165    .text:0000000000000078 .L0 
     /tmp/ccMwoIU2.s:166    .text:0000000000000078 .L0 
     /tmp/ccMwoIU2.s:167    .text:0000000000000078 .L0 
  src/../h/riscv.hpp:89     .text:0000000000000078 .L0 
     /tmp/ccMwoIU2.s:175    .text:0000000000000080 .L0 
     /tmp/ccMwoIU2.s:176    .text:0000000000000080 .L0 
     /tmp/ccMwoIU2.s:180    .text:0000000000000084 .L0 
     /tmp/ccMwoIU2.s:183    .text:0000000000000088 .L0 
     /tmp/ccMwoIU2.s:184    .text:0000000000000088 .L0 
     /tmp/ccMwoIU2.s:186    .text:000000000000008c .L0 
     /tmp/ccMwoIU2.s:189    .text:0000000000000094 .L0 
     /tmp/ccMwoIU2.s:191    .text:0000000000000098 .L0 
     /tmp/ccMwoIU2.s:194    .text:00000000000000a0 .L0 
     /tmp/ccMwoIU2.s:195    .text:00000000000000a0 .L0 
     /tmp/ccMwoIU2.s:197    .text:00000000000000a4 .L0 
     /tmp/ccMwoIU2.s:202    .text:00000000000000b4 .L0 
     /tmp/ccMwoIU2.s:203    .text:00000000000000b4 .L0 
     /tmp/ccMwoIU2.s:205    .text:00000000000000b8 .L0 
     /tmp/ccMwoIU2.s:210    .text:00000000000000c8 .L0 
     /tmp/ccMwoIU2.s:211    .text:00000000000000c8 .L0 
     /tmp/ccMwoIU2.s:215    .text:00000000000000d8 .L0 
     /tmp/ccMwoIU2.s:216    .text:00000000000000d8 .L0 
     /tmp/ccMwoIU2.s:223    .text:00000000000000f0 .L0 
     /tmp/ccMwoIU2.s:224    .text:00000000000000f0 .L0 
     /tmp/ccMwoIU2.s:228    .text:0000000000000100 .L0 
     /tmp/ccMwoIU2.s:229    .text:0000000000000100 .L0 
     /tmp/ccMwoIU2.s:233    .text:0000000000000110 .L0 
     /tmp/ccMwoIU2.s:234    .text:0000000000000110 .L0 
     /tmp/ccMwoIU2.s:241    .text:0000000000000128 .L0 
     /tmp/ccMwoIU2.s:242    .text:0000000000000128 .L0 
     /tmp/ccMwoIU2.s:248    .text:0000000000000138 .L0 
     /tmp/ccMwoIU2.s:249    .text:000000000000013c .L0 
     /tmp/ccMwoIU2.s:250    .text:000000000000013c .L0 
     /tmp/ccMwoIU2.s:252    .text:0000000000000140 .L0 
     /tmp/ccMwoIU2.s:253    .text:0000000000000140 .L0 
     /tmp/ccMwoIU2.s:255    .text:0000000000000144 .L0 
     /tmp/ccMwoIU2.s:258    .text:0000000000000148 .L0 
     /tmp/ccMwoIU2.s:262    .text:0000000000000148 .L0 
     /tmp/ccMwoIU2.s:263    .text:0000000000000148 .L0 
     /tmp/ccMwoIU2.s:265    .text:000000000000014c .L0 
     /tmp/ccMwoIU2.s:267    .text:0000000000000150 .L0 
     /tmp/ccMwoIU2.s:269    .text:0000000000000154 .L0 
     /tmp/ccMwoIU2.s:270    .text:0000000000000154 .L0 
     /tmp/ccMwoIU2.s:275    .text:0000000000000158 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000158 .L0 
     /tmp/ccMwoIU2.s:286    .text:000000000000015c .L0 
     /tmp/ccMwoIU2.s:287    .text:000000000000015c .L0 
     /tmp/ccMwoIU2.s:289    .text:0000000000000160 .L0 
     /tmp/ccMwoIU2.s:299    .text:0000000000000168 .L0 
     /tmp/ccMwoIU2.s:311    .text:0000000000000170 .L0 
     /tmp/ccMwoIU2.s:325    .text:0000000000000178 .L0 
     /tmp/ccMwoIU2.s:341    .text:0000000000000180 .L0 
     /tmp/ccMwoIU2.s:359    .text:0000000000000188 .L0 
     /tmp/ccMwoIU2.s:379    .text:0000000000000190 .L0 
     /tmp/ccMwoIU2.s:401    .text:0000000000000198 .L0 
     /tmp/ccMwoIU2.s:425    .text:00000000000001a0 .L0 
GAS LISTING /tmp/ccMwoIU2.s 			page 29


     /tmp/ccMwoIU2.s:451    .text:00000000000001a8 .L0 
     /tmp/ccMwoIU2.s:456    .text:00000000000001b0 .L0 
     /tmp/ccMwoIU2.s:457    .text:00000000000001b0 .L0 
     /tmp/ccMwoIU2.s:458    .text:00000000000001b0 .L0 
     /tmp/ccMwoIU2.s:462    .text:00000000000001bc .L0 
       src/riscv.cpp:180    .text:00000000000001bc .L0 
     /tmp/ccMwoIU2.s:469    .text:00000000000001c0 .L0 
     /tmp/ccMwoIU2.s:471    .text:00000000000001c0 .L0 
       src/riscv.cpp:183    .text:00000000000001c4 .L0 
     /tmp/ccMwoIU2.s:493    .text:00000000000001cc .L0 
     /tmp/ccMwoIU2.s:494    .text:00000000000001cc .L0 
     /tmp/ccMwoIU2.s:495    .text:00000000000001cc .L0 
     /tmp/ccMwoIU2.s:499    .text:00000000000001d8 .L0 
     /tmp/ccMwoIU2.s:500    .text:00000000000001d8 .L0 
     /tmp/ccMwoIU2.s:503    .text:00000000000001e0 .L0 
       src/riscv.cpp:52     .text:00000000000001e0 .L0 
     /tmp/ccMwoIU2.s:510    .text:00000000000001e4 .L0 
     /tmp/ccMwoIU2.s:512    .text:00000000000001e4 .L0 
       src/riscv.cpp:55     .text:00000000000001e8 .L0 
     /tmp/ccMwoIU2.s:526    .text:00000000000001f0 .L0 
     /tmp/ccMwoIU2.s:527    .text:00000000000001f0 .L0 
     /tmp/ccMwoIU2.s:528    .text:00000000000001f0 .L0 
     /tmp/ccMwoIU2.s:532    .text:00000000000001fc .L0 
       src/riscv.cpp:67     .text:00000000000001fc .L0 
     /tmp/ccMwoIU2.s:539    .text:0000000000000200 .L0 
     /tmp/ccMwoIU2.s:541    .text:0000000000000200 .L0 
       src/riscv.cpp:70     .text:0000000000000204 .L0 
     /tmp/ccMwoIU2.s:555    .text:000000000000020c .L0 
     /tmp/ccMwoIU2.s:556    .text:000000000000020c .L0 
     /tmp/ccMwoIU2.s:557    .text:000000000000020c .L0 
     /tmp/ccMwoIU2.s:558    .text:000000000000020c .L0 
     /tmp/ccMwoIU2.s:559    .text:000000000000020c .L0 
     /tmp/ccMwoIU2.s:560    .text:000000000000020c .L0 
     /tmp/ccMwoIU2.s:567    .text:0000000000000224 .L0 
       src/riscv.cpp:84     .text:0000000000000224 .L0 
     /tmp/ccMwoIU2.s:574    .text:0000000000000228 .L0 
     /tmp/ccMwoIU2.s:576    .text:0000000000000228 .L0 
       src/riscv.cpp:87     .text:000000000000022c .L0 
     /tmp/ccMwoIU2.s:589    .text:0000000000000234 .L0 
     /tmp/ccMwoIU2.s:590    .text:0000000000000234 .L0 
     /tmp/ccMwoIU2.s:593    .text:0000000000000240 .L0 
     /tmp/ccMwoIU2.s:596    .text:0000000000000248 .L0 
     /tmp/ccMwoIU2.s:597    .text:0000000000000248 .L0 
     /tmp/ccMwoIU2.s:600    .text:0000000000000250 .L0 
     /tmp/ccMwoIU2.s:601    .text:0000000000000250 .L0 
       src/riscv.cpp:100    .text:0000000000000250 .L0 
     /tmp/ccMwoIU2.s:613    .text:0000000000000258 .L0 
     /tmp/ccMwoIU2.s:614    .text:0000000000000258 .L0 
     /tmp/ccMwoIU2.s:617    .text:0000000000000264 .L0 
     /tmp/ccMwoIU2.s:619    .text:0000000000000268 .L0 
     /tmp/ccMwoIU2.s:620    .text:0000000000000268 .L0 
     /tmp/ccMwoIU2.s:623    .text:0000000000000270 .L0 
     /tmp/ccMwoIU2.s:624    .text:0000000000000270 .L0 
     /tmp/ccMwoIU2.s:629    .text:0000000000000274 .L0 
  src/../h/riscv.hpp:175    .text:0000000000000274 .L0 
     /tmp/ccMwoIU2.s:639    .text:0000000000000278 .L0 
     /tmp/ccMwoIU2.s:640    .text:0000000000000278 .L0 
GAS LISTING /tmp/ccMwoIU2.s 			page 30


     /tmp/ccMwoIU2.s:645    .text:000000000000027c .L0 
  src/../h/riscv.hpp:107    .text:000000000000027c .L0 
     /tmp/ccMwoIU2.s:652    .text:0000000000000280 .L0 
     /tmp/ccMwoIU2.s:660    .text:0000000000000284 .L0 
     /tmp/ccMwoIU2.s:661    .text:0000000000000284 .L0 
     /tmp/ccMwoIU2.s:664    .text:0000000000000288 .L0 
     /tmp/ccMwoIU2.s:665    .text:0000000000000288 .L0 
     /tmp/ccMwoIU2.s:667    .text:000000000000028c .L0 
     /tmp/ccMwoIU2.s:671    .text:0000000000000290 .L0 
     /tmp/ccMwoIU2.s:672    .text:0000000000000290 .L0 
     /tmp/ccMwoIU2.s:677    .text:0000000000000294 .L0 
  src/../h/riscv.hpp:175    .text:0000000000000294 .L0 
     /tmp/ccMwoIU2.s:687    .text:0000000000000298 .L0 
     /tmp/ccMwoIU2.s:688    .text:0000000000000298 .L0 
     /tmp/ccMwoIU2.s:693    .text:000000000000029c .L0 
  src/../h/riscv.hpp:107    .text:000000000000029c .L0 
     /tmp/ccMwoIU2.s:700    .text:00000000000002a0 .L0 
     /tmp/ccMwoIU2.s:706    .text:00000000000002a4 .L0 
     /tmp/ccMwoIU2.s:707    .text:00000000000002a4 .L0 
     /tmp/ccMwoIU2.s:717    .text:00000000000002b4 .L0 
     /tmp/ccMwoIU2.s:718    .text:00000000000002b4 .L0 
     /tmp/ccMwoIU2.s:719    .text:00000000000002b4 .L0 
     /tmp/ccMwoIU2.s:720    .text:00000000000002b4 .L0 
     /tmp/ccMwoIU2.s:725    .text:00000000000002c4 .L0 
       src/riscv.cpp:139    .text:00000000000002c4 .L0 
     /tmp/ccMwoIU2.s:732    .text:00000000000002c8 .L0 
     /tmp/ccMwoIU2.s:734    .text:00000000000002c8 .L0 
       src/riscv.cpp:142    .text:00000000000002cc .L0 
     /tmp/ccMwoIU2.s:748    .text:00000000000002d4 .L0 
     /tmp/ccMwoIU2.s:749    .text:00000000000002d4 .L0 
     /tmp/ccMwoIU2.s:750    .text:00000000000002d4 .L0 
     /tmp/ccMwoIU2.s:754    .text:00000000000002e0 .L0 
       src/riscv.cpp:152    .text:00000000000002e0 .L0 
     /tmp/ccMwoIU2.s:761    .text:00000000000002e4 .L0 
     /tmp/ccMwoIU2.s:763    .text:00000000000002e4 .L0 
       src/riscv.cpp:155    .text:00000000000002e8 .L0 
     /tmp/ccMwoIU2.s:777    .text:00000000000002f0 .L0 
     /tmp/ccMwoIU2.s:778    .text:00000000000002f0 .L0 
     /tmp/ccMwoIU2.s:779    .text:00000000000002f0 .L0 
     /tmp/ccMwoIU2.s:783    .text:00000000000002fc .L0 
       src/riscv.cpp:164    .text:00000000000002fc .L0 
     /tmp/ccMwoIU2.s:790    .text:0000000000000300 .L0 
     /tmp/ccMwoIU2.s:792    .text:0000000000000300 .L0 
       src/riscv.cpp:167    .text:0000000000000304 .L0 
     /tmp/ccMwoIU2.s:799    .text:0000000000000308 .L0 
     /tmp/ccMwoIU2.s:801    .text:0000000000000308 .L0 
     /tmp/ccMwoIU2.s:806    .text:000000000000030c .L0 
  src/../h/riscv.hpp:175    .text:000000000000030c .L0 
     /tmp/ccMwoIU2.s:816    .text:0000000000000310 .L0 
     /tmp/ccMwoIU2.s:817    .text:0000000000000310 .L0 
     /tmp/ccMwoIU2.s:822    .text:0000000000000314 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000314 .L0 
     /tmp/ccMwoIU2.s:829    .text:0000000000000318 .L0 
     /tmp/ccMwoIU2.s:848    .text:000000000000031c .L0 
     /tmp/ccMwoIU2.s:849    .text:000000000000031c .L0 
     /tmp/ccMwoIU2.s:850    .text:000000000000031c .L0 
     /tmp/ccMwoIU2.s:857    .text:0000000000000324 .L0 
GAS LISTING /tmp/ccMwoIU2.s 			page 31


     /tmp/ccMwoIU2.s:863    .text:0000000000000328 .L0 
     /tmp/ccMwoIU2.s:864    .text:0000000000000328 .L0 
     /tmp/ccMwoIU2.s:868    .text:0000000000000334 .L0 
     /tmp/ccMwoIU2.s:879    .text:0000000000000334 .L0 
     /tmp/ccMwoIU2.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccMwoIU2.s:211    .text:00000000000000c8 .L0 
     /tmp/ccMwoIU2.s:47     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccMwoIU2.s:224    .text:00000000000000f0 .L0 
     /tmp/ccMwoIU2.s:50     .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccMwoIU2.s:229    .text:0000000000000100 .L0 
     /tmp/ccMwoIU2.s:53     .rodata.str1.8:0000000000000020 .LC3
     /tmp/ccMwoIU2.s:242    .text:0000000000000128 .L0 
     /tmp/ccMwoIU2.s:590    .text:0000000000000234 .L0 
     /tmp/ccMwoIU2.s:614    .text:0000000000000258 .L0 
     /tmp/ccMwoIU2.s:257    .text:0000000000000148 .L4
     /tmp/ccMwoIU2.s:831    .text:000000000000031c .L21
     /tmp/ccMwoIU2.s:859    .text:0000000000000328 .L22
     /tmp/ccMwoIU2.s:480    .text:00000000000001cc .L23
     /tmp/ccMwoIU2.s:521    .text:00000000000001f0 .L24
     /tmp/ccMwoIU2.s:550    .text:000000000000020c .L25
     /tmp/ccMwoIU2.s:585    .text:0000000000000234 .L26
     /tmp/ccMwoIU2.s:610    .text:0000000000000258 .L27
     /tmp/ccMwoIU2.s:654    .text:0000000000000284 .L28
     /tmp/ccMwoIU2.s:711    .text:00000000000002b4 .L29
     /tmp/ccMwoIU2.s:743    .text:00000000000002d4 .L30
     /tmp/ccMwoIU2.s:772    .text:00000000000002f0 .L31
     /tmp/ccMwoIU2.s:245    .text:0000000000000138 .L3
     /tmp/ccMwoIU2.s:702    .text:00000000000002a4 .L32
     /tmp/ccMwoIU2.s:669    .text:0000000000000290 .L14
     /tmp/ccMwoIU2.s:2253   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccMwoIU2.s:3464   .debug_str:00000000000005eb .LASF127
     /tmp/ccMwoIU2.s:3410   .debug_str:000000000000045a .LASF128
     /tmp/ccMwoIU2.s:3314   .debug_str:00000000000001d3 .LASF129
     /tmp/ccMwoIU2.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccMwoIU2.s:871    .text:0000000000000334 .Letext0
     /tmp/ccMwoIU2.s:3242   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccMwoIU2.s:3386   .debug_str:00000000000003d7 .LASF0
     /tmp/ccMwoIU2.s:3404   .debug_str:0000000000000429 .LASF1
     /tmp/ccMwoIU2.s:3368   .debug_str:0000000000000360 .LASF2
     /tmp/ccMwoIU2.s:3344   .debug_str:00000000000002c8 .LASF4
     /tmp/ccMwoIU2.s:3444   .debug_str:000000000000055c .LASF3
     /tmp/ccMwoIU2.s:3272   .debug_str:000000000000008b .LASF5
     /tmp/ccMwoIU2.s:3408   .debug_str:0000000000000447 .LASF6
     /tmp/ccMwoIU2.s:3384   .debug_str:00000000000003c4 .LASF7
     /tmp/ccMwoIU2.s:3478   .debug_str:0000000000000724 .LASF8
     /tmp/ccMwoIU2.s:3328   .debug_str:000000000000024b .LASF9
     /tmp/ccMwoIU2.s:3422   .debug_str:00000000000004b5 .LASF10
     /tmp/ccMwoIU2.s:3468   .debug_str:00000000000006bb .LASF11
     /tmp/ccMwoIU2.s:3274   .debug_str:0000000000000092 .LASF12
     /tmp/ccMwoIU2.s:3254   .debug_str:0000000000000032 .LASF13
     /tmp/ccMwoIU2.s:3284   .debug_str:00000000000000e6 .LASF14
     /tmp/ccMwoIU2.s:3438   .debug_str:0000000000000518 .LASF15
     /tmp/ccMwoIU2.s:3290   .debug_str:000000000000010f .LASF16
     /tmp/ccMwoIU2.s:3400   .debug_str:0000000000000418 .LASF97
     /tmp/ccMwoIU2.s:3360   .debug_str:000000000000033a .LASF130
     /tmp/ccMwoIU2.s:3452   .debug_str:0000000000000597 .LASF17
     /tmp/ccMwoIU2.s:3398   .debug_str:000000000000040f .LASF18
GAS LISTING /tmp/ccMwoIU2.s 			page 32


     /tmp/ccMwoIU2.s:3354   .debug_str:0000000000000307 .LASF19
     /tmp/ccMwoIU2.s:3436   .debug_str:000000000000050d .LASF52
     /tmp/ccMwoIU2.s:3494   .debug_str:000000000000079d .LASF54
     /tmp/ccMwoIU2.s:3256   .debug_str:0000000000000042 .LASF20
     /tmp/ccMwoIU2.s:3306   .debug_str:000000000000018a .LASF22
     /tmp/ccMwoIU2.s:3302   .debug_str:0000000000000179 .LASF24
     /tmp/ccMwoIU2.s:3300   .debug_str:0000000000000164 .LASF26
     /tmp/ccMwoIU2.s:3446   .debug_str:000000000000056e .LASF21
     /tmp/ccMwoIU2.s:3430   .debug_str:00000000000004ed .LASF23
     /tmp/ccMwoIU2.s:3462   .debug_str:00000000000005e4 .LASF25
     /tmp/ccMwoIU2.s:3458   .debug_str:00000000000005bf .LASF27
     /tmp/ccMwoIU2.s:3318   .debug_str:0000000000000204 .LASF28
     /tmp/ccMwoIU2.s:3292   .debug_str:0000000000000125 .LASF29
     /tmp/ccMwoIU2.s:3248   .debug_str:0000000000000010 .LASF30
     /tmp/ccMwoIU2.s:3336   .debug_str:0000000000000291 .LASF31
     /tmp/ccMwoIU2.s:3270   .debug_str:0000000000000083 .LASF32
     /tmp/ccMwoIU2.s:3276   .debug_str:00000000000000a2 .LASF33
     /tmp/ccMwoIU2.s:3502   .debug_str:00000000000007e4 .LASF34
     /tmp/ccMwoIU2.s:3308   .debug_str:000000000000019f .LASF35
     /tmp/ccMwoIU2.s:3388   .debug_str:00000000000003e4 .LASF36
     /tmp/ccMwoIU2.s:3492   .debug_str:000000000000078a .LASF37
     /tmp/ccMwoIU2.s:3268   .debug_str:000000000000007c .LASF38
     /tmp/ccMwoIU2.s:3316   .debug_str:00000000000001f1 .LASF39
     /tmp/ccMwoIU2.s:3322   .debug_str:000000000000021a .LASF40
     /tmp/ccMwoIU2.s:3460   .debug_str:00000000000005d2 .LASF41
     /tmp/ccMwoIU2.s:3266   .debug_str:0000000000000076 .LASF42
     /tmp/ccMwoIU2.s:3508   .debug_str:000000000000080f .LASF43
     /tmp/ccMwoIU2.s:3500   .debug_str:00000000000007d9 .LASF44
     /tmp/ccMwoIU2.s:3442   .debug_str:0000000000000544 .LASF45
     /tmp/ccMwoIU2.s:3402   .debug_str:000000000000041e .LASF46
     /tmp/ccMwoIU2.s:3454   .debug_str:00000000000005a0 .LASF47
     /tmp/ccMwoIU2.s:3282   .debug_str:00000000000000dc .LASF48
     /tmp/ccMwoIU2.s:3338   .debug_str:00000000000002a5 .LASF49
     /tmp/ccMwoIU2.s:3374   .debug_str:000000000000037c .LASF50
     /tmp/ccMwoIU2.s:3332   .debug_str:000000000000025e .LASF51
     /tmp/ccMwoIU2.s:3448   .debug_str:0000000000000575 .LASF53
     /tmp/ccMwoIU2.s:3278   .debug_str:00000000000000b6 .LASF55
     /tmp/ccMwoIU2.s:3484   .debug_str:0000000000000745 .LASF68
     /tmp/ccMwoIU2.s:3358   .debug_str:0000000000000318 .LASF70
     /tmp/ccMwoIU2.s:3340   .debug_str:00000000000002bb .LASF56
     /tmp/ccMwoIU2.s:3264   .debug_str:000000000000006e .LASF57
     /tmp/ccMwoIU2.s:3352   .debug_str:0000000000000302 .LASF58
     /tmp/ccMwoIU2.s:3364   .debug_str:000000000000034a .LASF59
     /tmp/ccMwoIU2.s:3350   .debug_str:00000000000002f9 .LASF60
     /tmp/ccMwoIU2.s:3392   .debug_str:00000000000003fa .LASF61
     /tmp/ccMwoIU2.s:3356   .debug_str:0000000000000310 .LASF62
     /tmp/ccMwoIU2.s:3396   .debug_str:0000000000000405 .LASF63
     /tmp/ccMwoIU2.s:3250   .debug_str:0000000000000018 .LASF64
     /tmp/ccMwoIU2.s:3376   .debug_str:0000000000000386 .LASF65
     /tmp/ccMwoIU2.s:3304   .debug_str:0000000000000182 .LASF99
     /tmp/ccMwoIU2.s:3262   .debug_str:0000000000000061 .LASF66
     /tmp/ccMwoIU2.s:3474   .debug_str:00000000000006db .LASF67
     /tmp/ccMwoIU2.s:3366   .debug_str:0000000000000352 .LASF69
     /tmp/ccMwoIU2.s:3334   .debug_str:0000000000000274 .LASF71
     /tmp/ccMwoIU2.s:3252   .debug_str:0000000000000023 .LASF72
     /tmp/ccMwoIU2.s:3476   .debug_str:0000000000000706 .LASF73
     /tmp/ccMwoIU2.s:3310   .debug_str:00000000000001b3 .LASF74
GAS LISTING /tmp/ccMwoIU2.s 			page 33


     /tmp/ccMwoIU2.s:3342   .debug_str:00000000000002c3 .LASF75
     /tmp/ccMwoIU2.s:3362   .debug_str:0000000000000345 .LASF76
     /tmp/ccMwoIU2.s:3434   .debug_str:0000000000000508 .LASF77
     /tmp/ccMwoIU2.s:3412   .debug_str:0000000000000468 .LASF78
     /tmp/ccMwoIU2.s:3296   .debug_str:000000000000014f .LASF79
     /tmp/ccMwoIU2.s:3372   .debug_str:0000000000000377 .LASF80
     /tmp/ccMwoIU2.s:3326   .debug_str:0000000000000243 .LASF81
     /tmp/ccMwoIU2.s:3312   .debug_str:00000000000001b8 .LASF82
     /tmp/ccMwoIU2.s:3466   .debug_str:00000000000006af .LASF83
     /tmp/ccMwoIU2.s:3498   .debug_str:00000000000007c1 .LASF85
     /tmp/ccMwoIU2.s:3280   .debug_str:00000000000000d2 .LASF84
     /tmp/ccMwoIU2.s:3440   .debug_str:000000000000052e .LASF86
     /tmp/ccMwoIU2.s:3472   .debug_str:00000000000006d3 .LASF87
     /tmp/ccMwoIU2.s:3424   .debug_str:00000000000004c4 .LASF88
     /tmp/ccMwoIU2.s:3378   .debug_str:0000000000000390 .LASF89
     /tmp/ccMwoIU2.s:3286   .debug_str:00000000000000f2 .LASF90
     /tmp/ccMwoIU2.s:3414   .debug_str:000000000000046d .LASF91
     /tmp/ccMwoIU2.s:3504   .debug_str:00000000000007ec .LASF92
     /tmp/ccMwoIU2.s:3370   .debug_str:000000000000036e .LASF131
     /tmp/ccMwoIU2.s:3294   .debug_str:0000000000000139 .LASF132
     /tmp/ccMwoIU2.s:3244   .debug_str:0000000000000000 .LASF93
     /tmp/ccMwoIU2.s:3288   .debug_str:0000000000000107 .LASF94
     /tmp/ccMwoIU2.s:3490   .debug_str:0000000000000785 .LASF95
     /tmp/ccMwoIU2.s:3380   .debug_str:0000000000000398 .LASF96
     /tmp/ccMwoIU2.s:3420   .debug_str:00000000000004a5 .LASF98
     /tmp/ccMwoIU2.s:3426   .debug_str:00000000000004db .LASF100
     /tmp/ccMwoIU2.s:3246   .debug_str:0000000000000009 .LASF101
     /tmp/ccMwoIU2.s:3488   .debug_str:000000000000077b .LASF102
     /tmp/ccMwoIU2.s:3418   .debug_str:000000000000047c .LASF103
     /tmp/ccMwoIU2.s:3406   .debug_str:000000000000043c .LASF104
     /tmp/ccMwoIU2.s:3324   .debug_str:0000000000000220 .LASF105
     /tmp/ccMwoIU2.s:3480   .debug_str:0000000000000734 .LASF106
     /tmp/ccMwoIU2.s:3486   .debug_str:000000000000075a .LASF107
     /tmp/ccMwoIU2.s:3348   .debug_str:00000000000002f0 .LASF108
     /tmp/ccMwoIU2.s:3346   .debug_str:00000000000002cf .LASF109
     /tmp/ccMwoIU2.s:3390   .debug_str:00000000000003eb .LASF110
     /tmp/ccMwoIU2.s:3382   .debug_str:000000000000039d .LASF111
     /tmp/ccMwoIU2.s:60     .text:0000000000000020 .LFB17
     /tmp/ccMwoIU2.s:869    .text:0000000000000334 .LFE17
     /tmp/ccMwoIU2.s:3394   .debug_str:0000000000000400 .LASF112
     /tmp/ccMwoIU2.s:3432   .debug_str:0000000000000500 .LASF113
     /tmp/ccMwoIU2.s:3258   .debug_str:000000000000004b .LASF114
     /tmp/ccMwoIU2.s:490    .text:00000000000001cc .LBB128
     /tmp/ccMwoIU2.s:519    .text:00000000000001ec .LBE128
     /tmp/ccMwoIU2.s:3066   .debug_loc:0000000000000000 .LLST18
     /tmp/ccMwoIU2.s:3470   .debug_str:00000000000006ca .LASF115
     /tmp/ccMwoIU2.s:3074   .debug_loc:0000000000000025 .LLST19
     /tmp/ccMwoIU2.s:3482   .debug_str:000000000000073e .LASF116
     /tmp/ccMwoIU2.s:497    .text:00000000000001d8 .LVL12
     /tmp/ccMwoIU2.s:501    .text:00000000000001e0 .LVL13
     /tmp/ccMwoIU2.s:523    .text:00000000000001f0 .LBB118
     /tmp/ccMwoIU2.s:548    .text:0000000000000208 .LBE118
     /tmp/ccMwoIU2.s:3081   .debug_loc:0000000000000048 .LLST17
     /tmp/ccMwoIU2.s:530    .text:00000000000001fc .LVL16
     /tmp/ccMwoIU2.s:552    .text:000000000000020c .LBB109
     /tmp/ccMwoIU2.s:583    .text:0000000000000230 .LBE109
     /tmp/ccMwoIU2.s:3456   .debug_str:00000000000005b8 .LASF117
GAS LISTING /tmp/ccMwoIU2.s 			page 34


     /tmp/ccMwoIU2.s:3089   .debug_loc:000000000000006d .LLST13
     /tmp/ccMwoIU2.s:3320   .debug_str:000000000000020c .LASF118
     /tmp/ccMwoIU2.s:3097   .debug_loc:0000000000000092 .LLST14
     /tmp/ccMwoIU2.s:3105   .debug_loc:00000000000000b6 .LLST15
     /tmp/ccMwoIU2.s:3506   .debug_str:0000000000000803 .LASF119
     /tmp/ccMwoIU2.s:3113   .debug_loc:00000000000000da .LLST16
     /tmp/ccMwoIU2.s:565    .text:0000000000000224 .LVL19
     /tmp/ccMwoIU2.s:587    .text:0000000000000234 .LBB101
     /tmp/ccMwoIU2.s:608    .text:0000000000000254 .LBE101
     /tmp/ccMwoIU2.s:598    .text:0000000000000250 .LVL21
     /tmp/ccMwoIU2.s:658    .text:0000000000000284 .LBB81
     /tmp/ccMwoIU2.s:712    .text:00000000000002b4 .LBE81
     /tmp/ccMwoIU2.s:3121   .debug_loc:00000000000000fe .LLST8
     /tmp/ccMwoIU2.s:674    .text:0000000000000294 .LBB82
     /tmp/ccMwoIU2.s:685    .text:0000000000000298 .LBE82
     /tmp/ccMwoIU2.s:3132   .debug_loc:0000000000000134 .LLST9
     /tmp/ccMwoIU2.s:690    .text:000000000000029c .LBB84
     /tmp/ccMwoIU2.s:704    .text:00000000000002a4 .LBE84
     /tmp/ccMwoIU2.s:3139   .debug_loc:0000000000000157 .LLST10
     /tmp/ccMwoIU2.s:709    .text:00000000000002b0 .LVL34
     /tmp/ccMwoIU2.s:714    .text:00000000000002b4 .LBB76
     /tmp/ccMwoIU2.s:741    .text:00000000000002d0 .LBE76
     /tmp/ccMwoIU2.s:3146   .debug_loc:000000000000017a .LLST6
     /tmp/ccMwoIU2.s:3416   .debug_str:0000000000000477 .LASF120
     /tmp/ccMwoIU2.s:3154   .debug_loc:000000000000019f .LLST7
     /tmp/ccMwoIU2.s:723    .text:00000000000002c4 .LVL36
     /tmp/ccMwoIU2.s:745    .text:00000000000002d4 .LBB72
     /tmp/ccMwoIU2.s:770    .text:00000000000002ec .LBE72
     /tmp/ccMwoIU2.s:3162   .debug_loc:00000000000001c3 .LLST5
     /tmp/ccMwoIU2.s:752    .text:00000000000002e0 .LVL39
     /tmp/ccMwoIU2.s:774    .text:00000000000002f0 .LBB66
     /tmp/ccMwoIU2.s:834    .text:000000000000031c .LBE66
     /tmp/ccMwoIU2.s:3170   .debug_loc:00000000000001e8 .LLST2
     /tmp/ccMwoIU2.s:803    .text:000000000000030c .LBB67
     /tmp/ccMwoIU2.s:814    .text:0000000000000310 .LBE67
     /tmp/ccMwoIU2.s:3178   .debug_loc:000000000000020d .LLST3
     /tmp/ccMwoIU2.s:819    .text:0000000000000314 .LBB69
     /tmp/ccMwoIU2.s:833    .text:000000000000031c .LBE69
     /tmp/ccMwoIU2.s:3185   .debug_loc:0000000000000230 .LLST4
     /tmp/ccMwoIU2.s:781    .text:00000000000002fc .LVL42
     /tmp/ccMwoIU2.s:453    .text:00000000000001b0 .LBB65
     /tmp/ccMwoIU2.s:478    .text:00000000000001c8 .LBE65
     /tmp/ccMwoIU2.s:3192   .debug_loc:0000000000000253 .LLST1
     /tmp/ccMwoIU2.s:460    .text:00000000000001bc .LVL9
     /tmp/ccMwoIU2.s:115    .text:0000000000000050 .LBB45
     /tmp/ccMwoIU2.s:131    .text:000000000000005c .LBE45
     /tmp/ccMwoIU2.s:135    .text:0000000000000060 .LBB47
     /tmp/ccMwoIU2.s:150    .text:000000000000006c .LBE47
     /tmp/ccMwoIU2.s:163    .text:0000000000000078 .LBB49
     /tmp/ccMwoIU2.s:178    .text:0000000000000084 .LBE49
     /tmp/ccMwoIU2.s:272    .text:0000000000000158 .LBB53
     /tmp/ccMwoIU2.s:283    .text:000000000000015c .LBE53
     /tmp/ccMwoIU2.s:3200   .debug_loc:0000000000000278 .LLST0
     /tmp/ccMwoIU2.s:626    .text:0000000000000274 .LBB91
     /tmp/ccMwoIU2.s:637    .text:0000000000000278 .LBE91
     /tmp/ccMwoIU2.s:3207   .debug_loc:000000000000029b .LLST11
     /tmp/ccMwoIU2.s:642    .text:000000000000027c .LBB93
GAS LISTING /tmp/ccMwoIU2.s 			page 35


     /tmp/ccMwoIU2.s:656    .text:0000000000000284 .LBE93
     /tmp/ccMwoIU2.s:3214   .debug_loc:00000000000002be .LLST12
     /tmp/ccMwoIU2.s:846    .text:000000000000031c .LBB148
     /tmp/ccMwoIU2.s:861    .text:0000000000000328 .LBE148
     /tmp/ccMwoIU2.s:3221   .debug_loc:00000000000002e1 .LLST20
     /tmp/ccMwoIU2.s:213    .text:00000000000000d8 .LVL0
     /tmp/ccMwoIU2.s:221    .text:00000000000000f0 .LVL1
     /tmp/ccMwoIU2.s:226    .text:0000000000000100 .LVL2
     /tmp/ccMwoIU2.s:231    .text:0000000000000110 .LVL3
     /tmp/ccMwoIU2.s:239    .text:0000000000000128 .LVL4
     /tmp/ccMwoIU2.s:244    .text:0000000000000138 .LVL5
     /tmp/ccMwoIU2.s:621    .text:0000000000000270 .LVL23
     /tmp/ccMwoIU2.s:865    .text:0000000000000330 .LVL49
     /tmp/ccMwoIU2.s:10     .text:0000000000000000 .LFB16
     /tmp/ccMwoIU2.s:40     .text:0000000000000020 .LFE16
     /tmp/ccMwoIU2.s:3330   .debug_str:0000000000000259 .LASF121
     /tmp/ccMwoIU2.s:3450   .debug_str:0000000000000584 .LASF122
     /tmp/ccMwoIU2.s:3496   .debug_str:00000000000007b5 .LASF124
     /tmp/ccMwoIU2.s:3260   .debug_str:0000000000000052 .LASF123
     /tmp/ccMwoIU2.s:3428   .debug_str:00000000000004e4 .LASF125
     /tmp/ccMwoIU2.s:3298   .debug_str:0000000000000154 .LASF126
     /tmp/ccMwoIU2.s:492    .text:00000000000001cc .LVL11
     /tmp/ccMwoIU2.s:525    .text:00000000000001f0 .LVL15
     /tmp/ccMwoIU2.s:554    .text:000000000000020c .LVL18
     /tmp/ccMwoIU2.s:662    .text:0000000000000288 .LVL28
     /tmp/ccMwoIU2.s:668    .text:0000000000000290 .LVL29
     /tmp/ccMwoIU2.s:701    .text:00000000000002a4 .LVL33
     /tmp/ccMwoIU2.s:673    .text:0000000000000294 .LVL30
     /tmp/ccMwoIU2.s:682    .text:0000000000000298 .LVL31
     /tmp/ccMwoIU2.s:689    .text:000000000000029c .LVL32
     /tmp/ccMwoIU2.s:716    .text:00000000000002b4 .LVL35
     /tmp/ccMwoIU2.s:747    .text:00000000000002d4 .LVL38
     /tmp/ccMwoIU2.s:776    .text:00000000000002f0 .LVL41
     /tmp/ccMwoIU2.s:802    .text:000000000000030c .LVL44
     /tmp/ccMwoIU2.s:811    .text:0000000000000310 .LVL45
     /tmp/ccMwoIU2.s:818    .text:0000000000000314 .LVL46
     /tmp/ccMwoIU2.s:830    .text:000000000000031c .LVL47
     /tmp/ccMwoIU2.s:455    .text:00000000000001b0 .LVL8
     /tmp/ccMwoIU2.s:271    .text:0000000000000158 .LVL6
     /tmp/ccMwoIU2.s:280    .text:000000000000015c .LVL7
     /tmp/ccMwoIU2.s:625    .text:0000000000000274 .LVL24
     /tmp/ccMwoIU2.s:634    .text:0000000000000278 .LVL25
     /tmp/ccMwoIU2.s:641    .text:000000000000027c .LVL26
     /tmp/ccMwoIU2.s:653    .text:0000000000000284 .LVL27
     /tmp/ccMwoIU2.s:858    .text:0000000000000328 .LVL48
     /tmp/ccMwoIU2.s:880    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN4_sem9semSignalEPS_
_ZN15MemoryAllocator14convert2BlocksEm
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_
_ZN7_thread7runningE
_ZN7_thread14threadDispatchEv
GAS LISTING /tmp/ccMwoIU2.s 			page 36


_ZN4_sem7semWaitEPS_
_ZN4_sem7semOpenEPPS_j
_ZN4_sem8semCloseEPS_
console_handler
