GAS LISTING /tmp/ccUVkai1.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB16:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** 
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../lib/console.h"
   4:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   5:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** #include "../h/print.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::popSppSpie()
  10:src/riscv.cpp **** {
  12              		.loc 1 10 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 11 5
  21              		.loc 1 11 38 is_stmt 0
  22              	#APP
  23              	# 11 "src/riscv.cpp" 1
  12              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              		.loc 1 12 29 is_stmt 0
  28              	# 12 "src/riscv.cpp" 1
  13              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 13 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE16:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 0A00     		.string	"\n"
  46 0002 00000000 		.align	3
GAS LISTING /tmp/ccUVkai1.s 			page 2


  46      0000
  47              	.LC1:
  48 0008 73657063 		.string	"sepc = "
  48      203D2000 
  49              		.align	3
  50              	.LC2:
  51 0010 0A556E65 		.string	"\nUnexpected trap cause!\n"
  51      78706563 
  51      74656420 
  51      74726170 
  51      20636175 
  52              		.text
  53              		.align	2
  54              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  56              	_ZN5Riscv20handleSupervisorTrapEv:
  57              	.LFB17:
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  16:src/riscv.cpp **** {
  58              		.loc 1 16 1 is_stmt 1
  59              		.cfi_startproc
  60 0020 130101F7 		addi	sp,sp,-144
  61              		.cfi_def_cfa_offset 144
  62 0024 23341108 		sd	ra,136(sp)
  63 0028 23308108 		sd	s0,128(sp)
  64              		.cfi_offset 1, -8
  65              		.cfi_offset 8, -16
  66 002c 13040109 		addi	s0,sp,144
  67              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp ****     uint64 a[8];
  68              		.loc 1 17 5
  18:src/riscv.cpp ****     asm volatile("sd a0, %0" : "=m" (a[0]));
  69              		.loc 1 18 5
  70              		.loc 1 18 44 is_stmt 0
  71              	#APP
  72              	# 18 "src/riscv.cpp" 1
  19              	    asm volatile("sd a1, %0" : "=m" (a[1]));
  73              		sd a0, -80(s0)
  74              	# 0 "" 2
  75              		.loc 1 19 5 is_stmt 1
  76              		.loc 1 19 44 is_stmt 0
  77              	# 19 "src/riscv.cpp" 1
  20              	    asm volatile("sd a2, %0" : "=m" (a[2]));
  78              		sd a1, -72(s0)
  79              	# 0 "" 2
  80              		.loc 1 20 5 is_stmt 1
  81              		.loc 1 20 44 is_stmt 0
  82              	# 20 "src/riscv.cpp" 1
  21              	    asm volatile("sd a3, %0" : "=m" (a[3]));
  83              		sd a2, -64(s0)
  84              	# 0 "" 2
  85              		.loc 1 21 5 is_stmt 1
  86              		.loc 1 21 44 is_stmt 0
  87              	# 21 "src/riscv.cpp" 1
  22              	    asm volatile("sd a4, %0" : "=m" (a[4]));
  88              		sd a3, -56(s0)
  89              	# 0 "" 2
GAS LISTING /tmp/ccUVkai1.s 			page 3


  90              		.loc 1 22 5 is_stmt 1
  91              		.loc 1 22 44 is_stmt 0
  92              	# 22 "src/riscv.cpp" 1
  23              	    asm volatile("sd a5, %0" : "=m" (a[5]));
  93              		sd a4, -48(s0)
  94              	# 0 "" 2
  95              		.loc 1 23 5 is_stmt 1
  96              		.loc 1 23 44 is_stmt 0
  97              	# 23 "src/riscv.cpp" 1
  24              	    asm volatile("sd a6, %0" : "=m" (a[6]));
  98              		sd a5, -40(s0)
  99              	# 0 "" 2
 100              		.loc 1 24 5 is_stmt 1
 101              		.loc 1 24 44 is_stmt 0
 102              	# 24 "src/riscv.cpp" 1
  25              	    asm volatile("sd a7, %0" : "=m" (a[7]));
 103              		sd a6, -32(s0)
 104              	# 0 "" 2
 105              		.loc 1 25 5 is_stmt 1
 106              		.loc 1 25 44 is_stmt 0
 107              	# 25 "src/riscv.cpp" 1
  26              	
  27:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
 108              		sd a7, -24(s0)
 109              	# 0 "" 2
 110              		.loc 1 27 5 is_stmt 1
 111              	#NO_APP
 112              	.LBB26:
 113              	.LBB27:
 114              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv
   8:src/../h/riscv.hpp **** {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
GAS LISTING /tmp/ccUVkai1.s 			page 4


  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // mask set register sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask clear register sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  60:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  61:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sstatus
  65:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sstatus
  68:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sstatus
  71:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sstatus
  74:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // supervisor trap
  77:src/../h/riscv.hpp ****     static void supervisorTrap();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp **** private:
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // supervisor trap handler
  82:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** };
GAS LISTING /tmp/ccUVkai1.s 			page 5


  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  87:src/../h/riscv.hpp **** {
  88:src/../h/riscv.hpp ****     uint64 volatile scause;
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  90:src/../h/riscv.hpp ****     return scause;
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  94:src/../h/riscv.hpp **** {
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 115              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 116              		.loc 2 101 5
 117              		.loc 2 101 64 is_stmt 0
 118              	#APP
 119              	# 101 "src/../h/riscv.hpp" 1
 102              	    return sepc;
 120              		csrr a5, sepc
 121              	# 0 "" 2
 122              	#NO_APP
 123 0054 2334F4F8 		sd	a5,-120(s0)
 124              		.loc 2 102 5 is_stmt 1
 125              		.loc 2 102 12 is_stmt 0
 126 0058 833784F8 		ld	a5,-120(s0)
 127              	.LBE27:
 128              	.LBE26:
 129              		.loc 1 27 35
 130 005c 2334F4FA 		sd	a5,-88(s0)
  28:src/riscv.cpp ****     uint64 volatile sstatus = r_sstatus();
 131              		.loc 1 28 5 is_stmt 1
 132              	.LBB28:
 133              	.LBB29:
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     uint64 volatile stvec;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 114:src/../h/riscv.hpp ****     return stvec;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccUVkai1.s 			page 6


 122:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     uint64 volatile stval;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 126:src/../h/riscv.hpp ****     return stval;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     uint64 volatile sip;
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 148:src/../h/riscv.hpp ****     return sip;
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 134              		.loc 2 168 5
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 135              		.loc 2 169 5
 136              		.loc 2 169 76 is_stmt 0
 137              	#APP
 138              	# 169 "src/../h/riscv.hpp" 1
 170              	    return sstatus;
 139              		csrr a5, sstatus
 140              	# 0 "" 2
 141              	#NO_APP
GAS LISTING /tmp/ccUVkai1.s 			page 7


 142 0064 2330F4F8 		sd	a5,-128(s0)
 143              		.loc 2 170 5 is_stmt 1
 144              		.loc 2 170 12 is_stmt 0
 145 0068 833704F8 		ld	a5,-128(s0)
 146              	.LBE29:
 147              	.LBE28:
 148              		.loc 1 28 41
 149 006c 2330F4FA 		sd	a5,-96(s0)
  29:src/riscv.cpp **** 
  30:src/riscv.cpp ****     // retrieve stack pointer relative to saved registers
  31:src/riscv.cpp ****     void* volatile SP;
 150              		.loc 1 31 5 is_stmt 1
  32:src/riscv.cpp ****     asm volatile("csrr %0, sscratch" : "=r" (SP));
 151              		.loc 1 32 5
 152              		.loc 1 32 50 is_stmt 0
 153              	#APP
 154              	# 32 "src/riscv.cpp" 1
  33              	
 155              		csrr a5, sscratch
 156              	# 0 "" 2
 157              	#NO_APP
 158 0074 233CF4F8 		sd	a5,-104(s0)
  34:src/riscv.cpp ****     uint64 volatile scause = r_scause();
 159              		.loc 1 34 5 is_stmt 1
 160              	.LBB30:
 161              	.LBB31:
  88:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 162              		.loc 2 88 5
  89:src/../h/riscv.hpp ****     return scause;
 163              		.loc 2 89 5
  89:src/../h/riscv.hpp ****     return scause;
 164              		.loc 2 89 72 is_stmt 0
 165              	#APP
 166              	# 89 "src/../h/riscv.hpp" 1
 167              		csrr a5, scause
 168              	# 0 "" 2
 169              	#NO_APP
 170 007c 233CF4F6 		sd	a5,-136(s0)
  90:src/../h/riscv.hpp **** }
 171              		.loc 2 90 5 is_stmt 1
  90:src/../h/riscv.hpp **** }
 172              		.loc 2 90 12 is_stmt 0
 173 0080 833784F7 		ld	a5,-136(s0)
 174              	.LBE31:
 175              	.LBE30:
 176              		.loc 1 34 39
 177 0084 2338F4F8 		sd	a5,-112(s0)
  35:src/riscv.cpp **** 
  36:src/riscv.cpp **** //    printString("scause: ");
  37:src/riscv.cpp **** //    printInteger(scause);
  38:src/riscv.cpp **** //    printString("\n");
  39:src/riscv.cpp **** 
  40:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 178              		.loc 1 40 5 is_stmt 1
 179              	.LBB32:
 180              		.loc 1 40 16 is_stmt 0
 181 0088 033704F9 		ld	a4,-112(s0)
GAS LISTING /tmp/ccUVkai1.s 			page 8


 182              		.loc 1 40 40
 183 008c 93078000 		li	a5,8
 184 0090 6308F708 		beq	a4,a5,.L4
 185              		.loc 1 40 50 discriminator 2
 186 0094 033704F9 		ld	a4,-112(s0)
 187              		.loc 1 40 40 discriminator 2
 188 0098 93079000 		li	a5,9
 189 009c 6302F708 		beq	a4,a5,.L4
  41:src/riscv.cpp ****     {
  42:src/riscv.cpp ****         sepc = sepc + 4;
  43:src/riscv.cpp ****         w_sepc(sepc);
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****         // mem_alloc
  46:src/riscv.cpp ****         if (a[0] == 0x0000000000000001UL)
  47:src/riscv.cpp ****         {
  48:src/riscv.cpp ****             // get the size argument
  49:src/riscv.cpp ****             size_t size = reinterpret_cast<size_t>(a[1]);
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****             size_t blockNum = MemoryAllocator::convert2Blocks(size);
  52:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
  53:src/riscv.cpp **** 
  54:src/riscv.cpp ****             // retVal should already be in a0 but just in case
  55:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****             // put the return value on the stack
  58:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  59:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
  60:src/riscv.cpp ****         }
  61:src/riscv.cpp ****         // mem_free
  62:src/riscv.cpp ****         else if (a[0] == 0x0000000000000002UL)
  63:src/riscv.cpp ****         {
  64:src/riscv.cpp ****             // get the ptr argument
  65:src/riscv.cpp ****             void* ptr = reinterpret_cast<void *>(a[1]);
  66:src/riscv.cpp **** 
  67:src/riscv.cpp ****             int retVal = MemoryAllocator::mem_free(ptr);
  68:src/riscv.cpp **** 
  69:src/riscv.cpp ****             // retVal should already be in a0 but just in case
  70:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  71:src/riscv.cpp **** 
  72:src/riscv.cpp ****             // put the return value on the stack
  73:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  74:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
  75:src/riscv.cpp ****         }
  76:src/riscv.cpp ****         // thread_create
  77:src/riscv.cpp ****         else if (a[0] == 0x0000000000000011UL)
  78:src/riscv.cpp ****         {
  79:src/riscv.cpp ****             thread_t* handle = reinterpret_cast<thread_t *>(a[1]);
  80:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[2]);
  81:src/riscv.cpp ****             void* arg = reinterpret_cast<void *>(a[3]);
  82:src/riscv.cpp ****             void* stack_space = reinterpret_cast<void *>(a[4]);
  83:src/riscv.cpp **** 
  84:src/riscv.cpp ****             int retVal = _thread::threadCreate(handle, start_routine, arg, stack_space);
  85:src/riscv.cpp **** 
  86:src/riscv.cpp ****             // retVal should already be in a0 but just in case
  87:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
  88:src/riscv.cpp **** 
  89:src/riscv.cpp ****             // put the return value on the stack
GAS LISTING /tmp/ccUVkai1.s 			page 9


  90:src/riscv.cpp ****             asm volatile("sd a0, 10 * 8(%0)" : : "r" (SP));
  91:src/riscv.cpp ****         }
  92:src/riscv.cpp ****         // thread_exit
  93:src/riscv.cpp ****         else if (a[0] == 0x0000000000000012UL)
  94:src/riscv.cpp ****         {
  95:src/riscv.cpp ****             _thread::running->finished = true;
  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****             _thread::threadDispatch();
  98:src/riscv.cpp **** 
  99:src/riscv.cpp ****             int retVal;
 100:src/riscv.cpp **** 
 101:src/riscv.cpp ****             // return error code if thread didn't exit
 102:src/riscv.cpp ****             asm volatile("mv %0, a0" : "=r" (retVal));
 103:src/riscv.cpp ****         }
 104:src/riscv.cpp ****         // thread_dispatch
 105:src/riscv.cpp ****         else if (a[0] == 0x0000000000000013UL)
 106:src/riscv.cpp ****         {
 107:src/riscv.cpp ****             // sepc and sstatus already saved
 108:src/riscv.cpp ****             // seps already added +4
 109:src/riscv.cpp **** 
 110:src/riscv.cpp ****             _thread::running->timeSlice = 0;
 111:src/riscv.cpp **** 
 112:src/riscv.cpp ****             _thread::threadDispatch();
 113:src/riscv.cpp **** 
 114:src/riscv.cpp ****             // printString("Dispatched!\n");
 115:src/riscv.cpp **** 
 116:src/riscv.cpp ****             w_sstatus(sstatus);
 117:src/riscv.cpp ****             w_sepc(sepc);
 118:src/riscv.cpp **** 
 119:src/riscv.cpp ****             // nothing to return
 120:src/riscv.cpp ****         }
 121:src/riscv.cpp ****         else
 122:src/riscv.cpp ****         {
 123:src/riscv.cpp **** 
 124:src/riscv.cpp ****         }
 125:src/riscv.cpp ****     }
 126:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 190              		.loc 1 126 10 is_stmt 1
 191              		.loc 1 126 21 is_stmt 0
 192 00a0 033704F9 		ld	a4,-112(s0)
 193              		.loc 1 126 10
 194 00a4 9307F0FF 		li	a5,-1
 195 00a8 9397F703 		slli	a5,a5,63
 196 00ac 93871700 		addi	a5,a5,1
 197 00b0 6304F716 		beq	a4,a5,.L15
 127:src/riscv.cpp ****     {
 128:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 129:src/riscv.cpp ****         /*
 130:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 131:src/riscv.cpp **** 
 132:src/riscv.cpp ****         _thread::running->timeSlice++;
 133:src/riscv.cpp ****         if (_thread::running->timeSlice >= DEFAULT_TIME_SLICE)
 134:src/riscv.cpp ****         {
 135:src/riscv.cpp ****             // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 136:src/riscv.cpp ****             // sepc = sepc + 4;
 137:src/riscv.cpp **** 
 138:src/riscv.cpp ****             _thread::running->timeSlice = 0;
GAS LISTING /tmp/ccUVkai1.s 			page 10


 139:src/riscv.cpp ****             _thread::threadDispatch();
 140:src/riscv.cpp ****             w_sstatus(sstatus);
 141:src/riscv.cpp ****             w_sepc(sepc);
 142:src/riscv.cpp ****         }
 143:src/riscv.cpp ****         */
 144:src/riscv.cpp ****     }
 145:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 198              		.loc 1 145 10 is_stmt 1
 199              		.loc 1 145 21 is_stmt 0
 200 00b4 033704F9 		ld	a4,-112(s0)
 201              		.loc 1 145 10
 202 00b8 9307F0FF 		li	a5,-1
 203 00bc 9397F703 		slli	a5,a5,63
 204 00c0 93879700 		addi	a5,a5,9
 205 00c4 6300F716 		beq	a4,a5,.L16
 146:src/riscv.cpp ****     {
 147:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 148:src/riscv.cpp ****         // printString("Keyboard interrupt!\n");
 149:src/riscv.cpp ****         console_handler();
 150:src/riscv.cpp **** 
 151:src/riscv.cpp ****     }
 152:src/riscv.cpp ****     else
 153:src/riscv.cpp ****     {
 154:src/riscv.cpp ****         printInteger(scause);
 206              		.loc 1 154 9 is_stmt 1
 207              		.loc 1 154 21 is_stmt 0
 208 00c8 033504F9 		ld	a0,-112(s0)
 209 00cc 97000000 		call	_Z12printIntegerm@plt
 209      E7800000 
 210              	.LVL0:
 155:src/riscv.cpp ****         printString("\n");
 211              		.loc 1 155 9 is_stmt 1
 212              		.loc 1 155 20 is_stmt 0
 213 00d4 17050000 		lla	a0,.LC0
 213      13050500 
 214 00dc 97000000 		call	_Z11printStringPKc@plt
 214      E7800000 
 215              	.LVL1:
 156:src/riscv.cpp ****         printString("sepc = ");
 216              		.loc 1 156 9 is_stmt 1
 217              		.loc 1 156 20 is_stmt 0
 218 00e4 17050000 		lla	a0,.LC1
 218      13050500 
 219 00ec 97000000 		call	_Z11printStringPKc@plt
 219      E7800000 
 220              	.LVL2:
 157:src/riscv.cpp ****         printInteger(sepc);
 221              		.loc 1 157 9 is_stmt 1
 222              		.loc 1 157 21 is_stmt 0
 223 00f4 033584FA 		ld	a0,-88(s0)
 224 00f8 97000000 		call	_Z12printIntegerm@plt
 224      E7800000 
 225              	.LVL3:
 158:src/riscv.cpp ****         printString("\nUnexpected trap cause!\n");
 226              		.loc 1 158 9 is_stmt 1
 227              		.loc 1 158 20 is_stmt 0
 228 0100 17050000 		lla	a0,.LC2
GAS LISTING /tmp/ccUVkai1.s 			page 11


 228      13050500 
 229 0108 97000000 		call	_Z11printStringPKc@plt
 229      E7800000 
 230              	.LVL4:
 231              	.L3:
 232              	.LBE32:
 159:src/riscv.cpp ****         // unexpected trap cause
 160:src/riscv.cpp ****     }
 161:src/riscv.cpp **** }
 233              		.loc 1 161 1
 234 0110 83308108 		ld	ra,136(sp)
 235              		.cfi_remember_state
 236              		.cfi_restore 1
 237 0114 03340108 		ld	s0,128(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 144
 240 0118 13010109 		addi	sp,sp,144
 241              		.cfi_def_cfa_offset 0
 242 011c 67800000 		jr	ra
 243              	.L4:
 244              		.cfi_restore_state
 245              	.LBB62:
 246              	.LBB33:
  42:src/riscv.cpp ****         w_sepc(sepc);
 247              		.loc 1 42 9 is_stmt 1
  42:src/riscv.cpp ****         w_sepc(sepc);
 248              		.loc 1 42 16 is_stmt 0
 249 0120 833784FA 		ld	a5,-88(s0)
  42:src/riscv.cpp ****         w_sepc(sepc);
 250              		.loc 1 42 21
 251 0124 93874700 		addi	a5,a5,4
  42:src/riscv.cpp ****         w_sepc(sepc);
 252              		.loc 1 42 14
 253 0128 2334F4FA 		sd	a5,-88(s0)
  43:src/riscv.cpp **** 
 254              		.loc 1 43 9 is_stmt 1
  43:src/riscv.cpp **** 
 255              		.loc 1 43 15 is_stmt 0
 256 012c 833784FA 		ld	a5,-88(s0)
 257              	.LVL5:
 258              	.LBB34:
 259              	.LBB35:
 107:src/../h/riscv.hpp **** }
 260              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 261              		.loc 2 107 65 is_stmt 0
 262              	#APP
 263              	# 107 "src/../h/riscv.hpp" 1
 264              		csrw sepc, a5
 265              	# 0 "" 2
 266              	.LVL6:
 267              	#NO_APP
 268              	.LBE35:
 269              	.LBE34:
  46:src/riscv.cpp ****         {
 270              		.loc 1 46 9 is_stmt 1
 271              	.LBB36:
GAS LISTING /tmp/ccUVkai1.s 			page 12


  46:src/riscv.cpp ****         {
 272              		.loc 1 46 16 is_stmt 0
 273 0134 833704FB 		ld	a5,-80(s0)
  46:src/riscv.cpp ****         {
 274              		.loc 1 46 9
 275 0138 13071000 		li	a4,1
 276 013c 6388E704 		beq	a5,a4,.L17
 277              	.LBE36:
 278              	.LBE33:
 279              	.LBE62:
  62:src/riscv.cpp ****         {
 280              		.loc 1 62 14 is_stmt 1
 281              	.LBB63:
 282              	.LBB57:
 283              	.LBB54:
 284              	.LBB37:
 285 0140 13072000 		li	a4,2
 286 0144 6386E706 		beq	a5,a4,.L18
 287              	.LBE37:
 288              	.LBE54:
 289              	.LBE57:
 290              	.LBE63:
  77:src/riscv.cpp ****         {
 291              		.loc 1 77 14
 292              	.LBB64:
 293              	.LBB58:
 294              	.LBB55:
 295              	.LBB50:
 296              	.LBB38:
 297 0148 13071001 		li	a4,17
 298 014c 6380E708 		beq	a5,a4,.L19
 299              	.LBE38:
 300              	.LBE50:
 301              	.LBE55:
 302              	.LBE58:
 303              	.LBE64:
  93:src/riscv.cpp ****         {
 304              		.loc 1 93 14
 305              	.LBB65:
 306              	.LBB59:
 307              	.LBB56:
 308              	.LBB51:
 309              	.LBB47:
 310              	.LBB39:
 311 0150 13072001 		li	a4,18
 312 0154 6380E70A 		beq	a5,a4,.L20
 105:src/riscv.cpp ****         {
 313              		.loc 1 105 14
 314 0158 13073001 		li	a4,19
 315 015c E39AE7FA 		bne	a5,a4,.L3
 110:src/riscv.cpp **** 
 316              		.loc 1 110 13
 110:src/riscv.cpp **** 
 317              		.loc 1 110 31 is_stmt 0
 318 0160 97070000 		la	a5,_ZN7_thread7runningE
 318      83B70700 
 319 0168 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/ccUVkai1.s 			page 13


 110:src/riscv.cpp **** 
 320              		.loc 1 110 41
 321 016c 23B80702 		sd	zero,48(a5)
 112:src/riscv.cpp **** 
 322              		.loc 1 112 13 is_stmt 1
 112:src/riscv.cpp **** 
 323              		.loc 1 112 36 is_stmt 0
 324 0170 97000000 		call	_ZN7_thread14threadDispatchEv@plt
 324      E7800000 
 325              	.LVL7:
 116:src/riscv.cpp ****             w_sepc(sepc);
 326              		.loc 1 116 13 is_stmt 1
 116:src/riscv.cpp ****             w_sepc(sepc);
 327              		.loc 1 116 22 is_stmt 0
 328 0178 833704FA 		ld	a5,-96(s0)
 329              	.LVL8:
 330              	.LBB40:
 331              	.LBB41:
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 332              		.loc 2 175 5 is_stmt 1
 333              		.loc 2 175 77 is_stmt 0
 334              	#APP
 335              	# 175 "src/../h/riscv.hpp" 1
 176              	}
 336              		csrw sstatus, a5
 337              	# 0 "" 2
 338              	.LVL9:
 339              	#NO_APP
 340              	.LBE41:
 341              	.LBE40:
 117:src/riscv.cpp **** 
 342              		.loc 1 117 13 is_stmt 1
 117:src/riscv.cpp **** 
 343              		.loc 1 117 19 is_stmt 0
 344 0180 833784FA 		ld	a5,-88(s0)
 345              	.LVL10:
 346              	.LBB42:
 347              	.LBB43:
 107:src/../h/riscv.hpp **** }
 348              		.loc 2 107 5 is_stmt 1
 107:src/../h/riscv.hpp **** }
 349              		.loc 2 107 65 is_stmt 0
 350              	#APP
 351              	# 107 "src/../h/riscv.hpp" 1
 108:src/../h/riscv.hpp **** 
 352              		csrw sepc, a5
 353              	# 0 "" 2
 354              		.loc 2 108 1
 355              	#NO_APP
 356 0188 6FF09FF8 		j	.L3
 357              	.LVL11:
 358              	.L17:
 359              	.LBE43:
GAS LISTING /tmp/ccUVkai1.s 			page 14


 360              	.LBE42:
 361              	.LBE39:
 362              	.LBE47:
 363              	.LBE51:
 364              	.LBB52:
  49:src/riscv.cpp **** 
 365              		.loc 1 49 13 is_stmt 1
  51:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
 366              		.loc 1 51 13
  51:src/riscv.cpp ****             void* retVal = MemoryAllocator::mem_alloc(blockNum);
 367              		.loc 1 51 62 is_stmt 0
 368 018c 033584FB 		ld	a0,-72(s0)
 369 0190 97000000 		call	_ZN15MemoryAllocator14convert2BlocksEm@plt
 369      E7800000 
 370              	.LVL12:
  52:src/riscv.cpp **** 
 371              		.loc 1 52 13 is_stmt 1
  52:src/riscv.cpp **** 
 372              		.loc 1 52 54 is_stmt 0
 373 0198 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 373      E7800000 
 374              	.LVL13:
  55:src/riscv.cpp **** 
 375              		.loc 1 55 13 is_stmt 1
  55:src/riscv.cpp **** 
 376              		.loc 1 55 54 is_stmt 0
 377              	#APP
 378              	# 55 "src/riscv.cpp" 1
 379              		mv a5, a0
 380              	# 0 "" 2
 381              	.LVL14:
  58:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 382              		.loc 1 58 13 is_stmt 1
  58:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 383              		.loc 1 58 55 is_stmt 0
 384              	#NO_APP
 385 01a4 833784F9 		ld	a5,-104(s0)
  58:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 386              		.loc 1 58 59
 387              	#APP
 388              	# 58 "src/riscv.cpp" 1
 389              		sd a0, 10 * 8(a5)
 390              	# 0 "" 2
 391              	#NO_APP
 392              	.LBE52:
 393 01ac 6FF05FF6 		j	.L3
 394              	.L18:
 395              	.LBB53:
 396              	.LBB48:
  65:src/riscv.cpp **** 
 397              		.loc 1 65 13 is_stmt 1
 398              	.LVL15:
  67:src/riscv.cpp **** 
 399              		.loc 1 67 13
  67:src/riscv.cpp **** 
 400              		.loc 1 67 51 is_stmt 0
 401 01b0 033584FB 		ld	a0,-72(s0)
GAS LISTING /tmp/ccUVkai1.s 			page 15


 402 01b4 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 402      E7800000 
 403              	.LVL16:
  70:src/riscv.cpp **** 
 404              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp **** 
 405              		.loc 1 70 54 is_stmt 0
 406              	#APP
 407              	# 70 "src/riscv.cpp" 1
 408              		mv a5, a0
 409              	# 0 "" 2
 410              	.LVL17:
  73:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 411              		.loc 1 73 13 is_stmt 1
  73:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 412              		.loc 1 73 55 is_stmt 0
 413              	#NO_APP
 414 01c0 833784F9 		ld	a5,-104(s0)
  73:src/riscv.cpp ****             // asm volatile("sd a0, 0x50(%0)" : : "r" (SP));
 415              		.loc 1 73 59
 416              	#APP
 417              	# 73 "src/riscv.cpp" 1
 418              		sd a0, 10 * 8(a5)
 419              	# 0 "" 2
 420              	#NO_APP
 421              	.LBE48:
 422 01c8 6FF09FF4 		j	.L3
 423              	.L19:
 424              	.LBB49:
 425              	.LBB45:
  79:src/riscv.cpp ****             void(*start_routine)(void*) = reinterpret_cast<void (*)(void *)>(a[2]);
 426              		.loc 1 79 13 is_stmt 1
 427              	.LVL18:
  80:src/riscv.cpp ****             void* arg = reinterpret_cast<void *>(a[3]);
 428              		.loc 1 80 13
  81:src/riscv.cpp ****             void* stack_space = reinterpret_cast<void *>(a[4]);
 429              		.loc 1 81 13
  82:src/riscv.cpp **** 
 430              		.loc 1 82 13
  84:src/riscv.cpp **** 
 431              		.loc 1 84 13
  84:src/riscv.cpp **** 
 432              		.loc 1 84 47 is_stmt 0
 433 01cc 833604FD 		ld	a3,-48(s0)
 434 01d0 033684FC 		ld	a2,-56(s0)
 435 01d4 833504FC 		ld	a1,-64(s0)
 436 01d8 033584FB 		ld	a0,-72(s0)
 437 01dc 97000000 		call	_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_@plt
 437      E7800000 
 438              	.LVL19:
  87:src/riscv.cpp **** 
 439              		.loc 1 87 13 is_stmt 1
  87:src/riscv.cpp **** 
 440              		.loc 1 87 54 is_stmt 0
 441              	#APP
 442              	# 87 "src/riscv.cpp" 1
 443              		mv a5, a0
GAS LISTING /tmp/ccUVkai1.s 			page 16


 444              	# 0 "" 2
 445              	.LVL20:
  90:src/riscv.cpp ****         }
 446              		.loc 1 90 13 is_stmt 1
  90:src/riscv.cpp ****         }
 447              		.loc 1 90 55 is_stmt 0
 448              	#NO_APP
 449 01e8 833784F9 		ld	a5,-104(s0)
  90:src/riscv.cpp ****         }
 450              		.loc 1 90 59
 451              	#APP
 452              	# 90 "src/riscv.cpp" 1
 453              		sd a0, 10 * 8(a5)
 454              	# 0 "" 2
 455              	#NO_APP
 456              	.LBE45:
 457 01f0 6FF01FF2 		j	.L3
 458              	.L20:
 459              	.LBB46:
 460              	.LBB44:
  95:src/riscv.cpp **** 
 461              		.loc 1 95 13 is_stmt 1
  95:src/riscv.cpp **** 
 462              		.loc 1 95 31 is_stmt 0
 463 01f4 97070000 		la	a5,_ZN7_thread7runningE
 463      83B70700 
 464 01fc 83B70700 		ld	a5,0(a5)
  95:src/riscv.cpp **** 
 465              		.loc 1 95 40
 466 0200 13071000 		li	a4,1
 467 0204 2384E700 		sb	a4,8(a5)
  97:src/riscv.cpp **** 
 468              		.loc 1 97 13 is_stmt 1
  97:src/riscv.cpp **** 
 469              		.loc 1 97 36 is_stmt 0
 470 0208 97000000 		call	_ZN7_thread14threadDispatchEv@plt
 470      E7800000 
 471              	.LVL21:
  99:src/riscv.cpp **** 
 472              		.loc 1 99 13 is_stmt 1
 102:src/riscv.cpp ****         }
 473              		.loc 1 102 13
 102:src/riscv.cpp ****         }
 474              		.loc 1 102 54 is_stmt 0
 475              	#APP
 476              	# 102 "src/riscv.cpp" 1
 477              		mv a5, a0
 478              	# 0 "" 2
 479              	.LVL22:
 480              	#NO_APP
 481              	.LBE44:
 482 0214 6FF0DFEF 		j	.L3
 483              	.L15:
 484              	.LBE46:
 485              	.LBE49:
 486              	.LBE53:
 487              	.LBE56:
GAS LISTING /tmp/ccUVkai1.s 			page 17


 488              	.LBE59:
 128:src/riscv.cpp ****         /*
 489              		.loc 1 128 9 is_stmt 1
 490              	.LVL23:
 491              	.LBB60:
 492              	.LBB61:
 141:src/../h/riscv.hpp **** }
 493              		.loc 2 141 5
 141:src/../h/riscv.hpp **** }
 494              		.loc 2 141 64 is_stmt 0
 495 0218 93072000 		li	a5,2
 496              	#APP
 497              	# 141 "src/../h/riscv.hpp" 1
 142:src/../h/riscv.hpp **** 
 498              		csrc sip, a5
 499              	# 0 "" 2
 500              		.loc 2 142 1
 501              	#NO_APP
 502 0220 6FF01FEF 		j	.L3
 503              	.LVL24:
 504              	.L16:
 505              	.LBE61:
 506              	.LBE60:
 149:src/riscv.cpp **** 
 507              		.loc 1 149 9 is_stmt 1
 149:src/riscv.cpp **** 
 508              		.loc 1 149 24 is_stmt 0
 509 0224 97000000 		call	console_handler@plt
 509      E7800000 
 510              	.LVL25:
 511 022c 6FF05FEE 		j	.L3
 512              	.LBE65:
 513              		.cfi_endproc
 514              	.LFE17:
 516              	.Letext0:
 517              		.file 3 "src/../h/../lib/hw.h"
 518              		.file 4 "src/../h/../h/thread.hpp"
 519              		.file 5 "src/../h/MemoryAllocator.hpp"
 520              		.file 6 "src/../h/print.hpp"
 521              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/ccUVkai1.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccUVkai1.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccUVkai1.s:13     .text:0000000000000000 .L0 
     /tmp/ccUVkai1.s:14     .text:0000000000000000 .L0 
     /tmp/ccUVkai1.s:15     .text:0000000000000004 .L0 
     /tmp/ccUVkai1.s:17     .text:0000000000000008 .L0 
     /tmp/ccUVkai1.s:19     .text:000000000000000c .L0 
     /tmp/ccUVkai1.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:11     .text:000000000000000c .L0 
     /tmp/ccUVkai1.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:12     .text:0000000000000010 .L0 
     /tmp/ccUVkai1.s:33     .text:0000000000000014 .L0 
     /tmp/ccUVkai1.s:34     .text:0000000000000018 .L0 
     /tmp/ccUVkai1.s:35     .text:0000000000000018 .L0 
     /tmp/ccUVkai1.s:37     .text:000000000000001c .L0 
     /tmp/ccUVkai1.s:39     .text:0000000000000020 .L0 
     /tmp/ccUVkai1.s:56     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccUVkai1.s:59     .text:0000000000000020 .L0 
     /tmp/ccUVkai1.s:60     .text:0000000000000020 .L0 
     /tmp/ccUVkai1.s:61     .text:0000000000000024 .L0 
     /tmp/ccUVkai1.s:64     .text:000000000000002c .L0 
     /tmp/ccUVkai1.s:65     .text:000000000000002c .L0 
     /tmp/ccUVkai1.s:67     .text:0000000000000030 .L0 
     /tmp/ccUVkai1.s:69     .text:0000000000000030 .L0 
     /tmp/ccUVkai1.s:70     .text:0000000000000030 .L0 
       src/riscv.cpp:18     .text:0000000000000030 .L0 
     /tmp/ccUVkai1.s:76     .text:0000000000000034 .L0 
       src/riscv.cpp:19     .text:0000000000000034 .L0 
     /tmp/ccUVkai1.s:81     .text:0000000000000038 .L0 
       src/riscv.cpp:20     .text:0000000000000038 .L0 
     /tmp/ccUVkai1.s:86     .text:000000000000003c .L0 
       src/riscv.cpp:21     .text:000000000000003c .L0 
     /tmp/ccUVkai1.s:91     .text:0000000000000040 .L0 
       src/riscv.cpp:22     .text:0000000000000040 .L0 
     /tmp/ccUVkai1.s:96     .text:0000000000000044 .L0 
       src/riscv.cpp:23     .text:0000000000000044 .L0 
     /tmp/ccUVkai1.s:101    .text:0000000000000048 .L0 
       src/riscv.cpp:24     .text:0000000000000048 .L0 
     /tmp/ccUVkai1.s:106    .text:000000000000004c .L0 
       src/riscv.cpp:25     .text:000000000000004c .L0 
     /tmp/ccUVkai1.s:115    .text:0000000000000050 .L0 
     /tmp/ccUVkai1.s:116    .text:0000000000000050 .L0 
     /tmp/ccUVkai1.s:117    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000050 .L0 
     /tmp/ccUVkai1.s:125    .text:0000000000000058 .L0 
     /tmp/ccUVkai1.s:126    .text:0000000000000058 .L0 
     /tmp/ccUVkai1.s:130    .text:000000000000005c .L0 
     /tmp/ccUVkai1.s:134    .text:0000000000000060 .L0 
     /tmp/ccUVkai1.s:135    .text:0000000000000060 .L0 
     /tmp/ccUVkai1.s:136    .text:0000000000000060 .L0 
  src/../h/riscv.hpp:169    .text:0000000000000060 .L0 
     /tmp/ccUVkai1.s:144    .text:0000000000000068 .L0 
     /tmp/ccUVkai1.s:145    .text:0000000000000068 .L0 
     /tmp/ccUVkai1.s:149    .text:000000000000006c .L0 
     /tmp/ccUVkai1.s:151    .text:0000000000000070 .L0 
     /tmp/ccUVkai1.s:152    .text:0000000000000070 .L0 
GAS LISTING /tmp/ccUVkai1.s 			page 19


       src/riscv.cpp:32     .text:0000000000000070 .L0 
     /tmp/ccUVkai1.s:162    .text:0000000000000078 .L0 
     /tmp/ccUVkai1.s:163    .text:0000000000000078 .L0 
     /tmp/ccUVkai1.s:164    .text:0000000000000078 .L0 
  src/../h/riscv.hpp:89     .text:0000000000000078 .L0 
     /tmp/ccUVkai1.s:172    .text:0000000000000080 .L0 
     /tmp/ccUVkai1.s:173    .text:0000000000000080 .L0 
     /tmp/ccUVkai1.s:177    .text:0000000000000084 .L0 
     /tmp/ccUVkai1.s:180    .text:0000000000000088 .L0 
     /tmp/ccUVkai1.s:181    .text:0000000000000088 .L0 
     /tmp/ccUVkai1.s:183    .text:000000000000008c .L0 
     /tmp/ccUVkai1.s:186    .text:0000000000000094 .L0 
     /tmp/ccUVkai1.s:188    .text:0000000000000098 .L0 
     /tmp/ccUVkai1.s:191    .text:00000000000000a0 .L0 
     /tmp/ccUVkai1.s:192    .text:00000000000000a0 .L0 
     /tmp/ccUVkai1.s:194    .text:00000000000000a4 .L0 
     /tmp/ccUVkai1.s:199    .text:00000000000000b4 .L0 
     /tmp/ccUVkai1.s:200    .text:00000000000000b4 .L0 
     /tmp/ccUVkai1.s:202    .text:00000000000000b8 .L0 
     /tmp/ccUVkai1.s:207    .text:00000000000000c8 .L0 
     /tmp/ccUVkai1.s:208    .text:00000000000000c8 .L0 
     /tmp/ccUVkai1.s:212    .text:00000000000000d4 .L0 
     /tmp/ccUVkai1.s:213    .text:00000000000000d4 .L0 
     /tmp/ccUVkai1.s:217    .text:00000000000000e4 .L0 
     /tmp/ccUVkai1.s:218    .text:00000000000000e4 .L0 
     /tmp/ccUVkai1.s:222    .text:00000000000000f4 .L0 
     /tmp/ccUVkai1.s:223    .text:00000000000000f4 .L0 
     /tmp/ccUVkai1.s:227    .text:0000000000000100 .L0 
     /tmp/ccUVkai1.s:228    .text:0000000000000100 .L0 
     /tmp/ccUVkai1.s:234    .text:0000000000000110 .L0 
     /tmp/ccUVkai1.s:235    .text:0000000000000114 .L0 
     /tmp/ccUVkai1.s:236    .text:0000000000000114 .L0 
     /tmp/ccUVkai1.s:238    .text:0000000000000118 .L0 
     /tmp/ccUVkai1.s:239    .text:0000000000000118 .L0 
     /tmp/ccUVkai1.s:241    .text:000000000000011c .L0 
     /tmp/ccUVkai1.s:244    .text:0000000000000120 .L0 
     /tmp/ccUVkai1.s:248    .text:0000000000000120 .L0 
     /tmp/ccUVkai1.s:249    .text:0000000000000120 .L0 
     /tmp/ccUVkai1.s:251    .text:0000000000000124 .L0 
     /tmp/ccUVkai1.s:253    .text:0000000000000128 .L0 
     /tmp/ccUVkai1.s:255    .text:000000000000012c .L0 
     /tmp/ccUVkai1.s:256    .text:000000000000012c .L0 
     /tmp/ccUVkai1.s:261    .text:0000000000000130 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000130 .L0 
     /tmp/ccUVkai1.s:272    .text:0000000000000134 .L0 
     /tmp/ccUVkai1.s:273    .text:0000000000000134 .L0 
     /tmp/ccUVkai1.s:275    .text:0000000000000138 .L0 
     /tmp/ccUVkai1.s:285    .text:0000000000000140 .L0 
     /tmp/ccUVkai1.s:297    .text:0000000000000148 .L0 
     /tmp/ccUVkai1.s:311    .text:0000000000000150 .L0 
     /tmp/ccUVkai1.s:314    .text:0000000000000158 .L0 
     /tmp/ccUVkai1.s:317    .text:0000000000000160 .L0 
     /tmp/ccUVkai1.s:318    .text:0000000000000160 .L0 
     /tmp/ccUVkai1.s:321    .text:000000000000016c .L0 
     /tmp/ccUVkai1.s:323    .text:0000000000000170 .L0 
     /tmp/ccUVkai1.s:324    .text:0000000000000170 .L0 
     /tmp/ccUVkai1.s:327    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccUVkai1.s 			page 20


     /tmp/ccUVkai1.s:328    .text:0000000000000178 .L0 
     /tmp/ccUVkai1.s:333    .text:000000000000017c .L0 
  src/../h/riscv.hpp:175    .text:000000000000017c .L0 
     /tmp/ccUVkai1.s:343    .text:0000000000000180 .L0 
     /tmp/ccUVkai1.s:344    .text:0000000000000180 .L0 
     /tmp/ccUVkai1.s:349    .text:0000000000000184 .L0 
  src/../h/riscv.hpp:107    .text:0000000000000184 .L0 
     /tmp/ccUVkai1.s:356    .text:0000000000000188 .L0 
     /tmp/ccUVkai1.s:366    .text:000000000000018c .L0 
     /tmp/ccUVkai1.s:367    .text:000000000000018c .L0 
     /tmp/ccUVkai1.s:368    .text:000000000000018c .L0 
     /tmp/ccUVkai1.s:372    .text:0000000000000198 .L0 
     /tmp/ccUVkai1.s:373    .text:0000000000000198 .L0 
     /tmp/ccUVkai1.s:376    .text:00000000000001a0 .L0 
       src/riscv.cpp:55     .text:00000000000001a0 .L0 
     /tmp/ccUVkai1.s:383    .text:00000000000001a4 .L0 
     /tmp/ccUVkai1.s:385    .text:00000000000001a4 .L0 
       src/riscv.cpp:58     .text:00000000000001a8 .L0 
     /tmp/ccUVkai1.s:399    .text:00000000000001b0 .L0 
     /tmp/ccUVkai1.s:400    .text:00000000000001b0 .L0 
     /tmp/ccUVkai1.s:401    .text:00000000000001b0 .L0 
     /tmp/ccUVkai1.s:405    .text:00000000000001bc .L0 
       src/riscv.cpp:70     .text:00000000000001bc .L0 
     /tmp/ccUVkai1.s:412    .text:00000000000001c0 .L0 
     /tmp/ccUVkai1.s:414    .text:00000000000001c0 .L0 
       src/riscv.cpp:73     .text:00000000000001c4 .L0 
     /tmp/ccUVkai1.s:428    .text:00000000000001cc .L0 
     /tmp/ccUVkai1.s:429    .text:00000000000001cc .L0 
     /tmp/ccUVkai1.s:430    .text:00000000000001cc .L0 
     /tmp/ccUVkai1.s:431    .text:00000000000001cc .L0 
     /tmp/ccUVkai1.s:432    .text:00000000000001cc .L0 
     /tmp/ccUVkai1.s:433    .text:00000000000001cc .L0 
     /tmp/ccUVkai1.s:440    .text:00000000000001e4 .L0 
       src/riscv.cpp:87     .text:00000000000001e4 .L0 
     /tmp/ccUVkai1.s:447    .text:00000000000001e8 .L0 
     /tmp/ccUVkai1.s:449    .text:00000000000001e8 .L0 
       src/riscv.cpp:90     .text:00000000000001ec .L0 
     /tmp/ccUVkai1.s:462    .text:00000000000001f4 .L0 
     /tmp/ccUVkai1.s:463    .text:00000000000001f4 .L0 
     /tmp/ccUVkai1.s:466    .text:0000000000000200 .L0 
     /tmp/ccUVkai1.s:469    .text:0000000000000208 .L0 
     /tmp/ccUVkai1.s:470    .text:0000000000000208 .L0 
     /tmp/ccUVkai1.s:473    .text:0000000000000210 .L0 
     /tmp/ccUVkai1.s:474    .text:0000000000000210 .L0 
       src/riscv.cpp:102    .text:0000000000000210 .L0 
     /tmp/ccUVkai1.s:493    .text:0000000000000218 .L0 
     /tmp/ccUVkai1.s:494    .text:0000000000000218 .L0 
     /tmp/ccUVkai1.s:495    .text:0000000000000218 .L0 
     /tmp/ccUVkai1.s:502    .text:0000000000000220 .L0 
     /tmp/ccUVkai1.s:508    .text:0000000000000224 .L0 
     /tmp/ccUVkai1.s:509    .text:0000000000000224 .L0 
     /tmp/ccUVkai1.s:513    .text:0000000000000230 .L0 
     /tmp/ccUVkai1.s:522    .text:0000000000000230 .L0 
     /tmp/ccUVkai1.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccUVkai1.s:213    .text:00000000000000d4 .L0 
     /tmp/ccUVkai1.s:47     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccUVkai1.s:218    .text:00000000000000e4 .L0 
GAS LISTING /tmp/ccUVkai1.s 			page 21


     /tmp/ccUVkai1.s:50     .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccUVkai1.s:228    .text:0000000000000100 .L0 
     /tmp/ccUVkai1.s:318    .text:0000000000000160 .L0 
     /tmp/ccUVkai1.s:463    .text:00000000000001f4 .L0 
     /tmp/ccUVkai1.s:243    .text:0000000000000120 .L4
     /tmp/ccUVkai1.s:483    .text:0000000000000218 .L15
     /tmp/ccUVkai1.s:504    .text:0000000000000224 .L16
     /tmp/ccUVkai1.s:358    .text:000000000000018c .L17
     /tmp/ccUVkai1.s:394    .text:00000000000001b0 .L18
     /tmp/ccUVkai1.s:423    .text:00000000000001cc .L19
     /tmp/ccUVkai1.s:458    .text:00000000000001f4 .L20
     /tmp/ccUVkai1.s:231    .text:0000000000000110 .L3
     /tmp/ccUVkai1.s:1530   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccUVkai1.s:2527   .debug_str:00000000000004fd .LASF107
     /tmp/ccUVkai1.s:2487   .debug_str:00000000000003d4 .LASF108
     /tmp/ccUVkai1.s:2407   .debug_str:000000000000016e .LASF109
     /tmp/ccUVkai1.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccUVkai1.s:516    .text:0000000000000230 .Letext0
     /tmp/ccUVkai1.s:2345   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccUVkai1.s:2463   .debug_str:0000000000000351 .LASF0
     /tmp/ccUVkai1.s:2481   .debug_str:00000000000003a3 .LASF1
     /tmp/ccUVkai1.s:2451   .debug_str:00000000000002dc .LASF2
     /tmp/ccUVkai1.s:2433   .debug_str:0000000000000272 .LASF4
     /tmp/ccUVkai1.s:2509   .debug_str:0000000000000481 .LASF3
     /tmp/ccUVkai1.s:2371   .debug_str:0000000000000071 .LASF5
     /tmp/ccUVkai1.s:2485   .debug_str:00000000000003c1 .LASF6
     /tmp/ccUVkai1.s:2461   .debug_str:000000000000033e .LASF7
     /tmp/ccUVkai1.s:2539   .debug_str:0000000000000634 .LASF8
     /tmp/ccUVkai1.s:2421   .debug_str:00000000000001ff .LASF9
     /tmp/ccUVkai1.s:2493   .debug_str:0000000000000410 .LASF10
     /tmp/ccUVkai1.s:2529   .debug_str:00000000000005c1 .LASF11
     /tmp/ccUVkai1.s:2373   .debug_str:0000000000000078 .LASF12
     /tmp/ccUVkai1.s:2355   .debug_str:0000000000000027 .LASF13
     /tmp/ccUVkai1.s:2381   .debug_str:00000000000000c2 .LASF14
     /tmp/ccUVkai1.s:2505   .debug_str:0000000000000453 .LASF15
     /tmp/ccUVkai1.s:2385   .debug_str:00000000000000d3 .LASF16
     /tmp/ccUVkai1.s:2477   .debug_str:0000000000000392 .LASF77
     /tmp/ccUVkai1.s:2447   .debug_str:00000000000002c3 .LASF110
     /tmp/ccUVkai1.s:2515   .debug_str:00000000000004a9 .LASF17
     /tmp/ccUVkai1.s:2475   .debug_str:0000000000000389 .LASF18
     /tmp/ccUVkai1.s:2441   .debug_str:0000000000000290 .LASF19
     /tmp/ccUVkai1.s:2503   .debug_str:0000000000000448 .LASF52
     /tmp/ccUVkai1.s:2557   .debug_str:00000000000006ba .LASF54
     /tmp/ccUVkai1.s:2357   .debug_str:0000000000000037 .LASF20
     /tmp/ccUVkai1.s:2399   .debug_str:0000000000000138 .LASF22
     /tmp/ccUVkai1.s:2395   .debug_str:0000000000000127 .LASF24
     /tmp/ccUVkai1.s:2393   .debug_str:0000000000000112 .LASF26
     /tmp/ccUVkai1.s:2511   .debug_str:0000000000000493 .LASF21
     /tmp/ccUVkai1.s:2497   .debug_str:0000000000000428 .LASF23
     /tmp/ccUVkai1.s:2525   .debug_str:00000000000004f6 .LASF25
     /tmp/ccUVkai1.s:2521   .debug_str:00000000000004d1 .LASF27
     /tmp/ccUVkai1.s:2411   .debug_str:000000000000019f .LASF28
     /tmp/ccUVkai1.s:2387   .debug_str:00000000000000e9 .LASF29
     /tmp/ccUVkai1.s:2351   .debug_str:0000000000000010 .LASF30
     /tmp/ccUVkai1.s:2427   .debug_str:0000000000000240 .LASF31
     /tmp/ccUVkai1.s:2369   .debug_str:0000000000000069 .LASF32
     /tmp/ccUVkai1.s:2375   .debug_str:0000000000000088 .LASF33
GAS LISTING /tmp/ccUVkai1.s 			page 22


     /tmp/ccUVkai1.s:2563   .debug_str:00000000000006e9 .LASF34
     /tmp/ccUVkai1.s:2401   .debug_str:000000000000014d .LASF35
     /tmp/ccUVkai1.s:2465   .debug_str:000000000000035e .LASF36
     /tmp/ccUVkai1.s:2555   .debug_str:00000000000006a7 .LASF37
     /tmp/ccUVkai1.s:2367   .debug_str:0000000000000062 .LASF38
     /tmp/ccUVkai1.s:2409   .debug_str:000000000000018c .LASF39
     /tmp/ccUVkai1.s:2415   .debug_str:00000000000001b5 .LASF40
     /tmp/ccUVkai1.s:2523   .debug_str:00000000000004e4 .LASF41
     /tmp/ccUVkai1.s:2365   .debug_str:000000000000005c .LASF42
     /tmp/ccUVkai1.s:2567   .debug_str:00000000000006fd .LASF43
     /tmp/ccUVkai1.s:2561   .debug_str:00000000000006de .LASF44
     /tmp/ccUVkai1.s:2507   .debug_str:0000000000000469 .LASF45
     /tmp/ccUVkai1.s:2479   .debug_str:0000000000000398 .LASF46
     /tmp/ccUVkai1.s:2517   .debug_str:00000000000004b2 .LASF47
     /tmp/ccUVkai1.s:2379   .debug_str:00000000000000b8 .LASF48
     /tmp/ccUVkai1.s:2429   .debug_str:0000000000000254 .LASF49
     /tmp/ccUVkai1.s:2455   .debug_str:00000000000002fd .LASF50
     /tmp/ccUVkai1.s:2423   .debug_str:000000000000020d .LASF51
     /tmp/ccUVkai1.s:2513   .debug_str:000000000000049a .LASF53
     /tmp/ccUVkai1.s:2377   .debug_str:000000000000009c .LASF55
     /tmp/ccUVkai1.s:2545   .debug_str:0000000000000655 .LASF65
     /tmp/ccUVkai1.s:2445   .debug_str:00000000000002a1 .LASF67
     /tmp/ccUVkai1.s:2431   .debug_str:000000000000026a .LASF56
     /tmp/ccUVkai1.s:2363   .debug_str:0000000000000054 .LASF57
     /tmp/ccUVkai1.s:2439   .debug_str:000000000000028b .LASF58
     /tmp/ccUVkai1.s:2437   .debug_str:0000000000000282 .LASF59
     /tmp/ccUVkai1.s:2469   .debug_str:0000000000000374 .LASF60
     /tmp/ccUVkai1.s:2443   .debug_str:0000000000000299 .LASF61
     /tmp/ccUVkai1.s:2473   .debug_str:000000000000037f .LASF62
     /tmp/ccUVkai1.s:2397   .debug_str:0000000000000130 .LASF79
     /tmp/ccUVkai1.s:2361   .debug_str:0000000000000047 .LASF63
     /tmp/ccUVkai1.s:2535   .debug_str:00000000000005eb .LASF64
     /tmp/ccUVkai1.s:2449   .debug_str:00000000000002ce .LASF66
     /tmp/ccUVkai1.s:2425   .debug_str:0000000000000223 .LASF68
     /tmp/ccUVkai1.s:2353   .debug_str:0000000000000018 .LASF69
     /tmp/ccUVkai1.s:2537   .debug_str:0000000000000616 .LASF70
     /tmp/ccUVkai1.s:2403   .debug_str:0000000000000161 .LASF71
     /tmp/ccUVkai1.s:2347   .debug_str:0000000000000000 .LASF72
     /tmp/ccUVkai1.s:2405   .debug_str:0000000000000166 .LASF73
     /tmp/ccUVkai1.s:2489   .debug_str:00000000000003e2 .LASF74
     /tmp/ccUVkai1.s:2553   .debug_str:00000000000006a2 .LASF75
     /tmp/ccUVkai1.s:2501   .debug_str:0000000000000443 .LASF76
     /tmp/ccUVkai1.s:2457   .debug_str:0000000000000307 .LASF78
     /tmp/ccUVkai1.s:2495   .debug_str:000000000000041f .LASF80
     /tmp/ccUVkai1.s:2349   .debug_str:0000000000000009 .LASF81
     /tmp/ccUVkai1.s:2389   .debug_str:00000000000000fd .LASF82
     /tmp/ccUVkai1.s:2551   .debug_str:0000000000000698 .LASF83
     /tmp/ccUVkai1.s:2491   .debug_str:00000000000003e7 .LASF84
     /tmp/ccUVkai1.s:2483   .debug_str:00000000000003b6 .LASF85
     /tmp/ccUVkai1.s:2417   .debug_str:00000000000001bb .LASF86
     /tmp/ccUVkai1.s:2541   .debug_str:0000000000000644 .LASF87
     /tmp/ccUVkai1.s:2547   .debug_str:000000000000066a .LASF89
     /tmp/ccUVkai1.s:2435   .debug_str:0000000000000279 .LASF88
     /tmp/ccUVkai1.s:2419   .debug_str:00000000000001de .LASF90
     /tmp/ccUVkai1.s:2467   .debug_str:0000000000000365 .LASF91
     /tmp/ccUVkai1.s:2459   .debug_str:0000000000000317 .LASF92
     /tmp/ccUVkai1.s:57     .text:0000000000000020 .LFB17
GAS LISTING /tmp/ccUVkai1.s 			page 23


     /tmp/ccUVkai1.s:514    .text:0000000000000230 .LFE17
     /tmp/ccUVkai1.s:2471   .debug_str:000000000000037a .LASF93
     /tmp/ccUVkai1.s:2499   .debug_str:000000000000043b .LASF94
     /tmp/ccUVkai1.s:2359   .debug_str:0000000000000040 .LASF95
     /tmp/ccUVkai1.s:364    .text:000000000000018c .LBB52
     /tmp/ccUVkai1.s:392    .text:00000000000001ac .LBE52
     /tmp/ccUVkai1.s:2248   .debug_loc:0000000000000000 .LLST8
     /tmp/ccUVkai1.s:2531   .debug_str:00000000000005d0 .LASF96
     /tmp/ccUVkai1.s:2256   .debug_loc:0000000000000025 .LLST9
     /tmp/ccUVkai1.s:2543   .debug_str:000000000000064e .LASF97
     /tmp/ccUVkai1.s:370    .text:0000000000000198 .LVL12
     /tmp/ccUVkai1.s:374    .text:00000000000001a0 .LVL13
     /tmp/ccUVkai1.s:396    .text:00000000000001b0 .LBB48
     /tmp/ccUVkai1.s:421    .text:00000000000001c8 .LBE48
     /tmp/ccUVkai1.s:2263   .debug_loc:0000000000000048 .LLST7
     /tmp/ccUVkai1.s:403    .text:00000000000001bc .LVL16
     /tmp/ccUVkai1.s:425    .text:00000000000001cc .LBB45
     /tmp/ccUVkai1.s:456    .text:00000000000001f0 .LBE45
     /tmp/ccUVkai1.s:2519   .debug_str:00000000000004ca .LASF98
     /tmp/ccUVkai1.s:2271   .debug_loc:000000000000006d .LLST3
     /tmp/ccUVkai1.s:2413   .debug_str:00000000000001a7 .LASF99
     /tmp/ccUVkai1.s:2279   .debug_loc:0000000000000092 .LLST4
     /tmp/ccUVkai1.s:2287   .debug_loc:00000000000000b6 .LLST5
     /tmp/ccUVkai1.s:2565   .debug_str:00000000000006f1 .LASF100
     /tmp/ccUVkai1.s:2295   .debug_loc:00000000000000da .LLST6
     /tmp/ccUVkai1.s:438    .text:00000000000001e4 .LVL19
     /tmp/ccUVkai1.s:460    .text:00000000000001f4 .LBB44
     /tmp/ccUVkai1.s:481    .text:0000000000000214 .LBE44
     /tmp/ccUVkai1.s:471    .text:0000000000000210 .LVL21
     /tmp/ccUVkai1.s:112    .text:0000000000000050 .LBB26
     /tmp/ccUVkai1.s:128    .text:000000000000005c .LBE26
     /tmp/ccUVkai1.s:132    .text:0000000000000060 .LBB28
     /tmp/ccUVkai1.s:147    .text:000000000000006c .LBE28
     /tmp/ccUVkai1.s:160    .text:0000000000000078 .LBB30
     /tmp/ccUVkai1.s:175    .text:0000000000000084 .LBE30
     /tmp/ccUVkai1.s:258    .text:0000000000000130 .LBB34
     /tmp/ccUVkai1.s:269    .text:0000000000000134 .LBE34
     /tmp/ccUVkai1.s:2303   .debug_loc:00000000000000fe .LLST0
     /tmp/ccUVkai1.s:330    .text:000000000000017c .LBB40
     /tmp/ccUVkai1.s:341    .text:0000000000000180 .LBE40
     /tmp/ccUVkai1.s:2310   .debug_loc:0000000000000121 .LLST1
     /tmp/ccUVkai1.s:346    .text:0000000000000184 .LBB42
     /tmp/ccUVkai1.s:360    .text:000000000000018c .LBE42
     /tmp/ccUVkai1.s:2317   .debug_loc:0000000000000144 .LLST2
     /tmp/ccUVkai1.s:491    .text:0000000000000218 .LBB60
     /tmp/ccUVkai1.s:506    .text:0000000000000224 .LBE60
     /tmp/ccUVkai1.s:2324   .debug_loc:0000000000000167 .LLST10
     /tmp/ccUVkai1.s:210    .text:00000000000000d4 .LVL0
     /tmp/ccUVkai1.s:215    .text:00000000000000e4 .LVL1
     /tmp/ccUVkai1.s:220    .text:00000000000000f4 .LVL2
     /tmp/ccUVkai1.s:225    .text:0000000000000100 .LVL3
     /tmp/ccUVkai1.s:230    .text:0000000000000110 .LVL4
     /tmp/ccUVkai1.s:325    .text:0000000000000178 .LVL7
     /tmp/ccUVkai1.s:510    .text:000000000000022c .LVL25
     /tmp/ccUVkai1.s:10     .text:0000000000000000 .LFB16
     /tmp/ccUVkai1.s:40     .text:0000000000000020 .LFE16
     /tmp/ccUVkai1.s:2383   .debug_str:00000000000000ce .LASF101
GAS LISTING /tmp/ccUVkai1.s 			page 24


     /tmp/ccUVkai1.s:2533   .debug_str:00000000000005d9 .LASF102
     /tmp/ccUVkai1.s:2549   .debug_str:000000000000068b .LASF104
     /tmp/ccUVkai1.s:2453   .debug_str:00000000000002ea .LASF103
     /tmp/ccUVkai1.s:2559   .debug_str:00000000000006d2 .LASF105
     /tmp/ccUVkai1.s:2391   .debug_str:0000000000000102 .LASF106
     /tmp/ccUVkai1.s:357    .text:000000000000018c .LVL11
     /tmp/ccUVkai1.s:398    .text:00000000000001b0 .LVL15
     /tmp/ccUVkai1.s:427    .text:00000000000001cc .LVL18
     /tmp/ccUVkai1.s:257    .text:0000000000000130 .LVL5
     /tmp/ccUVkai1.s:266    .text:0000000000000134 .LVL6
     /tmp/ccUVkai1.s:329    .text:000000000000017c .LVL8
     /tmp/ccUVkai1.s:338    .text:0000000000000180 .LVL9
     /tmp/ccUVkai1.s:345    .text:0000000000000184 .LVL10
     /tmp/ccUVkai1.s:490    .text:0000000000000218 .LVL23
     /tmp/ccUVkai1.s:503    .text:0000000000000224 .LVL24
     /tmp/ccUVkai1.s:523    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z12printIntegerm
_Z11printStringPKc
_ZN7_thread7runningE
_ZN7_thread14threadDispatchEv
_ZN15MemoryAllocator14convert2BlocksEm
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN7_thread12threadCreateEPPS_PFvPvES2_S2_
console_handler
