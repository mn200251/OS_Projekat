GAS LISTING /tmp/ccmN9ltC.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB33:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::popSppSpie()
  10:src/riscv.cpp **** {
  12              		.loc 1 10 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 11 5
  21              		.loc 1 11 38 is_stmt 0
  22              	#APP
  23              	# 11 "src/riscv.cpp" 1
  12              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              		.loc 1 12 29 is_stmt 0
  28              	# 12 "src/riscv.cpp" 1
  13              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 13 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE33:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB34:
  14:src/riscv.cpp **** 
GAS LISTING /tmp/ccmN9ltC.s 			page 2


  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  16:src/riscv.cpp **** {
  47              		.loc 1 16 1 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FA 		addi	sp,sp,-96
  50              		.cfi_def_cfa_offset 96
  51 0024 233C1104 		sd	ra,88(sp)
  52 0028 23388104 		sd	s0,80(sp)
  53              		.cfi_offset 1, -8
  54              		.cfi_offset 8, -16
  55 002c 13040106 		addi	s0,sp,96
  56              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp ****     uint64 scause = r_scause();
  57              		.loc 1 17 5
  58              	.LBB30:
  59              	.LBB31:
  60              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccmN9ltC.s 			page 3


  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  61              		.loc 2 91 5
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  62              		.loc 2 92 5
  63              		.loc 2 92 72 is_stmt 0
  64              	#APP
  65              	# 92 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccmN9ltC.s 			page 4


  93              	    return scause;
  66              		csrr a5, scause
  67              	# 0 "" 2
  68              	#NO_APP
  69 0034 2334F4FC 		sd	a5,-56(s0)
  70              		.loc 2 93 5 is_stmt 1
  71              		.loc 2 93 12 is_stmt 0
  72 0038 033784FC 		ld	a4,-56(s0)
  73              	.LVL0:
  74              	.LBE31:
  75              	.LBE30:
  18:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
  76              		.loc 1 18 5 is_stmt 1
  77              	.LBB32:
  78              		.loc 1 18 40 is_stmt 0
  79 003c 930687FF 		addi	a3,a4,-8
  80              		.loc 1 18 5
  81 0040 93071000 		li	a5,1
  82 0044 63FAD702 		bleu	a3,a5,.L8
  83              	.LBE32:
  19:src/riscv.cpp ****     {
  20:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  21:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  22:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  23:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  24:src/riscv.cpp ****         TCB::dispatch();
  25:src/riscv.cpp ****         w_sstatus(sstatus);
  26:src/riscv.cpp ****         w_sepc(sepc);
  27:src/riscv.cpp ****     }
  28:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
  84              		.loc 1 28 10 is_stmt 1
  85              	.LBB59:
  86              	.LBB33:
  87 0048 9307F0FF 		li	a5,-1
  88 004c 9397F703 		slli	a5,a5,63
  89 0050 93871700 		addi	a5,a5,1
  90 0054 6308F706 		beq	a4,a5,.L9
  29:src/riscv.cpp ****     {
  30:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  31:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  32:src/riscv.cpp ****         TCB::timeSliceCounter++;
  33:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  34:src/riscv.cpp ****         {
  35:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
  36:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
  37:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
  38:src/riscv.cpp ****             TCB::dispatch();
  39:src/riscv.cpp ****             w_sstatus(sstatus);
  40:src/riscv.cpp ****             w_sepc(sepc);
  41:src/riscv.cpp ****         }
  42:src/riscv.cpp ****     }
  43:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
  91              		.loc 1 43 10
  92 0058 9307F0FF 		li	a5,-1
  93 005c 9397F703 		slli	a5,a5,63
  94 0060 93879700 		addi	a5,a5,9
  95 0064 630CF70C 		beq	a4,a5,.L10
GAS LISTING /tmp/ccmN9ltC.s 			page 5


  96              	.LVL1:
  97              	.L3:
  98              	.LBE33:
  99              	.LBE59:
  44:src/riscv.cpp ****     {
  45:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  46:src/riscv.cpp ****         console_handler();
  47:src/riscv.cpp ****     }
  48:src/riscv.cpp ****     else
  49:src/riscv.cpp ****     {
  50:src/riscv.cpp ****         // unexpected trap cause
  51:src/riscv.cpp ****     }
  52:src/riscv.cpp **** }...
 100              		.loc 1 52 1 is_stmt 0
 101 0068 83308105 		ld	ra,88(sp)
 102              		.cfi_remember_state
 103              		.cfi_restore 1
 104 006c 03340105 		ld	s0,80(sp)
 105              		.cfi_restore 8
 106              		.cfi_def_cfa 2, 96
 107 0070 13010106 		addi	sp,sp,96
 108              		.cfi_def_cfa_offset 0
 109 0074 67800000 		jr	ra
 110              	.LVL2:
 111              	.L8:
 112              		.cfi_restore_state
 113              	.LBB60:
 114              	.LBB49:
  21:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 115              		.loc 1 21 9 is_stmt 1
 116              	.LBB50:
 117              	.LBB51:
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 118              		.loc 2 103 5
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 119              		.loc 2 104 5
 120              		.loc 2 104 64 is_stmt 0
 121              	#APP
 122              	# 104 "src/../h/riscv.hpp" 1
 105              	    return sepc;
 123              		csrr a5, sepc
 124              	# 0 "" 2
 125              	#NO_APP
 126 007c 233CF4FC 		sd	a5,-40(s0)
 127              		.loc 2 105 5 is_stmt 1
 128              		.loc 2 105 12 is_stmt 0
 129 0080 833784FD 		ld	a5,-40(s0)
 130              	.LBE51:
GAS LISTING /tmp/ccmN9ltC.s 			page 6


 131              	.LBE50:
  21:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 132              		.loc 1 21 41
 133 0084 93874700 		addi	a5,a5,4
  21:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 134              		.loc 1 21 43
 135 0088 2334F4FA 		sd	a5,-88(s0)
  22:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 136              		.loc 1 22 9 is_stmt 1
 137              	.LBB52:
 138              	.LBB53:
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
GAS LISTING /tmp/ccmN9ltC.s 			page 7


 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 139              		.loc 2 171 5
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 140              		.loc 2 172 5
 141              		.loc 2 172 76 is_stmt 0
 142              	#APP
 143              	# 172 "src/../h/riscv.hpp" 1
 173              	    return sstatus;
 144              		csrr a5, sstatus
 145              	# 0 "" 2
 146              	#NO_APP
 147 0090 2338F4FC 		sd	a5,-48(s0)
 148              		.loc 2 173 5 is_stmt 1
 149              		.loc 2 173 12 is_stmt 0
 150 0094 833704FD 		ld	a5,-48(s0)
 151              	.LBE53:
 152              	.LBE52:
  22:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 153              		.loc 1 22 45
 154 0098 2338F4FA 		sd	a5,-80(s0)
  23:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 155              		.loc 1 23 9 is_stmt 1
  23:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 156              		.loc 1 23 31 is_stmt 0
 157 009c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 157      83B70700 
 158 00a4 23B00700 		sd	zero,0(a5)
  24:src/riscv.cpp ****         TCB::dispatch();
 159              		.loc 1 24 9 is_stmt 1
  24:src/riscv.cpp ****         TCB::dispatch();
 160              		.loc 1 24 22 is_stmt 0
 161 00a8 97000000 		call	_ZN3TCB8dispatchEv@plt
 161      E7800000 
 162              	.LVL3:
  25:src/riscv.cpp ****         w_sstatus(sstatus);
 163              		.loc 1 25 9 is_stmt 1
  25:src/riscv.cpp ****         w_sstatus(sstatus);
 164              		.loc 1 25 18 is_stmt 0
GAS LISTING /tmp/ccmN9ltC.s 			page 8


 165 00b0 833704FB 		ld	a5,-80(s0)
 166              	.LVL4:
 167              	.LBB54:
 168              	.LBB55:
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 169              		.loc 2 178 5 is_stmt 1
 170              		.loc 2 178 77 is_stmt 0
 171              	#APP
 172              	# 178 "src/../h/riscv.hpp" 1
 179              	}
 173              		csrw sstatus, a5
 174              	# 0 "" 2
 175              	.LVL5:
 176              	#NO_APP
 177              	.LBE55:
 178              	.LBE54:
  26:src/riscv.cpp ****         w_sepc(sepc);
 179              		.loc 1 26 9 is_stmt 1
  26:src/riscv.cpp ****         w_sepc(sepc);
 180              		.loc 1 26 15 is_stmt 0
 181 00b8 833784FA 		ld	a5,-88(s0)
 182              	.LVL6:
 183              	.LBB56:
 184              	.LBB57:
 110:src/../h/riscv.hpp **** }
 185              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 186              		.loc 2 110 65 is_stmt 0
 187              	#APP
 188              	# 110 "src/../h/riscv.hpp" 1
 111:src/../h/riscv.hpp **** 
 189              		csrw sepc, a5
 190              	# 0 "" 2
 191              		.loc 2 111 1
 192              	#NO_APP
 193 00c0 6FF09FFA 		j	.L3
 194              	.LVL7:
 195              	.L9:
 196              	.LBE57:
 197              	.LBE56:
 198              	.LBE49:
 199              	.LBB58:
 200              	.LBB34:
  31:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 201              		.loc 1 31 9 is_stmt 1
 202              	.LBB35:
 203              	.LBB36:
 144:src/../h/riscv.hpp **** }
 204              		.loc 2 144 5
 144:src/../h/riscv.hpp **** }
 205              		.loc 2 144 64 is_stmt 0
 206 00c4 93072000 		li	a5,2
 207              	#APP
GAS LISTING /tmp/ccmN9ltC.s 			page 9


 208              	# 144 "src/../h/riscv.hpp" 1
 209              		csrc sip, a5
 210              	# 0 "" 2
 211              	.LVL8:
 212              	#NO_APP
 213              	.LBE36:
 214              	.LBE35:
  32:src/riscv.cpp ****         TCB::timeSliceCounter++;
 215              		.loc 1 32 9 is_stmt 1
  32:src/riscv.cpp ****         TCB::timeSliceCounter++;
 216              		.loc 1 32 30 is_stmt 0
 217 00cc 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 217      03370700 
 218              	.LVL9:
 219 00d4 83370700 		ld	a5,0(a4)
 220 00d8 93871700 		addi	a5,a5,1
 221 00dc 2330F700 		sd	a5,0(a4)
  33:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 222              		.loc 1 33 9 is_stmt 1
 223              	.LBB37:
  33:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 224              		.loc 1 33 64 is_stmt 0
 225 00e0 17070000 		la	a4,_ZN3TCB7runningE
 225      03370700 
 226 00e8 03370700 		ld	a4,0(a4)
 227              	.LVL10:
 228              	.LBB38:
 229              	.LBB39:
 230              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 231              		.loc 3 21 35 is_stmt 1
 232              		.loc 3 21 42 is_stmt 0
 233 00ec 03370702 		ld	a4,32(a4)
 234              	.LVL11:
 235              	.LBE39:
 236              	.LBE38:
  33:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
GAS LISTING /tmp/ccmN9ltC.s 			page 10


 237              		.loc 1 33 9
 238 00f0 E3ECE7F6 		bltu	a5,a4,.L3
 239              	.LBB40:
  35:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 240              		.loc 1 35 13 is_stmt 1
 241              	.LBB41:
 242              	.LBB42:
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 243              		.loc 2 103 5
 104:src/../h/riscv.hpp ****     return sepc;
 244              		.loc 2 104 5
 104:src/../h/riscv.hpp ****     return sepc;
 245              		.loc 2 104 64 is_stmt 0
 246              	#APP
 247              	# 104 "src/../h/riscv.hpp" 1
 248              		csrr a5, sepc
 249              	# 0 "" 2
 250              	#NO_APP
 251 00f8 2334F4FE 		sd	a5,-24(s0)
 105:src/../h/riscv.hpp **** }
 252              		.loc 2 105 5 is_stmt 1
 105:src/../h/riscv.hpp **** }
 253              		.loc 2 105 12 is_stmt 0
 254 00fc 833784FE 		ld	a5,-24(s0)
 255              	.LBE42:
 256              	.LBE41:
  35:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 257              		.loc 1 35 43
 258 0100 233CF4FA 		sd	a5,-72(s0)
  36:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 259              		.loc 1 36 13 is_stmt 1
 260              	.LBB43:
 261              	.LBB44:
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 262              		.loc 2 171 5
 172:src/../h/riscv.hpp ****     return sstatus;
 263              		.loc 2 172 5
 172:src/../h/riscv.hpp ****     return sstatus;
 264              		.loc 2 172 76 is_stmt 0
 265              	#APP
 266              	# 172 "src/../h/riscv.hpp" 1
 267              		csrr a5, sstatus
 268              	# 0 "" 2
 269              	#NO_APP
 270 0108 2330F4FE 		sd	a5,-32(s0)
 173:src/../h/riscv.hpp **** }
 271              		.loc 2 173 5 is_stmt 1
 173:src/../h/riscv.hpp **** }
 272              		.loc 2 173 12 is_stmt 0
 273 010c 833704FE 		ld	a5,-32(s0)
 274              	.LBE44:
 275              	.LBE43:
  36:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 276              		.loc 1 36 49
 277 0110 2330F4FC 		sd	a5,-64(s0)
  37:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 278              		.loc 1 37 13 is_stmt 1
GAS LISTING /tmp/ccmN9ltC.s 			page 11


  37:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 279              		.loc 1 37 35 is_stmt 0
 280 0114 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 280      83B70700 
 281 011c 23B00700 		sd	zero,0(a5)
  38:src/riscv.cpp ****             TCB::dispatch();
 282              		.loc 1 38 13 is_stmt 1
  38:src/riscv.cpp ****             TCB::dispatch();
 283              		.loc 1 38 26 is_stmt 0
 284 0120 97000000 		call	_ZN3TCB8dispatchEv@plt
 284      E7800000 
 285              	.LVL12:
  39:src/riscv.cpp ****             w_sstatus(sstatus);
 286              		.loc 1 39 13 is_stmt 1
  39:src/riscv.cpp ****             w_sstatus(sstatus);
 287              		.loc 1 39 22 is_stmt 0
 288 0128 833704FC 		ld	a5,-64(s0)
 289              	.LVL13:
 290              	.LBB45:
 291              	.LBB46:
 178:src/../h/riscv.hpp **** }
 292              		.loc 2 178 5 is_stmt 1
 178:src/../h/riscv.hpp **** }
 293              		.loc 2 178 77 is_stmt 0
 294              	#APP
 295              	# 178 "src/../h/riscv.hpp" 1
 296              		csrw sstatus, a5
 297              	# 0 "" 2
 298              	.LVL14:
 299              	#NO_APP
 300              	.LBE46:
 301              	.LBE45:
  40:src/riscv.cpp ****             w_sepc(sepc);
 302              		.loc 1 40 13 is_stmt 1
  40:src/riscv.cpp ****             w_sepc(sepc);
 303              		.loc 1 40 19 is_stmt 0
 304 0130 833784FB 		ld	a5,-72(s0)
 305              	.LVL15:
 306              	.LBB47:
 307              	.LBB48:
 110:src/../h/riscv.hpp **** }
 308              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 309              		.loc 2 110 65 is_stmt 0
 310              	#APP
 311              	# 110 "src/../h/riscv.hpp" 1
 111:src/../h/riscv.hpp **** 
 312              		csrw sepc, a5
 313              	# 0 "" 2
 314              		.loc 2 111 1
 315              	#NO_APP
 316 0138 6FF01FF3 		j	.L3
 317              	.LVL16:
 318              	.L10:
 319              	.LBE48:
 320              	.LBE47:
 321              	.LBE40:
GAS LISTING /tmp/ccmN9ltC.s 			page 12


 322              	.LBE37:
 323              	.LBE34:
  46:src/riscv.cpp ****         console_handler();
 324              		.loc 1 46 9 is_stmt 1
  46:src/riscv.cpp ****         console_handler();
 325              		.loc 1 46 24 is_stmt 0
 326 013c 97000000 		call	console_handler@plt
 326      E7800000 
 327              	.LVL17:
 328              	.LBE58:
 329              	.LBE60:
 330              		.loc 1 52 1
 331 0144 6FF05FF2 		j	.L3
 332              		.cfi_endproc
 333              	.LFE34:
 335              	.Letext0:
 336              		.file 4 "src/../h/../lib/hw.h"
 337              		.file 5 "src/../lib/console.h"
GAS LISTING /tmp/ccmN9ltC.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccmN9ltC.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccmN9ltC.s:13     .text:0000000000000000 .L0 
     /tmp/ccmN9ltC.s:14     .text:0000000000000000 .L0 
     /tmp/ccmN9ltC.s:15     .text:0000000000000004 .L0 
     /tmp/ccmN9ltC.s:17     .text:0000000000000008 .L0 
     /tmp/ccmN9ltC.s:19     .text:000000000000000c .L0 
     /tmp/ccmN9ltC.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:11     .text:000000000000000c .L0 
     /tmp/ccmN9ltC.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:12     .text:0000000000000010 .L0 
     /tmp/ccmN9ltC.s:33     .text:0000000000000014 .L0 
     /tmp/ccmN9ltC.s:34     .text:0000000000000018 .L0 
     /tmp/ccmN9ltC.s:35     .text:0000000000000018 .L0 
     /tmp/ccmN9ltC.s:37     .text:000000000000001c .L0 
     /tmp/ccmN9ltC.s:39     .text:0000000000000020 .L0 
     /tmp/ccmN9ltC.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccmN9ltC.s:48     .text:0000000000000020 .L0 
     /tmp/ccmN9ltC.s:49     .text:0000000000000020 .L0 
     /tmp/ccmN9ltC.s:50     .text:0000000000000024 .L0 
     /tmp/ccmN9ltC.s:53     .text:000000000000002c .L0 
     /tmp/ccmN9ltC.s:54     .text:000000000000002c .L0 
     /tmp/ccmN9ltC.s:56     .text:0000000000000030 .L0 
     /tmp/ccmN9ltC.s:61     .text:0000000000000030 .L0 
     /tmp/ccmN9ltC.s:62     .text:0000000000000030 .L0 
     /tmp/ccmN9ltC.s:63     .text:0000000000000030 .L0 
  src/../h/riscv.hpp:92     .text:0000000000000030 .L0 
     /tmp/ccmN9ltC.s:71     .text:0000000000000038 .L0 
     /tmp/ccmN9ltC.s:72     .text:0000000000000038 .L0 
     /tmp/ccmN9ltC.s:78     .text:000000000000003c .L0 
     /tmp/ccmN9ltC.s:79     .text:000000000000003c .L0 
     /tmp/ccmN9ltC.s:81     .text:0000000000000040 .L0 
     /tmp/ccmN9ltC.s:87     .text:0000000000000048 .L0 
     /tmp/ccmN9ltC.s:92     .text:0000000000000058 .L0 
     /tmp/ccmN9ltC.s:101    .text:0000000000000068 .L0 
     /tmp/ccmN9ltC.s:102    .text:000000000000006c .L0 
     /tmp/ccmN9ltC.s:103    .text:000000000000006c .L0 
     /tmp/ccmN9ltC.s:105    .text:0000000000000070 .L0 
     /tmp/ccmN9ltC.s:106    .text:0000000000000070 .L0 
     /tmp/ccmN9ltC.s:108    .text:0000000000000074 .L0 
     /tmp/ccmN9ltC.s:112    .text:0000000000000078 .L0 
     /tmp/ccmN9ltC.s:118    .text:0000000000000078 .L0 
     /tmp/ccmN9ltC.s:119    .text:0000000000000078 .L0 
     /tmp/ccmN9ltC.s:120    .text:0000000000000078 .L0 
  src/../h/riscv.hpp:104    .text:0000000000000078 .L0 
     /tmp/ccmN9ltC.s:128    .text:0000000000000080 .L0 
     /tmp/ccmN9ltC.s:129    .text:0000000000000080 .L0 
     /tmp/ccmN9ltC.s:133    .text:0000000000000084 .L0 
     /tmp/ccmN9ltC.s:135    .text:0000000000000088 .L0 
     /tmp/ccmN9ltC.s:139    .text:000000000000008c .L0 
     /tmp/ccmN9ltC.s:140    .text:000000000000008c .L0 
     /tmp/ccmN9ltC.s:141    .text:000000000000008c .L0 
  src/../h/riscv.hpp:172    .text:000000000000008c .L0 
     /tmp/ccmN9ltC.s:149    .text:0000000000000094 .L0 
     /tmp/ccmN9ltC.s:150    .text:0000000000000094 .L0 
     /tmp/ccmN9ltC.s:154    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccmN9ltC.s 			page 14


     /tmp/ccmN9ltC.s:156    .text:000000000000009c .L0 
     /tmp/ccmN9ltC.s:157    .text:000000000000009c .L0 
     /tmp/ccmN9ltC.s:160    .text:00000000000000a8 .L0 
     /tmp/ccmN9ltC.s:161    .text:00000000000000a8 .L0 
     /tmp/ccmN9ltC.s:164    .text:00000000000000b0 .L0 
     /tmp/ccmN9ltC.s:165    .text:00000000000000b0 .L0 
     /tmp/ccmN9ltC.s:170    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:178    .text:00000000000000b4 .L0 
     /tmp/ccmN9ltC.s:180    .text:00000000000000b8 .L0 
     /tmp/ccmN9ltC.s:181    .text:00000000000000b8 .L0 
     /tmp/ccmN9ltC.s:186    .text:00000000000000bc .L0 
  src/../h/riscv.hpp:110    .text:00000000000000bc .L0 
     /tmp/ccmN9ltC.s:193    .text:00000000000000c0 .L0 
     /tmp/ccmN9ltC.s:204    .text:00000000000000c4 .L0 
     /tmp/ccmN9ltC.s:205    .text:00000000000000c4 .L0 
     /tmp/ccmN9ltC.s:206    .text:00000000000000c4 .L0 
     /tmp/ccmN9ltC.s:216    .text:00000000000000cc .L0 
     /tmp/ccmN9ltC.s:217    .text:00000000000000cc .L0 
     /tmp/ccmN9ltC.s:224    .text:00000000000000e0 .L0 
     /tmp/ccmN9ltC.s:225    .text:00000000000000e0 .L0 
     /tmp/ccmN9ltC.s:232    .text:00000000000000ec .L0 
     /tmp/ccmN9ltC.s:233    .text:00000000000000ec .L0 
     /tmp/ccmN9ltC.s:238    .text:00000000000000f0 .L0 
     /tmp/ccmN9ltC.s:243    .text:00000000000000f4 .L0 
     /tmp/ccmN9ltC.s:244    .text:00000000000000f4 .L0 
     /tmp/ccmN9ltC.s:245    .text:00000000000000f4 .L0 
  src/../h/riscv.hpp:104    .text:00000000000000f4 .L0 
     /tmp/ccmN9ltC.s:253    .text:00000000000000fc .L0 
     /tmp/ccmN9ltC.s:254    .text:00000000000000fc .L0 
     /tmp/ccmN9ltC.s:258    .text:0000000000000100 .L0 
     /tmp/ccmN9ltC.s:262    .text:0000000000000104 .L0 
     /tmp/ccmN9ltC.s:263    .text:0000000000000104 .L0 
     /tmp/ccmN9ltC.s:264    .text:0000000000000104 .L0 
  src/../h/riscv.hpp:172    .text:0000000000000104 .L0 
     /tmp/ccmN9ltC.s:272    .text:000000000000010c .L0 
     /tmp/ccmN9ltC.s:273    .text:000000000000010c .L0 
     /tmp/ccmN9ltC.s:277    .text:0000000000000110 .L0 
     /tmp/ccmN9ltC.s:279    .text:0000000000000114 .L0 
     /tmp/ccmN9ltC.s:280    .text:0000000000000114 .L0 
     /tmp/ccmN9ltC.s:283    .text:0000000000000120 .L0 
     /tmp/ccmN9ltC.s:284    .text:0000000000000120 .L0 
     /tmp/ccmN9ltC.s:287    .text:0000000000000128 .L0 
     /tmp/ccmN9ltC.s:288    .text:0000000000000128 .L0 
     /tmp/ccmN9ltC.s:293    .text:000000000000012c .L0 
  src/../h/riscv.hpp:178    .text:000000000000012c .L0 
     /tmp/ccmN9ltC.s:303    .text:0000000000000130 .L0 
     /tmp/ccmN9ltC.s:304    .text:0000000000000130 .L0 
     /tmp/ccmN9ltC.s:309    .text:0000000000000134 .L0 
  src/../h/riscv.hpp:110    .text:0000000000000134 .L0 
     /tmp/ccmN9ltC.s:316    .text:0000000000000138 .L0 
     /tmp/ccmN9ltC.s:325    .text:000000000000013c .L0 
     /tmp/ccmN9ltC.s:326    .text:000000000000013c .L0 
     /tmp/ccmN9ltC.s:331    .text:0000000000000144 .L0 
     /tmp/ccmN9ltC.s:332    .text:0000000000000148 .L0 
     /tmp/ccmN9ltC.s:338    .text:0000000000000148 .L0 
     /tmp/ccmN9ltC.s:157    .text:000000000000009c .L0 
     /tmp/ccmN9ltC.s:217    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccmN9ltC.s 			page 15


     /tmp/ccmN9ltC.s:225    .text:00000000000000e0 .L0 
     /tmp/ccmN9ltC.s:280    .text:0000000000000114 .L0 
     /tmp/ccmN9ltC.s:111    .text:0000000000000078 .L8
     /tmp/ccmN9ltC.s:195    .text:00000000000000c4 .L9
     /tmp/ccmN9ltC.s:318    .text:000000000000013c .L10
     /tmp/ccmN9ltC.s:97     .text:0000000000000068 .L3
     /tmp/ccmN9ltC.s:1226   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccmN9ltC.s:2300   .debug_str:00000000000004b2 .LASF87
     /tmp/ccmN9ltC.s:2258   .debug_str:0000000000000388 .LASF88
     /tmp/ccmN9ltC.s:2182   .debug_str:0000000000000169 .LASF89
     /tmp/ccmN9ltC.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccmN9ltC.s:335    .text:0000000000000148 .Letext0
     /tmp/ccmN9ltC.s:2128   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccmN9ltC.s:2236   .debug_str:0000000000000316 .LASF0
     /tmp/ccmN9ltC.s:2254   .debug_str:0000000000000362 .LASF1
     /tmp/ccmN9ltC.s:2226   .debug_str:00000000000002cf .LASF2
     /tmp/ccmN9ltC.s:2204   .debug_str:000000000000023a .LASF4
     /tmp/ccmN9ltC.s:2280   .debug_str:000000000000041b .LASF3
     /tmp/ccmN9ltC.s:2148   .debug_str:000000000000005e .LASF5
     /tmp/ccmN9ltC.s:2256   .debug_str:0000000000000375 .LASF6
     /tmp/ccmN9ltC.s:2234   .debug_str:0000000000000303 .LASF7
     /tmp/ccmN9ltC.s:2304   .debug_str:0000000000000585 .LASF8
     /tmp/ccmN9ltC.s:2192   .debug_str:00000000000001bf .LASF9
     /tmp/ccmN9ltC.s:2262   .debug_str:00000000000003a1 .LASF10
     /tmp/ccmN9ltC.s:2302   .debug_str:0000000000000576 .LASF11
     /tmp/ccmN9ltC.s:2150   .debug_str:0000000000000065 .LASF12
     /tmp/ccmN9ltC.s:2132   .debug_str:0000000000000008 .LASF13
     /tmp/ccmN9ltC.s:2158   .debug_str:00000000000000af .LASF14
     /tmp/ccmN9ltC.s:2274   .debug_str:00000000000003e7 .LASF15
     /tmp/ccmN9ltC.s:2162   .debug_str:00000000000000c8 .LASF16
     /tmp/ccmN9ltC.s:2250   .debug_str:0000000000000351 .LASF56
     /tmp/ccmN9ltC.s:2216   .debug_str:0000000000000282 .LASF90
     /tmp/ccmN9ltC.s:2290   .debug_str:0000000000000465 .LASF17
     /tmp/ccmN9ltC.s:2248   .debug_str:0000000000000348 .LASF18
     /tmp/ccmN9ltC.s:2210   .debug_str:000000000000024f .LASF19
     /tmp/ccmN9ltC.s:2272   .debug_str:00000000000003dc .LASF52
     /tmp/ccmN9ltC.s:2318   .debug_str:00000000000005f4 .LASF54
     /tmp/ccmN9ltC.s:2134   .debug_str:0000000000000018 .LASF20
     /tmp/ccmN9ltC.s:2174   .debug_str:0000000000000128 .LASF22
     /tmp/ccmN9ltC.s:2170   .debug_str:0000000000000117 .LASF24
     /tmp/ccmN9ltC.s:2168   .debug_str:0000000000000102 .LASF26
     /tmp/ccmN9ltC.s:2284   .debug_str:000000000000043e .LASF21
     /tmp/ccmN9ltC.s:2264   .debug_str:00000000000003b0 .LASF23
     /tmp/ccmN9ltC.s:2298   .debug_str:00000000000004ab .LASF25
     /tmp/ccmN9ltC.s:2294   .debug_str:0000000000000486 .LASF27
     /tmp/ccmN9ltC.s:2186   .debug_str:000000000000019a .LASF28
     /tmp/ccmN9ltC.s:2164   .debug_str:00000000000000de .LASF29
     /tmp/ccmN9ltC.s:2130   .debug_str:0000000000000000 .LASF30
     /tmp/ccmN9ltC.s:2196   .debug_str:00000000000001e3 .LASF31
     /tmp/ccmN9ltC.s:2146   .debug_str:0000000000000056 .LASF32
     /tmp/ccmN9ltC.s:2152   .debug_str:0000000000000075 .LASF33
     /tmp/ccmN9ltC.s:2322   .debug_str:0000000000000617 .LASF34
     /tmp/ccmN9ltC.s:2176   .debug_str:000000000000013d .LASF35
     /tmp/ccmN9ltC.s:2238   .debug_str:0000000000000323 .LASF36
     /tmp/ccmN9ltC.s:2314   .debug_str:00000000000005dc .LASF37
     /tmp/ccmN9ltC.s:2142   .debug_str:0000000000000036 .LASF38
     /tmp/ccmN9ltC.s:2184   .debug_str:0000000000000187 .LASF39
GAS LISTING /tmp/ccmN9ltC.s 			page 16


     /tmp/ccmN9ltC.s:2188   .debug_str:00000000000001a2 .LASF40
     /tmp/ccmN9ltC.s:2296   .debug_str:0000000000000499 .LASF41
     /tmp/ccmN9ltC.s:2140   .debug_str:0000000000000030 .LASF42
     /tmp/ccmN9ltC.s:2328   .debug_str:000000000000063b .LASF43
     /tmp/ccmN9ltC.s:2320   .debug_str:000000000000060c .LASF44
     /tmp/ccmN9ltC.s:2278   .debug_str:0000000000000403 .LASF45
     /tmp/ccmN9ltC.s:2252   .debug_str:0000000000000357 .LASF46
     /tmp/ccmN9ltC.s:2292   .debug_str:000000000000046e .LASF47
     /tmp/ccmN9ltC.s:2156   .debug_str:00000000000000a5 .LASF48
     /tmp/ccmN9ltC.s:2200   .debug_str:00000000000001fc .LASF49
     /tmp/ccmN9ltC.s:2230   .debug_str:00000000000002e9 .LASF50
     /tmp/ccmN9ltC.s:2194   .debug_str:00000000000001cd .LASF51
     /tmp/ccmN9ltC.s:2286   .debug_str:0000000000000445 .LASF53
     /tmp/ccmN9ltC.s:2154   .debug_str:0000000000000089 .LASF55
     /tmp/ccmN9ltC.s:2306   .debug_str:0000000000000595 .LASF74
     /tmp/ccmN9ltC.s:2214   .debug_str:0000000000000260 .LASF76
     /tmp/ccmN9ltC.s:2138   .debug_str:0000000000000028 .LASF91
     /tmp/ccmN9ltC.s:2198   .debug_str:00000000000001f7 .LASF57
     /tmp/ccmN9ltC.s:2266   .debug_str:00000000000003c3 .LASF59
     /tmp/ccmN9ltC.s:2260   .debug_str:0000000000000396 .LASF61
     /tmp/ccmN9ltC.s:2190   .debug_str:00000000000001a8 .LASF63
     /tmp/ccmN9ltC.s:2228   .debug_str:00000000000002dd .LASF58
     /tmp/ccmN9ltC.s:2324   .debug_str:000000000000061f .LASF60
     /tmp/ccmN9ltC.s:2222   .debug_str:00000000000002b4 .LASF62
     /tmp/ccmN9ltC.s:2144   .debug_str:000000000000003d .LASF64
     /tmp/ccmN9ltC.s:2160   .debug_str:00000000000000bb .LASF65
     /tmp/ccmN9ltC.s:2220   .debug_str:0000000000000298 .LASF66
     /tmp/ccmN9ltC.s:2270   .debug_str:00000000000003d7 .LASF92
     /tmp/ccmN9ltC.s:2276   .debug_str:00000000000003fd .LASF67
     /tmp/ccmN9ltC.s:2232   .debug_str:00000000000002f3 .LASF68
     /tmp/ccmN9ltC.s:2172   .debug_str:0000000000000120 .LASF93
     /tmp/ccmN9ltC.s:2288   .debug_str:0000000000000454 .LASF94
     /tmp/ccmN9ltC.s:2208   .debug_str:000000000000024a .LASF69
     /tmp/ccmN9ltC.s:2242   .debug_str:0000000000000333 .LASF70
     /tmp/ccmN9ltC.s:2212   .debug_str:0000000000000258 .LASF71
     /tmp/ccmN9ltC.s:2246   .debug_str:000000000000033e .LASF72
     /tmp/ccmN9ltC.s:2206   .debug_str:0000000000000241 .LASF73
     /tmp/ccmN9ltC.s:2224   .debug_str:00000000000002c1 .LASF75
     /tmp/ccmN9ltC.s:2310   .debug_str:00000000000005b8 .LASF77
     /tmp/ccmN9ltC.s:2308   .debug_str:00000000000005aa .LASF95
     /tmp/ccmN9ltC.s:2202   .debug_str:0000000000000212 .LASF96
     /tmp/ccmN9ltC.s:2240   .debug_str:000000000000032a .LASF78
     /tmp/ccmN9ltC.s:2178   .debug_str:0000000000000151 .LASF79
     /tmp/ccmN9ltC.s:2282   .debug_str:000000000000042d .LASF97
     /tmp/ccmN9ltC.s:2218   .debug_str:000000000000028d .LASF80
     /tmp/ccmN9ltC.s:2312   .debug_str:00000000000005d1 .LASF81
     /tmp/ccmN9ltC.s:2180   .debug_str:0000000000000164 .LASF82
     /tmp/ccmN9ltC.s:46     .text:0000000000000020 .LFB34
     /tmp/ccmN9ltC.s:333    .text:0000000000000148 .LFE34
     /tmp/ccmN9ltC.s:2136   .debug_str:0000000000000021 .LASF83
     /tmp/ccmN9ltC.s:2047   .debug_loc:0000000000000000 .LLST0
     /tmp/ccmN9ltC.s:114    .text:0000000000000078 .LBB49
     /tmp/ccmN9ltC.s:198    .text:00000000000000c4 .LBE49
     /tmp/ccmN9ltC.s:2244   .debug_str:0000000000000339 .LASF84
     /tmp/ccmN9ltC.s:2268   .debug_str:00000000000003cf .LASF85
     /tmp/ccmN9ltC.s:116    .text:0000000000000078 .LBB50
     /tmp/ccmN9ltC.s:131    .text:0000000000000084 .LBE50
GAS LISTING /tmp/ccmN9ltC.s 			page 17


     /tmp/ccmN9ltC.s:137    .text:000000000000008c .LBB52
     /tmp/ccmN9ltC.s:152    .text:0000000000000098 .LBE52
     /tmp/ccmN9ltC.s:167    .text:00000000000000b4 .LBB54
     /tmp/ccmN9ltC.s:178    .text:00000000000000b8 .LBE54
     /tmp/ccmN9ltC.s:2072   .debug_loc:0000000000000071 .LLST5
     /tmp/ccmN9ltC.s:183    .text:00000000000000bc .LBB56
     /tmp/ccmN9ltC.s:197    .text:00000000000000c4 .LBE56
     /tmp/ccmN9ltC.s:2079   .debug_loc:0000000000000094 .LLST6
     /tmp/ccmN9ltC.s:162    .text:00000000000000b0 .LVL3
     /tmp/ccmN9ltC.s:239    .text:00000000000000f4 .LBB40
     /tmp/ccmN9ltC.s:321    .text:000000000000013c .LBE40
     /tmp/ccmN9ltC.s:241    .text:00000000000000f4 .LBB41
     /tmp/ccmN9ltC.s:256    .text:0000000000000100 .LBE41
     /tmp/ccmN9ltC.s:260    .text:0000000000000104 .LBB43
     /tmp/ccmN9ltC.s:275    .text:0000000000000110 .LBE43
     /tmp/ccmN9ltC.s:290    .text:000000000000012c .LBB45
     /tmp/ccmN9ltC.s:301    .text:0000000000000130 .LBE45
     /tmp/ccmN9ltC.s:2086   .debug_loc:00000000000000b7 .LLST3
     /tmp/ccmN9ltC.s:306    .text:0000000000000134 .LBB47
     /tmp/ccmN9ltC.s:320    .text:000000000000013c .LBE47
     /tmp/ccmN9ltC.s:2093   .debug_loc:00000000000000da .LLST4
     /tmp/ccmN9ltC.s:285    .text:0000000000000128 .LVL12
     /tmp/ccmN9ltC.s:58     .text:0000000000000030 .LBB30
     /tmp/ccmN9ltC.s:75     .text:000000000000003c .LBE30
     /tmp/ccmN9ltC.s:202    .text:00000000000000c4 .LBB35
     /tmp/ccmN9ltC.s:214    .text:00000000000000cc .LBE35
     /tmp/ccmN9ltC.s:2100   .debug_loc:00000000000000fd .LLST1
     /tmp/ccmN9ltC.s:228    .text:00000000000000ec .LBB38
     /tmp/ccmN9ltC.s:236    .text:00000000000000f0 .LBE38
     /tmp/ccmN9ltC.s:2108   .debug_loc:0000000000000121 .LLST2
     /tmp/ccmN9ltC.s:327    .text:0000000000000144 .LVL17
     /tmp/ccmN9ltC.s:10     .text:0000000000000000 .LFB33
     /tmp/ccmN9ltC.s:40     .text:0000000000000020 .LFE33
     /tmp/ccmN9ltC.s:2316   .debug_str:00000000000005ef .LASF98
     /tmp/ccmN9ltC.s:2326   .debug_str:0000000000000636 .LASF86
     /tmp/ccmN9ltC.s:2166   .debug_str:00000000000000f2 .LASF99
     /tmp/ccmN9ltC.s:73     .text:000000000000003c .LVL0
     /tmp/ccmN9ltC.s:96     .text:0000000000000068 .LVL1
     /tmp/ccmN9ltC.s:110    .text:0000000000000078 .LVL2
     /tmp/ccmN9ltC.s:194    .text:00000000000000c4 .LVL7
     /tmp/ccmN9ltC.s:218    .text:00000000000000d4 .LVL9
     /tmp/ccmN9ltC.s:317    .text:000000000000013c .LVL16
     /tmp/ccmN9ltC.s:166    .text:00000000000000b4 .LVL4
     /tmp/ccmN9ltC.s:175    .text:00000000000000b8 .LVL5
     /tmp/ccmN9ltC.s:182    .text:00000000000000bc .LVL6
     /tmp/ccmN9ltC.s:289    .text:000000000000012c .LVL13
     /tmp/ccmN9ltC.s:298    .text:0000000000000130 .LVL14
     /tmp/ccmN9ltC.s:305    .text:0000000000000134 .LVL15
     /tmp/ccmN9ltC.s:211    .text:00000000000000cc .LVL8
     /tmp/ccmN9ltC.s:227    .text:00000000000000ec .LVL10
     /tmp/ccmN9ltC.s:234    .text:00000000000000f0 .LVL11
     /tmp/ccmN9ltC.s:339    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB7runningE
GAS LISTING /tmp/ccmN9ltC.s 			page 18


console_handler
