GAS LISTING /tmp/cckMM0vM.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB33:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::popSppSpie()
  10:src/riscv.cpp **** {
  12              		.loc 1 10 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 11 5
  21              		.loc 1 11 39 is_stmt 0
  22              	#APP
  23              	# 11 "src/riscv.cpp" 1
  12              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              		.loc 1 12 30 is_stmt 0
  28              	# 12 "src/riscv.cpp" 1
  13              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 13 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE33:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB34:
  14:src/riscv.cpp **** 
GAS LISTING /tmp/cckMM0vM.s 			page 2


  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  16:src/riscv.cpp **** {
  47              		.loc 1 16 1 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FB 		addi	sp,sp,-80
  50              		.cfi_def_cfa_offset 80
  51 0024 23341104 		sd	ra,72(sp)
  52 0028 23308104 		sd	s0,64(sp)
  53 002c 233C9102 		sd	s1,56(sp)
  54 0030 23382103 		sd	s2,48(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040105 		addi	s0,sp,80
  60              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp ****     uint64 scause = r_scause();
  61              		.loc 1 17 5
  62              	.LBB30:
  63              	.LBB31:
  64              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
GAS LISTING /tmp/cckMM0vM.s 			page 3


  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  65              		.loc 2 91 5
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
GAS LISTING /tmp/cckMM0vM.s 			page 4


  66              		.loc 2 92 5
  67              		.loc 2 92 72 is_stmt 0
  68              	#APP
  69              	# 92 "src/../h/riscv.hpp" 1
  93              	    return scause;
  70              		csrr a5, scause
  71              	# 0 "" 2
  72              	#NO_APP
  73 003c 233CF4FA 		sd	a5,-72(s0)
  74              		.loc 2 93 5 is_stmt 1
  75              		.loc 2 93 12 is_stmt 0
  76 0040 033784FB 		ld	a4,-72(s0)
  77              	.LVL0:
  78              	.LBE31:
  79              	.LBE30:
  18:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
  80              		.loc 1 18 5 is_stmt 1
  81              	.LBB32:
  82              		.loc 1 18 40 is_stmt 0
  83 0044 930687FF 		addi	a3,a4,-8
  84              		.loc 1 18 5
  85 0048 93071000 		li	a5,1
  86 004c 63FED702 		bleu	a3,a5,.L9
  87              	.LBE32:
  19:src/riscv.cpp ****     {
  20:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  21:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4;
  22:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
  23:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  24:src/riscv.cpp ****         TCB::dispatch();
  25:src/riscv.cpp ****         w_sstatus(sstatus);
  26:src/riscv.cpp ****         w_sepc(sepc);
  27:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL)
  88              		.loc 1 27 12 is_stmt 1
  89              	.LBB60:
  90              	.LBB33:
  91 0050 9307F0FF 		li	a5,-1
  92 0054 9397F703 		slli	a5,a5,63
  93 0058 93871700 		addi	a5,a5,1
  94 005c 6304F706 		beq	a4,a5,.L10
  28:src/riscv.cpp ****     {
  29:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  30:src/riscv.cpp ****         TCB::timeSliceCounter++;
  31:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  32:src/riscv.cpp ****         {
  33:src/riscv.cpp ****             uint64 sepc = r_sepc();
  34:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
  35:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
  36:src/riscv.cpp ****             TCB::dispatch();
  37:src/riscv.cpp ****             w_sstatus(sstatus);
  38:src/riscv.cpp ****             w_sepc(sepc);
  39:src/riscv.cpp ****         }
  40:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  41:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL)
  95              		.loc 1 41 12
  96 0060 9307F0FF 		li	a5,-1
  97 0064 9397F703 		slli	a5,a5,63
GAS LISTING /tmp/cckMM0vM.s 			page 5


  98 0068 93879700 		addi	a5,a5,9
  99 006c 6302F70C 		beq	a4,a5,.L11
 100              	.LVL1:
 101              	.L3:
 102              	.LBE33:
 103              	.LBE60:
  42:src/riscv.cpp ****     {
  43:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  44:src/riscv.cpp ****         console_handler();
  45:src/riscv.cpp ****     } else
  46:src/riscv.cpp ****     {
  47:src/riscv.cpp ****         // unexpected trap cause
  48:src/riscv.cpp ****     }
  49:src/riscv.cpp **** }...
 104              		.loc 1 49 1 is_stmt 0
 105 0070 83308104 		ld	ra,72(sp)
 106              		.cfi_remember_state
 107              		.cfi_restore 1
 108 0074 03340104 		ld	s0,64(sp)
 109              		.cfi_restore 8
 110              		.cfi_def_cfa 2, 80
 111 0078 83348103 		ld	s1,56(sp)
 112              		.cfi_restore 9
 113 007c 03390103 		ld	s2,48(sp)
 114              		.cfi_restore 18
 115 0080 13010105 		addi	sp,sp,80
 116              		.cfi_def_cfa_offset 0
 117 0084 67800000 		jr	ra
 118              	.LVL2:
 119              	.L9:
 120              		.cfi_restore_state
 121              	.LBB61:
 122              	.LBB50:
  21:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 123              		.loc 1 21 9 is_stmt 1
 124              	.LBB51:
 125              	.LBB52:
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 126              		.loc 2 103 5
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 127              		.loc 2 104 5
 128              		.loc 2 104 64 is_stmt 0
 129              	#APP
 130              	# 104 "src/../h/riscv.hpp" 1
 105              	    return sepc;
 131              		csrr a5, sepc
 132              	# 0 "" 2
 133              	#NO_APP
GAS LISTING /tmp/cckMM0vM.s 			page 6


 134 008c 2334F4FC 		sd	a5,-56(s0)
 135              		.loc 2 105 5 is_stmt 1
 136              		.loc 2 105 12 is_stmt 0
 137 0090 833484FC 		ld	s1,-56(s0)
 138              	.LBE52:
 139              	.LBE51:
  21:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 140              		.loc 1 21 34
 141 0094 93844400 		addi	s1,s1,4
 142              	.LVL3:
  22:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 143              		.loc 1 22 9 is_stmt 1
 144              	.LBB53:
 145              	.LBB54:
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
GAS LISTING /tmp/cckMM0vM.s 			page 7


 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 146              		.loc 2 171 5
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 147              		.loc 2 172 5
 148              		.loc 2 172 76 is_stmt 0
 149              	#APP
 150              	# 172 "src/../h/riscv.hpp" 1
 173              	    return sstatus;
 151              		csrr a5, sstatus
 152              	# 0 "" 2
 153              	#NO_APP
 154 009c 2330F4FC 		sd	a5,-64(s0)
 155              		.loc 2 173 5 is_stmt 1
 156              		.loc 2 173 12 is_stmt 0
 157 00a0 033904FC 		ld	s2,-64(s0)
 158              	.LVL4:
 159              	.LBE54:
 160              	.LBE53:
  23:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 161              		.loc 1 23 9 is_stmt 1
  23:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 162              		.loc 1 23 31 is_stmt 0
 163 00a4 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 163      83B70700 
 164 00ac 23B00700 		sd	zero,0(a5)
  24:src/riscv.cpp ****         TCB::dispatch();
 165              		.loc 1 24 9 is_stmt 1
  24:src/riscv.cpp ****         TCB::dispatch();
 166              		.loc 1 24 22 is_stmt 0
 167 00b0 97000000 		call	_ZN3TCB8dispatchEv@plt
 167      E7800000 
 168              	.LVL5:
  25:src/riscv.cpp ****         w_sstatus(sstatus);
 169              		.loc 1 25 9 is_stmt 1
 170              	.LBB55:
GAS LISTING /tmp/cckMM0vM.s 			page 8


 171              	.LBB56:
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 172              		.loc 2 178 5
 173              		.loc 2 178 77 is_stmt 0
 174              	#APP
 175              	# 178 "src/../h/riscv.hpp" 1
 179              	}
 176              		csrw sstatus, s2
 177              	# 0 "" 2
 178              	.LVL6:
 179              	#NO_APP
 180              	.LBE56:
 181              	.LBE55:
  26:src/riscv.cpp ****         w_sepc(sepc);
 182              		.loc 1 26 9 is_stmt 1
 183              	.LBB57:
 184              	.LBB58:
 110:src/../h/riscv.hpp **** }
 185              		.loc 2 110 5
 110:src/../h/riscv.hpp **** }
 186              		.loc 2 110 65 is_stmt 0
 187              	#APP
 188              	# 110 "src/../h/riscv.hpp" 1
 111:src/../h/riscv.hpp **** 
 189              		csrw sepc, s1
 190              	# 0 "" 2
 191              		.loc 2 111 1
 192              	#NO_APP
 193 00c0 6FF01FFB 		j	.L3
 194              	.LVL7:
 195              	.L10:
 196              	.LBE58:
 197              	.LBE57:
 198              	.LBE50:
 199              	.LBB59:
 200              	.LBB34:
  30:src/riscv.cpp ****         TCB::timeSliceCounter++;
 201              		.loc 1 30 9 is_stmt 1
  30:src/riscv.cpp ****         TCB::timeSliceCounter++;
 202              		.loc 1 30 30 is_stmt 0
 203 00c4 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 203      03370700 
 204              	.LVL8:
 205 00cc 83370700 		ld	a5,0(a4)
 206 00d0 93871700 		addi	a5,a5,1
 207 00d4 2330F700 		sd	a5,0(a4)
  31:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 208              		.loc 1 31 9 is_stmt 1
 209              	.LBB35:
  31:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 210              		.loc 1 31 64 is_stmt 0
 211 00d8 17070000 		la	a4,_ZN3TCB7runningE
 211      03370700 
GAS LISTING /tmp/cckMM0vM.s 			page 9


 212 00e0 03370700 		ld	a4,0(a4)
 213              	.LVL9:
 214              	.LBB36:
 215              	.LBB37:
 216              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 217              		.loc 3 21 35 is_stmt 1
 218              		.loc 3 21 42 is_stmt 0
 219 00e4 03370702 		ld	a4,32(a4)
 220              	.LVL10:
 221              	.LBE37:
 222              	.LBE36:
  31:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 223              		.loc 1 31 9
 224 00e8 63F8E700 		bgeu	a5,a4,.L12
 225              	.LVL11:
 226              	.L7:
 227              	.LBE35:
  40:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 228              		.loc 1 40 9 is_stmt 1
 229              	.LBB47:
 230              	.LBB48:
 144:src/../h/riscv.hpp **** }
 231              		.loc 2 144 5
 144:src/../h/riscv.hpp **** }
 232              		.loc 2 144 64 is_stmt 0
 233 00ec 93072000 		li	a5,2
 234              	#APP
 235              	# 144 "src/../h/riscv.hpp" 1
 145:src/../h/riscv.hpp **** 
 236              		csrc sip, a5
 237              	# 0 "" 2
 238              		.loc 2 145 1
 239              	#NO_APP
 240 00f4 6FF0DFF7 		j	.L3
 241              	.LVL12:
 242              	.L12:
GAS LISTING /tmp/cckMM0vM.s 			page 10


 243              	.LBE48:
 244              	.LBE47:
 245              	.LBB49:
 246              	.LBB38:
  33:src/riscv.cpp ****             uint64 sepc = r_sepc();
 247              		.loc 1 33 13 is_stmt 1
 248              	.LBB39:
 249              	.LBB40:
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 250              		.loc 2 103 5
 104:src/../h/riscv.hpp ****     return sepc;
 251              		.loc 2 104 5
 104:src/../h/riscv.hpp ****     return sepc;
 252              		.loc 2 104 64 is_stmt 0
 253              	#APP
 254              	# 104 "src/../h/riscv.hpp" 1
 255              		csrr a5, sepc
 256              	# 0 "" 2
 257              	#NO_APP
 258 00fc 233CF4FC 		sd	a5,-40(s0)
 105:src/../h/riscv.hpp **** }
 259              		.loc 2 105 5 is_stmt 1
 105:src/../h/riscv.hpp **** }
 260              		.loc 2 105 12 is_stmt 0
 261 0100 833484FD 		ld	s1,-40(s0)
 262              	.LVL13:
 263              	.LBE40:
 264              	.LBE39:
  34:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
 265              		.loc 1 34 13 is_stmt 1
 266              	.LBB41:
 267              	.LBB42:
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 268              		.loc 2 171 5
 172:src/../h/riscv.hpp ****     return sstatus;
 269              		.loc 2 172 5
 172:src/../h/riscv.hpp ****     return sstatus;
 270              		.loc 2 172 76 is_stmt 0
 271              	#APP
 272              	# 172 "src/../h/riscv.hpp" 1
 273              		csrr a5, sstatus
 274              	# 0 "" 2
 275              	#NO_APP
 276 0108 2338F4FC 		sd	a5,-48(s0)
 173:src/../h/riscv.hpp **** }
 277              		.loc 2 173 5 is_stmt 1
 173:src/../h/riscv.hpp **** }
 278              		.loc 2 173 12 is_stmt 0
 279 010c 033904FD 		ld	s2,-48(s0)
 280              	.LVL14:
 281              	.LBE42:
 282              	.LBE41:
  35:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 283              		.loc 1 35 13 is_stmt 1
  35:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 284              		.loc 1 35 35 is_stmt 0
 285 0110 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
GAS LISTING /tmp/cckMM0vM.s 			page 11


 285      83B70700 
 286 0118 23B00700 		sd	zero,0(a5)
  36:src/riscv.cpp ****             TCB::dispatch();
 287              		.loc 1 36 13 is_stmt 1
  36:src/riscv.cpp ****             TCB::dispatch();
 288              		.loc 1 36 26 is_stmt 0
 289 011c 97000000 		call	_ZN3TCB8dispatchEv@plt
 289      E7800000 
 290              	.LVL15:
  37:src/riscv.cpp ****             w_sstatus(sstatus);
 291              		.loc 1 37 13 is_stmt 1
 292              	.LBB43:
 293              	.LBB44:
 178:src/../h/riscv.hpp **** }
 294              		.loc 2 178 5
 178:src/../h/riscv.hpp **** }
 295              		.loc 2 178 77 is_stmt 0
 296              	#APP
 297              	# 178 "src/../h/riscv.hpp" 1
 298              		csrw sstatus, s2
 299              	# 0 "" 2
 300              	.LVL16:
 301              	#NO_APP
 302              	.LBE44:
 303              	.LBE43:
  38:src/riscv.cpp ****             w_sepc(sepc);
 304              		.loc 1 38 13 is_stmt 1
 305              	.LBB45:
 306              	.LBB46:
 110:src/../h/riscv.hpp **** }
 307              		.loc 2 110 5
 110:src/../h/riscv.hpp **** }
 308              		.loc 2 110 65 is_stmt 0
 309              	#APP
 310              	# 110 "src/../h/riscv.hpp" 1
 111:src/../h/riscv.hpp **** 
 311              		csrw sepc, s1
 312              	# 0 "" 2
 313              		.loc 2 111 1
 314              	#NO_APP
 315 012c 6FF01FFC 		j	.L7
 316              	.LVL17:
 317              	.L11:
 318              	.LBE46:
 319              	.LBE45:
 320              	.LBE38:
 321              	.LBE49:
 322              	.LBE34:
  44:src/riscv.cpp ****         console_handler();
 323              		.loc 1 44 9 is_stmt 1
  44:src/riscv.cpp ****         console_handler();
 324              		.loc 1 44 24 is_stmt 0
 325 0130 97000000 		call	console_handler@plt
 325      E7800000 
 326              	.LVL18:
 327              	.LBE59:
 328              	.LBE61:
GAS LISTING /tmp/cckMM0vM.s 			page 12


 329              		.loc 1 49 1
 330 0138 6FF09FF3 		j	.L3
 331              		.cfi_endproc
 332              	.LFE34:
 334              	.Letext0:
 335              		.file 4 "src/../h/../lib/hw.h"
 336              		.file 5 "src/../lib/console.h"
GAS LISTING /tmp/cckMM0vM.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cckMM0vM.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cckMM0vM.s:13     .text:0000000000000000 .L0 
     /tmp/cckMM0vM.s:14     .text:0000000000000000 .L0 
     /tmp/cckMM0vM.s:15     .text:0000000000000004 .L0 
     /tmp/cckMM0vM.s:17     .text:0000000000000008 .L0 
     /tmp/cckMM0vM.s:19     .text:000000000000000c .L0 
     /tmp/cckMM0vM.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:11     .text:000000000000000c .L0 
     /tmp/cckMM0vM.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:12     .text:0000000000000010 .L0 
     /tmp/cckMM0vM.s:33     .text:0000000000000014 .L0 
     /tmp/cckMM0vM.s:34     .text:0000000000000018 .L0 
     /tmp/cckMM0vM.s:35     .text:0000000000000018 .L0 
     /tmp/cckMM0vM.s:37     .text:000000000000001c .L0 
     /tmp/cckMM0vM.s:39     .text:0000000000000020 .L0 
     /tmp/cckMM0vM.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cckMM0vM.s:48     .text:0000000000000020 .L0 
     /tmp/cckMM0vM.s:49     .text:0000000000000020 .L0 
     /tmp/cckMM0vM.s:50     .text:0000000000000024 .L0 
     /tmp/cckMM0vM.s:55     .text:0000000000000034 .L0 
     /tmp/cckMM0vM.s:56     .text:0000000000000034 .L0 
     /tmp/cckMM0vM.s:57     .text:0000000000000034 .L0 
     /tmp/cckMM0vM.s:58     .text:0000000000000034 .L0 
     /tmp/cckMM0vM.s:60     .text:0000000000000038 .L0 
     /tmp/cckMM0vM.s:65     .text:0000000000000038 .L0 
     /tmp/cckMM0vM.s:66     .text:0000000000000038 .L0 
     /tmp/cckMM0vM.s:67     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:92     .text:0000000000000038 .L0 
     /tmp/cckMM0vM.s:75     .text:0000000000000040 .L0 
     /tmp/cckMM0vM.s:76     .text:0000000000000040 .L0 
     /tmp/cckMM0vM.s:82     .text:0000000000000044 .L0 
     /tmp/cckMM0vM.s:83     .text:0000000000000044 .L0 
     /tmp/cckMM0vM.s:85     .text:0000000000000048 .L0 
     /tmp/cckMM0vM.s:91     .text:0000000000000050 .L0 
     /tmp/cckMM0vM.s:96     .text:0000000000000060 .L0 
     /tmp/cckMM0vM.s:105    .text:0000000000000070 .L0 
     /tmp/cckMM0vM.s:106    .text:0000000000000074 .L0 
     /tmp/cckMM0vM.s:107    .text:0000000000000074 .L0 
     /tmp/cckMM0vM.s:109    .text:0000000000000078 .L0 
     /tmp/cckMM0vM.s:110    .text:0000000000000078 .L0 
     /tmp/cckMM0vM.s:112    .text:000000000000007c .L0 
     /tmp/cckMM0vM.s:114    .text:0000000000000080 .L0 
     /tmp/cckMM0vM.s:116    .text:0000000000000084 .L0 
     /tmp/cckMM0vM.s:120    .text:0000000000000088 .L0 
     /tmp/cckMM0vM.s:126    .text:0000000000000088 .L0 
     /tmp/cckMM0vM.s:127    .text:0000000000000088 .L0 
     /tmp/cckMM0vM.s:128    .text:0000000000000088 .L0 
  src/../h/riscv.hpp:104    .text:0000000000000088 .L0 
     /tmp/cckMM0vM.s:136    .text:0000000000000090 .L0 
     /tmp/cckMM0vM.s:137    .text:0000000000000090 .L0 
     /tmp/cckMM0vM.s:141    .text:0000000000000094 .L0 
     /tmp/cckMM0vM.s:146    .text:0000000000000098 .L0 
     /tmp/cckMM0vM.s:147    .text:0000000000000098 .L0 
     /tmp/cckMM0vM.s:148    .text:0000000000000098 .L0 
  src/../h/riscv.hpp:172    .text:0000000000000098 .L0 
GAS LISTING /tmp/cckMM0vM.s 			page 14


     /tmp/cckMM0vM.s:156    .text:00000000000000a0 .L0 
     /tmp/cckMM0vM.s:157    .text:00000000000000a0 .L0 
     /tmp/cckMM0vM.s:162    .text:00000000000000a4 .L0 
     /tmp/cckMM0vM.s:163    .text:00000000000000a4 .L0 
     /tmp/cckMM0vM.s:166    .text:00000000000000b0 .L0 
     /tmp/cckMM0vM.s:167    .text:00000000000000b0 .L0 
     /tmp/cckMM0vM.s:172    .text:00000000000000b8 .L0 
     /tmp/cckMM0vM.s:173    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:178    .text:00000000000000b8 .L0 
     /tmp/cckMM0vM.s:185    .text:00000000000000bc .L0 
     /tmp/cckMM0vM.s:186    .text:00000000000000bc .L0 
  src/../h/riscv.hpp:110    .text:00000000000000bc .L0 
     /tmp/cckMM0vM.s:193    .text:00000000000000c0 .L0 
     /tmp/cckMM0vM.s:202    .text:00000000000000c4 .L0 
     /tmp/cckMM0vM.s:203    .text:00000000000000c4 .L0 
     /tmp/cckMM0vM.s:210    .text:00000000000000d8 .L0 
     /tmp/cckMM0vM.s:211    .text:00000000000000d8 .L0 
     /tmp/cckMM0vM.s:218    .text:00000000000000e4 .L0 
     /tmp/cckMM0vM.s:219    .text:00000000000000e4 .L0 
     /tmp/cckMM0vM.s:224    .text:00000000000000e8 .L0 
     /tmp/cckMM0vM.s:231    .text:00000000000000ec .L0 
     /tmp/cckMM0vM.s:232    .text:00000000000000ec .L0 
     /tmp/cckMM0vM.s:233    .text:00000000000000ec .L0 
     /tmp/cckMM0vM.s:240    .text:00000000000000f4 .L0 
     /tmp/cckMM0vM.s:250    .text:00000000000000f8 .L0 
     /tmp/cckMM0vM.s:251    .text:00000000000000f8 .L0 
     /tmp/cckMM0vM.s:252    .text:00000000000000f8 .L0 
  src/../h/riscv.hpp:104    .text:00000000000000f8 .L0 
     /tmp/cckMM0vM.s:260    .text:0000000000000100 .L0 
     /tmp/cckMM0vM.s:261    .text:0000000000000100 .L0 
     /tmp/cckMM0vM.s:268    .text:0000000000000104 .L0 
     /tmp/cckMM0vM.s:269    .text:0000000000000104 .L0 
     /tmp/cckMM0vM.s:270    .text:0000000000000104 .L0 
  src/../h/riscv.hpp:172    .text:0000000000000104 .L0 
     /tmp/cckMM0vM.s:278    .text:000000000000010c .L0 
     /tmp/cckMM0vM.s:279    .text:000000000000010c .L0 
     /tmp/cckMM0vM.s:284    .text:0000000000000110 .L0 
     /tmp/cckMM0vM.s:285    .text:0000000000000110 .L0 
     /tmp/cckMM0vM.s:288    .text:000000000000011c .L0 
     /tmp/cckMM0vM.s:289    .text:000000000000011c .L0 
     /tmp/cckMM0vM.s:294    .text:0000000000000124 .L0 
     /tmp/cckMM0vM.s:295    .text:0000000000000124 .L0 
  src/../h/riscv.hpp:178    .text:0000000000000124 .L0 
     /tmp/cckMM0vM.s:307    .text:0000000000000128 .L0 
     /tmp/cckMM0vM.s:308    .text:0000000000000128 .L0 
  src/../h/riscv.hpp:110    .text:0000000000000128 .L0 
     /tmp/cckMM0vM.s:315    .text:000000000000012c .L0 
     /tmp/cckMM0vM.s:324    .text:0000000000000130 .L0 
     /tmp/cckMM0vM.s:325    .text:0000000000000130 .L0 
     /tmp/cckMM0vM.s:330    .text:0000000000000138 .L0 
     /tmp/cckMM0vM.s:331    .text:000000000000013c .L0 
     /tmp/cckMM0vM.s:337    .text:000000000000013c .L0 
     /tmp/cckMM0vM.s:163    .text:00000000000000a4 .L0 
     /tmp/cckMM0vM.s:203    .text:00000000000000c4 .L0 
     /tmp/cckMM0vM.s:211    .text:00000000000000d8 .L0 
     /tmp/cckMM0vM.s:285    .text:0000000000000110 .L0 
     /tmp/cckMM0vM.s:119    .text:0000000000000088 .L9
GAS LISTING /tmp/cckMM0vM.s 			page 15


     /tmp/cckMM0vM.s:195    .text:00000000000000c4 .L10
     /tmp/cckMM0vM.s:317    .text:0000000000000130 .L11
     /tmp/cckMM0vM.s:101    .text:0000000000000070 .L3
     /tmp/cckMM0vM.s:242    .text:00000000000000f8 .L12
     /tmp/cckMM0vM.s:226    .text:00000000000000ec .L7
     /tmp/cckMM0vM.s:1217   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cckMM0vM.s:2318   .debug_str:0000000000000532 .LASF87
     /tmp/cckMM0vM.s:2264   .debug_str:00000000000003a5 .LASF88
     /tmp/cckMM0vM.s:2210   .debug_str:000000000000021b .LASF89
     /tmp/cckMM0vM.s:5      .text:0000000000000000 .Ltext0
     /tmp/cckMM0vM.s:334    .text:000000000000013c .Letext0
     /tmp/cckMM0vM.s:2136   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cckMM0vM.s:2242   .debug_str:0000000000000333 .LASF0
     /tmp/cckMM0vM.s:2260   .debug_str:000000000000037f .LASF1
     /tmp/cckMM0vM.s:2232   .debug_str:00000000000002ec .LASF2
     /tmp/cckMM0vM.s:2208   .debug_str:0000000000000214 .LASF4
     /tmp/cckMM0vM.s:2288   .debug_str:0000000000000451 .LASF3
     /tmp/cckMM0vM.s:2154   .debug_str:0000000000000056 .LASF5
     /tmp/cckMM0vM.s:2262   .debug_str:0000000000000392 .LASF6
     /tmp/cckMM0vM.s:2240   .debug_str:0000000000000320 .LASF7
     /tmp/cckMM0vM.s:2312   .debug_str:00000000000004ff .LASF8
     /tmp/cckMM0vM.s:2196   .debug_str:0000000000000199 .LASF9
     /tmp/cckMM0vM.s:2268   .debug_str:00000000000003be .LASF10
     /tmp/cckMM0vM.s:2310   .debug_str:00000000000004f0 .LASF11
     /tmp/cckMM0vM.s:2156   .debug_str:000000000000005d .LASF12
     /tmp/cckMM0vM.s:2140   .debug_str:0000000000000008 .LASF13
     /tmp/cckMM0vM.s:2164   .debug_str:00000000000000a7 .LASF14
     /tmp/cckMM0vM.s:2282   .debug_str:000000000000041d .LASF15
     /tmp/cckMM0vM.s:2168   .debug_str:00000000000000c0 .LASF16
     /tmp/cckMM0vM.s:2256   .debug_str:000000000000036e .LASF56
     /tmp/cckMM0vM.s:2222   .debug_str:000000000000029f .LASF90
     /tmp/cckMM0vM.s:2298   .debug_str:000000000000049b .LASF17
     /tmp/cckMM0vM.s:2254   .debug_str:0000000000000365 .LASF18
     /tmp/cckMM0vM.s:2216   .debug_str:000000000000026c .LASF19
     /tmp/cckMM0vM.s:2280   .debug_str:0000000000000412 .LASF52
     /tmp/cckMM0vM.s:2326   .debug_str:00000000000005f7 .LASF54
     /tmp/cckMM0vM.s:2142   .debug_str:0000000000000018 .LASF20
     /tmp/cckMM0vM.s:2180   .debug_str:0000000000000120 .LASF22
     /tmp/cckMM0vM.s:2176   .debug_str:000000000000010f .LASF24
     /tmp/cckMM0vM.s:2174   .debug_str:00000000000000fa .LASF26
     /tmp/cckMM0vM.s:2292   .debug_str:0000000000000474 .LASF21
     /tmp/cckMM0vM.s:2270   .debug_str:00000000000003cd .LASF23
     /tmp/cckMM0vM.s:2306   .debug_str:00000000000004e1 .LASF25
     /tmp/cckMM0vM.s:2302   .debug_str:00000000000004bc .LASF27
     /tmp/cckMM0vM.s:2190   .debug_str:0000000000000174 .LASF28
     /tmp/cckMM0vM.s:2170   .debug_str:00000000000000d6 .LASF29
     /tmp/cckMM0vM.s:2138   .debug_str:0000000000000000 .LASF30
     /tmp/cckMM0vM.s:2200   .debug_str:00000000000001bd .LASF31
     /tmp/cckMM0vM.s:2308   .debug_str:00000000000004e8 .LASF32
     /tmp/cckMM0vM.s:2158   .debug_str:000000000000006d .LASF33
     /tmp/cckMM0vM.s:2330   .debug_str:000000000000061a .LASF34
     /tmp/cckMM0vM.s:2182   .debug_str:0000000000000135 .LASF35
     /tmp/cckMM0vM.s:2244   .debug_str:0000000000000340 .LASF36
     /tmp/cckMM0vM.s:2322   .debug_str:00000000000005df .LASF37
     /tmp/cckMM0vM.s:2150   .debug_str:0000000000000036 .LASF38
     /tmp/cckMM0vM.s:2188   .debug_str:0000000000000161 .LASF39
     /tmp/cckMM0vM.s:2192   .debug_str:000000000000017c .LASF40
GAS LISTING /tmp/cckMM0vM.s 			page 16


     /tmp/cckMM0vM.s:2304   .debug_str:00000000000004cf .LASF41
     /tmp/cckMM0vM.s:2148   .debug_str:0000000000000030 .LASF42
     /tmp/cckMM0vM.s:2336   .debug_str:000000000000063e .LASF43
     /tmp/cckMM0vM.s:2328   .debug_str:000000000000060f .LASF44
     /tmp/cckMM0vM.s:2286   .debug_str:0000000000000439 .LASF45
     /tmp/cckMM0vM.s:2258   .debug_str:0000000000000374 .LASF46
     /tmp/cckMM0vM.s:2300   .debug_str:00000000000004a4 .LASF47
     /tmp/cckMM0vM.s:2162   .debug_str:000000000000009d .LASF48
     /tmp/cckMM0vM.s:2204   .debug_str:00000000000001d6 .LASF49
     /tmp/cckMM0vM.s:2236   .debug_str:0000000000000306 .LASF50
     /tmp/cckMM0vM.s:2198   .debug_str:00000000000001a7 .LASF51
     /tmp/cckMM0vM.s:2294   .debug_str:000000000000047b .LASF53
     /tmp/cckMM0vM.s:2160   .debug_str:0000000000000081 .LASF55
     /tmp/cckMM0vM.s:2314   .debug_str:000000000000050f .LASF74
     /tmp/cckMM0vM.s:2220   .debug_str:000000000000027d .LASF76
     /tmp/cckMM0vM.s:2146   .debug_str:0000000000000028 .LASF91
     /tmp/cckMM0vM.s:2202   .debug_str:00000000000001d1 .LASF57
     /tmp/cckMM0vM.s:2274   .debug_str:00000000000003f9 .LASF59
     /tmp/cckMM0vM.s:2266   .debug_str:00000000000003b3 .LASF61
     /tmp/cckMM0vM.s:2194   .debug_str:0000000000000182 .LASF63
     /tmp/cckMM0vM.s:2234   .debug_str:00000000000002fa .LASF58
     /tmp/cckMM0vM.s:2332   .debug_str:0000000000000622 .LASF60
     /tmp/cckMM0vM.s:2228   .debug_str:00000000000002d1 .LASF62
     /tmp/cckMM0vM.s:2152   .debug_str:000000000000003d .LASF64
     /tmp/cckMM0vM.s:2166   .debug_str:00000000000000b3 .LASF65
     /tmp/cckMM0vM.s:2226   .debug_str:00000000000002b5 .LASF66
     /tmp/cckMM0vM.s:2278   .debug_str:000000000000040d .LASF92
     /tmp/cckMM0vM.s:2284   .debug_str:0000000000000433 .LASF67
     /tmp/cckMM0vM.s:2238   .debug_str:0000000000000310 .LASF68
     /tmp/cckMM0vM.s:2178   .debug_str:0000000000000118 .LASF93
     /tmp/cckMM0vM.s:2296   .debug_str:000000000000048a .LASF94
     /tmp/cckMM0vM.s:2214   .debug_str:0000000000000267 .LASF69
     /tmp/cckMM0vM.s:2248   .debug_str:0000000000000350 .LASF70
     /tmp/cckMM0vM.s:2218   .debug_str:0000000000000275 .LASF71
     /tmp/cckMM0vM.s:2252   .debug_str:000000000000035b .LASF72
     /tmp/cckMM0vM.s:2212   .debug_str:000000000000025e .LASF73
     /tmp/cckMM0vM.s:2230   .debug_str:00000000000002de .LASF75
     /tmp/cckMM0vM.s:2272   .debug_str:00000000000003e0 .LASF77
     /tmp/cckMM0vM.s:2316   .debug_str:0000000000000524 .LASF95
     /tmp/cckMM0vM.s:2206   .debug_str:00000000000001ec .LASF96
     /tmp/cckMM0vM.s:2246   .debug_str:0000000000000347 .LASF78
     /tmp/cckMM0vM.s:2184   .debug_str:0000000000000149 .LASF79
     /tmp/cckMM0vM.s:2290   .debug_str:0000000000000463 .LASF97
     /tmp/cckMM0vM.s:2224   .debug_str:00000000000002aa .LASF80
     /tmp/cckMM0vM.s:2320   .debug_str:00000000000005d4 .LASF81
     /tmp/cckMM0vM.s:2186   .debug_str:000000000000015c .LASF82
     /tmp/cckMM0vM.s:46     .text:0000000000000020 .LFB34
     /tmp/cckMM0vM.s:332    .text:000000000000013c .LFE34
     /tmp/cckMM0vM.s:2144   .debug_str:0000000000000021 .LASF83
     /tmp/cckMM0vM.s:2021   .debug_loc:0000000000000000 .LLST0
     /tmp/cckMM0vM.s:122    .text:0000000000000088 .LBB50
     /tmp/cckMM0vM.s:198    .text:00000000000000c4 .LBE50
     /tmp/cckMM0vM.s:2250   .debug_str:0000000000000356 .LASF84
     /tmp/cckMM0vM.s:2052   .debug_loc:0000000000000086 .LLST7
     /tmp/cckMM0vM.s:2276   .debug_str:0000000000000405 .LASF85
     /tmp/cckMM0vM.s:2059   .debug_loc:00000000000000a9 .LLST8
     /tmp/cckMM0vM.s:124    .text:0000000000000088 .LBB51
GAS LISTING /tmp/cckMM0vM.s 			page 17


     /tmp/cckMM0vM.s:139    .text:0000000000000094 .LBE51
     /tmp/cckMM0vM.s:144    .text:0000000000000098 .LBB53
     /tmp/cckMM0vM.s:160    .text:00000000000000a4 .LBE53
     /tmp/cckMM0vM.s:170    .text:00000000000000b8 .LBB55
     /tmp/cckMM0vM.s:181    .text:00000000000000bc .LBE55
     /tmp/cckMM0vM.s:2066   .debug_loc:00000000000000cc .LLST9
     /tmp/cckMM0vM.s:183    .text:00000000000000bc .LBB57
     /tmp/cckMM0vM.s:197    .text:00000000000000c4 .LBE57
     /tmp/cckMM0vM.s:2073   .debug_loc:00000000000000ef .LLST10
     /tmp/cckMM0vM.s:168    .text:00000000000000b8 .LVL5
     /tmp/cckMM0vM.s:246    .text:00000000000000f8 .LBB38
     /tmp/cckMM0vM.s:320    .text:0000000000000130 .LBE38
     /tmp/cckMM0vM.s:2080   .debug_loc:0000000000000112 .LLST2
     /tmp/cckMM0vM.s:2087   .debug_loc:0000000000000135 .LLST3
     /tmp/cckMM0vM.s:248    .text:00000000000000f8 .LBB39
     /tmp/cckMM0vM.s:264    .text:0000000000000104 .LBE39
     /tmp/cckMM0vM.s:266    .text:0000000000000104 .LBB41
     /tmp/cckMM0vM.s:282    .text:0000000000000110 .LBE41
     /tmp/cckMM0vM.s:292    .text:0000000000000124 .LBB43
     /tmp/cckMM0vM.s:303    .text:0000000000000128 .LBE43
     /tmp/cckMM0vM.s:2094   .debug_loc:0000000000000158 .LLST4
     /tmp/cckMM0vM.s:305    .text:0000000000000128 .LBB45
     /tmp/cckMM0vM.s:319    .text:0000000000000130 .LBE45
     /tmp/cckMM0vM.s:2101   .debug_loc:000000000000017b .LLST5
     /tmp/cckMM0vM.s:290    .text:0000000000000124 .LVL15
     /tmp/cckMM0vM.s:62     .text:0000000000000038 .LBB30
     /tmp/cckMM0vM.s:79     .text:0000000000000044 .LBE30
     /tmp/cckMM0vM.s:214    .text:00000000000000e4 .LBB36
     /tmp/cckMM0vM.s:222    .text:00000000000000e8 .LBE36
     /tmp/cckMM0vM.s:2108   .debug_loc:000000000000019e .LLST1
     /tmp/cckMM0vM.s:229    .text:00000000000000ec .LBB47
     /tmp/cckMM0vM.s:244    .text:00000000000000f8 .LBE47
     /tmp/cckMM0vM.s:2115   .debug_loc:00000000000001c1 .LLST6
     /tmp/cckMM0vM.s:326    .text:0000000000000138 .LVL18
     /tmp/cckMM0vM.s:10     .text:0000000000000000 .LFB33
     /tmp/cckMM0vM.s:40     .text:0000000000000020 .LFE33
     /tmp/cckMM0vM.s:2324   .debug_str:00000000000005f2 .LASF98
     /tmp/cckMM0vM.s:2334   .debug_str:0000000000000639 .LASF86
     /tmp/cckMM0vM.s:2172   .debug_str:00000000000000ea .LASF99
     /tmp/cckMM0vM.s:77     .text:0000000000000044 .LVL0
     /tmp/cckMM0vM.s:100    .text:0000000000000070 .LVL1
     /tmp/cckMM0vM.s:118    .text:0000000000000088 .LVL2
     /tmp/cckMM0vM.s:194    .text:00000000000000c4 .LVL7
     /tmp/cckMM0vM.s:204    .text:00000000000000cc .LVL8
     /tmp/cckMM0vM.s:225    .text:00000000000000ec .LVL11
     /tmp/cckMM0vM.s:241    .text:00000000000000f8 .LVL12
     /tmp/cckMM0vM.s:316    .text:0000000000000130 .LVL17
     /tmp/cckMM0vM.s:142    .text:0000000000000098 .LVL3
     /tmp/cckMM0vM.s:158    .text:00000000000000a4 .LVL4
     /tmp/cckMM0vM.s:178    .text:00000000000000bc .LVL6
     /tmp/cckMM0vM.s:262    .text:0000000000000104 .LVL13
     /tmp/cckMM0vM.s:280    .text:0000000000000110 .LVL14
     /tmp/cckMM0vM.s:300    .text:0000000000000128 .LVL16
     /tmp/cckMM0vM.s:213    .text:00000000000000e4 .LVL9
     /tmp/cckMM0vM.s:220    .text:00000000000000e8 .LVL10
     /tmp/cckMM0vM.s:338    .debug_info:0000000000000000 .Ldebug_info0

GAS LISTING /tmp/cckMM0vM.s 			page 18


UNDEFINED SYMBOLS
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB7runningE
console_handler
